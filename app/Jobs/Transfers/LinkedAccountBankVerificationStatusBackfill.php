<?php
namespace RZP\Jobs\Transfers;

use RZP\Jobs\Job;
use RZP\Trace\TraceCode;
use RZP\Models\Feature\Core;
use RZP\Models\Merchant\Detail\Service;



class LinkedAccountBankVerificationStatusBackfill extends Job
{

    protected $merchantIds;

    protected $featureInput;

    protected $shouldSync;

    protected $queueConfigKey = 'linked_account_batch';

    public $timeout = 5 * 3600;

    public function __construct(string $mode, array $merchantIds, $featureInput = null, $shouldSync = null)
    {
        parent::__construct($mode);

        $this->merchantIds = $merchantIds;

        $this->featureInput = $featureInput;

        $this->shouldSync = $shouldSync;
    }

    public function handle()
    {
        parent::handle(); // TODO: Change the autogenerated stub

        $this->trace->info(TraceCode::LA_BANK_VERIFICATION_STATUS_UPDATE_JOB_RECIEVED,
        [
            'merchant_ids_count' => count($this->merchantIds)
        ]);

        $startTime = microtime(true);

        $updateCount = (new Service)->updateLinkedAccountBankVerificationStatus($this->merchantIds);

        (new Core)->create($this->featureInput, $this->shouldSync, false);

        $endTime = microtime(true);

        $this->trace->info(TraceCode::LA_BANK_VERIFICATION_STATUS_UPDATE_JOB_COMPLETED,
            [
                'total_count'                  => count($this->merchantIds),
                'merchant_detail_update_count' => $updateCount,
                'time_taken'                   => $endTime - $startTime
            ]);

        $this->delete();
    }
}
