<?php

namespace RZP\Jobs;

use RZP\Trace\TraceCode;
use RZP\Models\Merchant\Service;

/**
 * Class MerchantFundsOnHoldSync
 * @package RZP\Jobs
 *
 * Due to Risk concerns, we put linked account's hold funds in sync with parent's merchant
 * https://docs.google.com/document/d/1ePztfh9GG4ImVzKlnQVaJ0GKCid0nLx_FRAyJGJDyTc/edit?usp=sharing
 */
class MerchantHoldFundsSync extends Job
{
    protected $queueConfigKey = 'linked_account_batch';

    public $timeout = 5 * 3600;

    protected $merchantId;

    protected $holdFunds;

    public function __construct(string $mode = null,string $merchantId, $holdFunds)
    {
        parent::__construct($mode);

        $this->merchantId = $merchantId;

        $this->holdFunds = $holdFunds;
    }

    public function handle()
    {
        parent::handle(); // TODO: Change the autogenerated stub

        $this->trace->info(
            TraceCode::MERCHANT_FUNDS_HOLD_SYNC_JOB_RECIEVED,
            [
                'merchant_id' => $this->merchantId,
            ]
        );

        $startTime = microtime(true);

        $count = (new Service)->syncMerchantFundsOnHold($this->merchantId, $this->holdFunds);

        $endTime = microtime(true);

        $this->trace->info(
            TraceCode::MERCHANT_FUNDS_HOLD_SYNC_JOB_COMPLETED,
            [
                'merchant_id'                   => $this->merchantId,
                'time_taken'                    => $endTime - $startTime,
                'total_linked_accounts_updated' => $count,
            ]
        );

        $this->delete();
    }
}
