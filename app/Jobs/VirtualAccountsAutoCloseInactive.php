<?php

namespace RZP\Jobs;


use RZP\Trace\TraceCode;
use RZP\Models\VirtualAccount\Service;

class VirtualAccountsAutoCloseInactive extends Job
{
    protected $virtualAccountIds;

    protected $queueConfigKey = 'batch';

    public function __construct(string $mode, array $virtualAccountIds)
    {
        parent::__construct($mode);

        $this->virtualAccountIds = $virtualAccountIds;
    }

    public $timeout = 300;

    public function handle()
    {
        parent::handle(); // TODO: Change the autogenerated stub

        $this->trace->info(
            TraceCode::VIRTUAL_ACCOUNT_AUTO_CLOSE_INACTIVE_JOB_RECIEVED,
            [
                'count'         => count($this->virtualAccountIds),
            ]
        );

        try
        {
            $processedResults = [];

            $startTime = microtime(true);

            $processedResults = (new Service())->autoCloseInactiveVirtualAccountsBulk($this->virtualAccountIds);

            $this->trace->info(
                TraceCode::VIRTUAL_ACCOUNT_AUTO_CLOSE_INACTIVE_JOB_PROCESSED,
                [
                    'processed_results'     =>  $processedResults,
                    'duration'              => microtime(true) - $startTime,
                ]
            );
        }
        catch (\Throwable $ex)
        {
            $this->trace->traceException($ex,
                null,
                TraceCode::VIRTUAL_ACCOUNT_AUTO_CLOSE_INACTIVE_JOB_FAILED,
                $processedResults
            );
        }
        finally
        {
            $this->delete();
        }
    }
}
