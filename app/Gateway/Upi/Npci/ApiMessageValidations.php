<?php

namespace RZP\Gateway\Upi\Npci;

class ApiMessageValidations
{
    /**
     * This class contains validation codes for ReqPay, RespPay and RespAuthDetails
     *
     * H – Head validation HM – Meta part under Head validation T – Txn validation
     * S - RiskScores validation L – Rules validation R – Payer validation
     * B – Payee validation I – Info validation D – Device validation A – Ac validation
     * C – Creds validation V – Amount validation E – Resp validation
     */

    const DEFAULT_ERROR = 'Random error';

    protected static $ReqPayMap = [
        'U52' => 'PSP orgId not found',
        'H02' => 'Ver numeric/decimal Min length 1 Max length 6',
        'H03' => 'Ts must be ISO_ZONE format',
        'U52' => 'PSP orgId not found',
        'U17' => 'PSP is not registered',
        'H06' => 'MsgId must be present maxlength 35',
        'HM1' => 'Meta.Tag.name must be present/valid',
        'HM2' => 'Meta.Tag.value must be ISO_ZONE format',
        'T01' => 'Txn not present',
        'T02' => 'Txn.Id must be present maxlength 35',
        'T03' => 'Txn.Note alphanumeric; minlength 1 maxlength 50',
        'T04' => 'Txn.RefId alphanumeric; minlength 1 maxlength 35',
        'T05' => 'Txn RefURL is url; minlength 1 maxlength 35',
        'T06' => 'Txn.Ts must be ISO_ZONE format',
        'T07' => 'Txn.Type must be present/valid',
        'T08' => 'Txn.OrgTnxId must be present alphanumeric; minlength 1 maxlength 35',
        'T09' => 'Txn.OrgTnxId is alphanumeric; minlength 1 maxlength 35',
        'T10' => 'Txn.OrgTnxId is not applicable for this type of transaction',
        'T11' => 'Txn.OrgRespCd must be present alphanumeric; minlength 1 maxlength 3',
        'Txn' => 'RiskScore Provider must be present alphanumeric; minlength 1 maxlength 20',
        'S02' => 'Txn RiskScore Type must be present alphanumeric; minlength 1 maxlength 20',
        'S03' => 'Txn RiskScore Value must be present numeric; minlength 1 maxlength 5',
        'L01' => 'Rule must be present within Rules',
        'L02' => 'Rule attribute name must be present; alphanumeric; minlength 1 maxlength 20',
        'L03' => 'value must be present; numeric/decimal',
        'L04' => 'Rule attribute value must be present; numeric; minlength 1 maxlength 255',
        'R01' => 'Payer not present',
        'R02' => 'Payer.Addr must be valid VPA maxlength 255',
        'R03' => 'Payer.Name alphanumeric minlegth 1 maxlength 99',
        'R04' => 'Payer.SeqNum numeric minlegth 1 maxlength 3',
        'R05' => 'Payer.Type must be present/valid',
        'R06' => 'Payer.Code numeric of length 4',
        'B01' => 'Payees not present',
        'B02' => 'Payee not present',
        'B03' => 'Payee.Addr must be valid VPA maxlength 255',
        'B04' => 'Payee.SeqNum numeric minlegth 1 maxlength 3',
        'B05' => 'Payee.Name alphanumeric minlegth 1 maxlength 99',
        'B06' => 'Payee.Type must be present/valid',
        'B07' => 'Payee.Code numeric of length 4',
        'B08' => 'Payer</Payee> Address cannot be changed',
        'I01' => 'Payer/Payee.Info must be present',
        'I02' => 'Payer/Payee .Info.Identity must be present',
        'I03' => 'Payer/Payee.Info.Identity.Type must be present minlegth 1 maxlength 20',
        'I04' => 'Payer/Payee .Info.Identity verifiedName must be present alphanumeric minlegth 1 maxlength 99',
        'I05' => 'Payer/Payee .Info.Rating whitelisted must be present minlegth 1 maxlength 5',
        'D01' => 'Payer/Payee.Device must be present',
        'D02' => 'Payer/Payee. Device.Tags must be present',
        'D03' => 'Payer/Payee.Tag.Device.Name/value must be present',
        'D04' => 'Payer/Payee Device Validation error',
        'D05' => 'Payer/Payee Device Validation error',
        'D06' => 'Payer/Payee Device Validation error',
        'D07' => 'Payer/Payee Device Validation error',
        'D08' => 'Payer/Payee Device Validation error',
        'D09' => 'Payer/Payee Device Validation error',
        'D10' => 'Payer/Payee Device Validation error',
        'D11' => 'Payer/Payee Device Validation error',
        'A01' => 'Payer/Payee.Ac must be present',
        'A02' => 'Payer/Payee .Ac.AddrType must be present',
        'A03' => 'Payer/Payee .Ac.Detail must be present',
        'A04' => 'Payer/Payee .Ac.Name must be present',
        'A05' => 'Payer/Payee .Ac.Detail.Aadhar must be present or not valid',
        'A06' => 'Payer/Payee .Ac.Detail.Account must be present or not valid',
        'A07' => 'Payer/Payee .Ac.Detail.Mobile must be present or not valid',
        'A08' => 'Payer/Payee .Ac.Detail.Card must be present or not valid',
        'A09' => 'Payer/Payee .Ac.Detail.Value incorrect format <Name>',
        'C01' => 'Payer/Payee .Creds not present',
        'C02' => 'Payer/Payee .Creds.Cred must be present',
        'C03' => 'Payer/Payee.Cred data is wrong',
        'C04' => 'Payer/Payee .Cred.Aadhar must be present',
        'C05' => 'Payer/Payee .Cred.Otp must be present',
        'C06' => 'Payer/Payee .Cred.Pin must be present',
        'C07' => 'Payer/Payee .Cred.Card must be present',
        'C08' => 'Payer/Payee .Cred.PreApproved must be present',
        'C09' => 'Payer/Payee .Cred.Data must be present',
        'C10' => 'Payer/Payee . .Cred.Data encrypted authentication must be present',
        'V01' => 'Payer/Payee. Amount must be present',
        'V02' => 'Payer/Payee .Amount.Cur must be present',
        'V03' => 'Payer/Payee.Amount.Value must be within 18 digits including two decimal',
        'V04' => 'Payer/Payee .Amount.Split.Name must be present',
        'V05' => 'Payer/Payee .Amount.Split.Value must be present minlegth 1 maxlength 18',
        'V06' => 'Payee Amount cannot be changed Payer/Payee',
        'M01' => 'Payee.Amount.Cur must be consistant',
        'M02' => 'Payee.Amount.Cur is invalid',
        'M03' => 'Payer & Payee total amount not matching',
        'M04' => 'One or more Payee amount is missing',
        'M05' => 'Payer and Payee total amount not matching',
        'M06' => 'More than one Payee amount is missing',
        'M07' => 'Payer amount should be greater than total Payee amount',
    ];

    protected static $RespAuthDetailsMap = [
        'U52' => 'PSP orgId not found',
        'H02' => 'Ver numeric/decimal Min length 1 Max length 6',
        'H03' => 'Ts must be ISO_ZONE format',
        'U52' => 'PSP orgId not found',
        'U17' => 'PSP is not registered',
        'H06' => 'MsgId must be present maxlength 35',
        'E01' => '<Resp> must be present',
        'E02' => 'Resp.MsgId must be present maxlength 35',
        'E03' => 'Resp.Result must be present alphanumeric Min length 1 Max length 20',
        'E04' => 'Resp.ErrorCode must be present',
        'E05' => 'Resp.ErrorCode should not be present',
        'T01' => 'Txn not present',
        'T02' => 'Txn.Id must be present maxlength 35',
        'T03' => 'Txn.Note alphanumeric; minlength 1 maxlength 50',
        'T04' => 'Txn.RefId alphanumeric; minlength 1 maxlength 35',
        'T06' => 'Txn.Ts must be ISO_ZONE format',
        'T07' => 'Txn.Type must be present/valid',
        'TR1' => 'Txn RiskScore Provider must be present alphanumeric; minlength 1 maxlength 20',
        'TR2' => 'Txn RiskScore Type must be present alphanumeric; minlength 1 maxlength 20',
        'TR3' => 'Txn RiskScore Value must be present numeric; minlength 1 maxlength 5',
        'R01' => 'Payer not present',
        'R02' => 'Payer.Addr must be valid VPA maxlength 255',
        'R03' => 'Payer.Name alphanumeric minlegth 1 maxlength 99',
        'R04' => 'Payer.SeqNum numeric minlegth 1 maxlength 3',
        'R05' => 'Payer.Type must be present/valid',
        'R06' => 'Payer.Code numeric of length 4',
        'B01' => 'Payees not present',
        'B02' => 'Payee not present',
        'B03' => 'Payee.Addr must be valid VPA maxlength 255',
        'B04' => 'Payee.SeqNum numeric minlegth 1 maxlength 3',
        'B05' => 'Payee.Name alphanumeric minlegth 1 maxlength 99',
        'B06' => 'Payee.Type must be present/valid',
        'B07' => 'Payee.Code numeric of length 4',
        'B09' => 'Multiple Payees not allowed',
        'I01' => 'Payer/Payee.Info must be present',
        'I02' => 'Payer/Payee .Info.Identity must be present',
        'I03' => 'Payer/Payee.Info.Identity.Type must be present minlegth 1 maxlength 20',
        'I04' => 'Payer/Payee .Info.Identity verifiedName must be present alphanumeric minlegth 1 maxlength 99',
        'I05' => 'Payer/Payee .Info.Rating whitelisted must be present minlegth 1 maxlength 5',
        'D01' => 'Payer/Payee.Device must be present',
        'D02' => 'Payer/Payee. Device.Tags must be present',
        'D03' => 'Payer/Payee.Tag.Device.Name/value must be present',
        'D04' => 'Payer/Payee Device Validation error',
        'D05' => 'Payer/Payee Device Validation error',
        'D06' => 'Payer/Payee Device Validation error',
        'D07' => 'Payer/Payee Device Validation error',
        'D08' => 'Payer/Payee Device Validation error',
        'D09' => 'Payer/Payee Device Validation error',
        'D10' => 'Payer/Payee Device Validation error',
        'D11' => 'Payer/Payee Device Validation error',
        'A01' => 'Payer/Payee.Ac must be present',
        'A02' => 'Payer/Payee .Ac.AddrType must be present',
        'A03' => 'Payer/Payee .Ac.Detail must be present',
        'A04' => 'Payer/Payee .Ac.Name must be present',
        'A05' => 'Payer/Payee .Ac.Detail.Aadhar must be present or not valid',
        'A06' => 'Payer/Payee .Ac.Detail.Account must be present or not valid',
        'A07' => 'Payer/Payee .Ac.Detail.Mobile must be present or not valid',
        'A08' => 'Payer/Payee .Ac.Detail.Card must be present or not valid',
        'A09' => 'Payer/Payee .Ac.Detail.Value incorrect format for / Name',
        'A10' => 'Payer/Payee .Ac.Detail.Value must be present for / Name',
        'A11' => 'Payer/Payee Aadhaar based transactions are not supported presently',
        'A12' => 'Payer/Payee IFSC based transactions are not supported presently',
        'A13' => 'Payer/Payee MMID based transactions are not supported presently',
        'A14' => 'Payer/Payee Card based transactions are not supported presently',
        'C01' => 'Payer/Payee .Creds not present',
        'C02' => 'Payer/Payee .Creds.Cred must be present',
        'C03' => 'Payer/Payee.Cred data is wrong',
        'C04' => 'Payer/Payee .Cred.Aadhar must be present',
        'C05' => 'Payer/Payee .Cred.Otp must be present',
        'C06' => 'Payer/Payee .Cred.Pin must be present',
        'C07' => 'Payer/Payee .Cred.Card must be present',
        'C08' => 'Payer/Payee .Cred.PreApproved must be present',
        'C09' => 'Payer/Payee .Cred.Data must be present',
        'C10' => 'Payer/Payee . .Cred.Data encrypted authentication must be present',
        'C11' => 'Payer/Payee.Cred. should not be sent',
        'C12' => 'Payer/Payee.Cred.Code should not be present and be either NPCI or UIDAI',
        'V01' => 'Payer/Payee. Amount must be present',
        'V02' => 'Payer/Payee .Amount.Cur must be present',
        'V03' => 'Payer/Payee. Amount.Value must be within 18 digits including 2 decimal',
        'V04' => 'Payer/Payee .Amount.Split.Name must be present',
        'V05' => 'Payer/Payee .Amount.Split.Value must be present minlegth 1 maxlength 18 Payer/Payee',
        'M01' => 'Payee.Amount.Cur must be consistant',
        'M02' => 'Payer.Amount.Cur must be matched with Payee.Amount.Cur',
        'M03' => 'Payer & Payee total amount not matching',
        'M04' => 'One or more Payee amount is missing',
    ];

    protected static $RespPayMap = [
        'U52' => 'PSP orgId not found',
        'H02' => 'Ver numeric/decimal Min length 1 Max length 6',
        'H03' => 'Ts must be ISO_ZONE format',
        'U52' => 'PSP orgId not found',
        'U17' => 'PSP is not registered',
        'H06' => 'MsgId must be present maxlength 35',
        'T01' => 'Txn not present',
        'T02' => 'Txn.Id must be present maxlength 35',
        'T03' => 'Txn.Note alphanumeric; minlength 1 maxlength 50',
        'T04' => 'Txn.RefId alphanumeric; minlength 1 maxlength 35',
        'T06' => 'Txn.Ts must be ISO_ZONE format',
        'T07' => 'Txn.Type must be present/valid',
        'TR1' => 'Txn RiskScore Provider must be present alphanumeric; minlength 1 maxlength 20',
        'TR2' => 'Txn RiskScore Type must be present alphanumeric; minlength 1 maxlength 20',
        'TR3' => 'Txn RiskScore Value must be present numeric; minlength 1 maxlength 5',
        'E01' => '<Resp> must be present',
        'E02' => 'Resp.MsgId must be present maxlength 35',
        'E03' => 'Resp.Result must be present alphanumeric Min length 1 Max length 20',
        'E04' => 'Resp.ErrorCode must be present',
        'E05' => 'Resp.ErrorCode should not be present',
        'E06' => 'Resp.ErrorCode must be SUCCESS or FAILURE',
        'E07' => '<Ref Type is mandatory & alphanumeric',
        'E08' => '<Ref seqNum is mandatory & numeric',
        'E09' => '<Ref addr is mandatory & alphanumeric',
        'E10' => '<Ref settleAmount is mandatory & decimal',
        'E11' => '<Ref settleCurrency is mandatory & text',
        'E12' => '<Ref approvalNum is mandatory & text',
        'S13' => '<Ref respCode is mandatory & alphanumeric',
    ];

    public static function getApiValidationMessage($code, $api)
    {
        $map = $api . 'Map';

        if (isset(self::$$map[$code]) === true)
        {
            return self::$$map[$code];
        }

        return self::DEFAULT_ERROR;
    }
}
