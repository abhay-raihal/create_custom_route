on: [ push ]
jobs:
  cancel:
    runs-on: [ api-public ]
    name: Cancel Previous Runs
    if: always()
    timeout-minutes: 1
    steps:
      - uses: styfle/cancel-workflow-action@0.9.0
        if: github.ref != 'refs/heads/master'
        name: cancel old workflows
        id: cancel
        with:
          all_but_latest: true
          workflow_id: "build_images.yml"
          access_token: ${{ github.token }}
      - if: github.ref == 'refs/heads/master'
        name: Don't cancel old workflows
        id: dont_cancel
        run: |
          echo "Don't cancel old workflow"
  validate_php_syntax:
    runs-on: [ api-public ]
    needs: [ cancel ]
    container:
      image: c.rzp.io/razorpay/onggi:php-8.1-api-web
      options: "--entrypoint /bin/bash"
      credentials:
        username: ${{ secrets.HARBOR_DOCKER_USERNAME }}
        password: ${{ secrets.HARBOR_DOCKER_PASSWORD }}
    continue-on-error: false
    name: Validate PHP Syntax
    steps:
      - name: checkout
        id: checkout
        uses: razorpay/checkout-action@08eef2bd6ada50786812e7351457a762856a532f
      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v3.0.0"
        with:
          path: "/github/home/.composer/cache"
          key: "api-composer-${{ hashFiles('composer.lock') }}"
      - name: prepare_test
        run: ci-assets/prepare_test.sh
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
      - name: validate_php_syntax
        run: ci-assets/validate_php_syntax.sh
  build-web:
    runs-on: [ api-public ]
    needs: [ cancel ]
    continue-on-error: false
    name: Build Web Harbor
    steps:
      - name: Login to Harbor
        uses: docker/login-action@v2
        with:
          registry: c.rzp.io
          username: ${{ secrets.HARBOR_DOCKER_USERNAME }}
          password: ${{ secrets.HARBOR_DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: build
        uses: docker/build-push-action@v3
        with:
          tags: c.rzp.io/razorpay/api:${{ github.sha }}
          push: true
          file: ./Dockerfile.web
          platforms: linux/arm64,linux/amd64
          build-args: |
            GIT_COMMIT_HASH=${{ github.sha }}
            CACHEBUST=${{ github.sha }}
            GIT_USERNAME=rzp
            ONGGI_IMAGE=c.rzp.io/razorpay/onggi-multi-arch:php-8.1-api-web
            ARMORY_IMAGE=c.rzp.io/proxy_dockerhub/surnet/alpine-wkhtmltopdf:3.16.2-0.12.6-small
            OPENCENSUS_IMAGE=c.rzp.io/razorpay/onggi:opencensus-php-v2020.10.28
          secrets: |
            git_token=${{ secrets.GIT_TOKEN }}

  build-worker:
    runs-on: [ api-public ]
    needs: [ cancel ]
    continue-on-error: false
    name: Build Worker Harbor
    steps:
      - name: Login to Harbor
        uses: docker/login-action@v2
        with:
          registry: c.rzp.io
          username: ${{ secrets.HARBOR_DOCKER_USERNAME }}
          password: ${{ secrets.HARBOR_DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: build
        uses: docker/build-push-action@v3
        with:
          tags: c.rzp.io/razorpay/api:worker-${{ github.sha }}
          push: true
          file: ./Dockerfile.worker
          platforms: linux/amd64,linux/arm64
          build-args: |
            GIT_COMMIT_HASH=${{ github.sha }}
            GIT_USERNAME=rzp
            ONGGI_IMAGE=c.rzp.io/razorpay/onggi-multi-arch:php-8.1-api-worker
            CACHEBUST=${{ github.sha }}
            ARMORY_IMAGE=c.rzp.io/proxy_dockerhub/surnet/alpine-wkhtmltopdf:3.16.2-0.12.6-small
            OPENRESTY_IMAGE=c.rzp.io/razorpay/onggi:opencensus-php-v2020.10.28
          secrets: |
            git_token=${{ secrets.GIT_TOKEN }}

  build-checkout:
    runs-on: [ api-public ]
    needs: [ cancel ]
    continue-on-error: false
    name: Build Checkout Harbor
    steps:
      - name: Login to Harbor
        uses: docker/login-action@v1
        with:
          registry: c.rzp.io
          username: ${{ secrets.HARBOR_DOCKER_USERNAME }}
          password: ${{ secrets.HARBOR_DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: build
        uses: docker/build-push-action@v2
        with:
          tags: c.rzp.io/razorpay/api:checkout-${{ github.sha }}
          push: true
          file: ./Dockerfile.checkout
          platforms: linux/amd64,linux/arm64
          build-args: |
            GIT_COMMIT_HASH=${{ github.sha }}
            GIT_USERNAME=rzp
            NGINX_IMAGE=c.rzp.io/razorpay/onggi-multi-arch:nginx-alpine-3.12
          secrets: |
            git_token=${{ secrets.GIT_TOKEN }}

  build-e2e:
    name: E2E test build
    runs-on: [ api-public ]
    needs: [ build-web, build-worker, build-checkout ]
    steps:
      - uses: actions/checkout@v2
      - name: Login to Harbor
        uses: docker/login-action@v2
        with:
          registry: c.rzp.io
          username: ${{ secrets.HARBOR_DOCKER_USERNAME }}
          password: ${{ secrets.HARBOR_DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          repository: ${{ github.repository }}
          file: ./e2e/Dockerfile
          context: e2e
          secrets: git_token=${{ secrets.GIT_TOKEN }}
          build-args: GIT_USERNAME=rzp
          push: true
          tags: c.rzp.io/razorpay/api:e2e_${{ github.sha }}

  # Triggers end-to-end test execution with argo workflow as executor
  e2e-test-webhook:
    name: E2E test webhook
    runs-on: [ self-hosted, api ]
    needs: [ build-e2e ]
    steps:
      - uses: actions/checkout@v2
      - name: Find current pr
        # Find the PR associated with this push, if there is one.
        uses: jwalton/gh-find-current-pr@v1.3.0
        id: findPr
        with:
          # Can be "open", "closed", or "all".  Defaults to "open".
          state: open
      - name: Triggers argo workflows webhook to execute e2e tests
        if: ${{ steps.findPr.outputs.pr != '' }}
        uses: fjogeleit/http-request-action@master
        with:
          url: 'https://argo.dev.razorpay.in/api/v1/events/argo-workflows/api'
          method: 'POST'
          bearerToken: ${{ secrets.ARGO_TOKEN }}
          data: >
            {
               "kube_manifests_ref": "master",
               "self": {
                   "name": "api",
                   "commit_id": "${{ github.sha }}",
                   "chart_values": {
                      "replicas": 2,
                      "web_requests_cpu": "150m",
                      "web_requests_memory": "200Mi"
                   }
               },
               "dependencies": [
                      {
                          "name": "pg-router",
                          "commit_id": "",
                          "chart_values": {
                              "ephemeral_db": false,
                              "replicas": 1
                          }
                      },
                      {
                          "name": "terminals",
                          "commit_id": "",
                          "chart_values": {
                              "ephemeral_db": false,
                              "replicas": 1
                          }
                      },
                      {
                          "name": "payment-links",
                          "commit_id": "",
                          "chart_values": {
                              "ephemeral_db": false,
                              "replicas": 1
                          }
                      }
                  ]
            }

  build-slit:
    name: SLIT test build
    runs-on: [ api-public ]
    needs: [ build-web, build-worker, build-checkout ]
    steps:
      - uses: actions/checkout@v2
      - name: Login to Harbor
        uses: docker/login-action@v2
        with:
          registry: c.rzp.io
          username: ${{ secrets.HARBOR_DOCKER_USERNAME }}
          password: ${{ secrets.HARBOR_DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          repository: ${{ github.repository }}
          file: ./slit/Dockerfile
          context: slit
          build-args: |
            GIT_COMMIT_HASH=${{ github.event.pull_request.head.sha }}
            GIT_USERNAME=rzp
          secrets: |
            git_token=${{ secrets.GIT_TOKEN }}
            SONAR_TOKEN=${{ secrets.SONARQUBE_TOKEN }}
          push: true
          tags: c.rzp.io/razorpay/api:slit_${{ github.sha }}

  # Triggers end-to-end test execution with argo workflow as executor
  slit-test-webhook:
    name: SLIT test webhook
    runs-on: [ self-hosted, api ]
    needs: [ build-slit ]
    steps:
      - uses: actions/checkout@v2
      - name: Find current pr
        # Find the PR associated with this push, if there is one.
        uses: jwalton/gh-find-current-pr@v1.3.0
        id: findPr
        with:
          # Can be "open", "closed", or "all".  Defaults to "open".
          state: open
      - name: Triggers argo workflows webhook to execute slit tests
        if: ${{ steps.findPr.outputs.pr != '' }}
        uses: fjogeleit/http-request-action@master
        with:
          url: 'https://argo.dev.razorpay.in/api/v1/events/argo-workflows/api-slit'
          method: 'POST'
          bearerToken: ${{ secrets.ARGO_TOKEN }}
          data: >
            {
               "kube_manifests_ref": "master",
               "self": {
                   "name": "api",
                   "commit_id": "${{ github.sha }}",
                   "chart_values": {
                      "replicas": 2,
                      "web_requests_cpu": "150m",
                      "web_requests_memory": "200Mi"
                   }
               },
               "dependencies": []
            }

  trigger_regression_suite:
    runs-on: [ api-public ]
    name: Regression Suite
    needs: [ validate_php_syntax, build-web, build-worker, build-checkout ]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Webhook
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{ "branch" : "master" , "commit" : "${{ github.sha }}" , "repo" : "api" }' \
          https://${{ secrets.SPINNAKER_BASIC_AUTH }}@deploy-github-actions.razorpay.com/webhooks/webhook/x-regression
