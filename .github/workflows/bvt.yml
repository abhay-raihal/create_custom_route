name: Run BVT in Devstack Post Approval
on:
  workflow_dispatch:
  pull_request_review:
    types: [ submitted ]
jobs:
  # Add cancel job
  cancel:
    name: Cancel Previous Runs
    if: always()
    runs-on: [ self-hosted, api ]
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.9.0
        with:
          all_but_latest: true
          workflow_id: "bvt.yaml"
          access_token: ${{ github.token }}
  # PR Approval Request Workflow
  pull_request_approved:
    env:
      old_commit: ${{ github.event.pull_request.head.sha }}
    if: ${{ (github.event_name == 'workflow_dispatch' || github.event.review.state == 'approved') }}
    runs-on: [ self-hosted, api ]
    needs: [ cancel ]
    steps:
      - name: Retrieve Current Workflow URL
        id: workflow_run
        run: echo "::set-output name=url::https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      - name: Post Workflow Link as Comment
        uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          message: |
            :information_desk_person: `BVT Devstack GitHub Workflow:`  [View the progress here](${{ steps.workflow_run.outputs.url }})
          allow-repeats: true
      - name: checkout
        uses: actions/checkout@v3
      - name: Display Base Branch - Debugging Step
        run: echo ${{ github.event.pull_request.base.ref }}
      - name: Merge Master into current branch
        id: backmerge
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: ${{ github.event.pull_request.base.ref }}
          message: Merged `master` into `${{ github.event.pull_request.head.ref }}` branch
          target_branch: ${{ github.event.pull_request.head.ref }}
          github_token: ${{ secrets.CI_BOT_TOKEN }}
      - name: Add comment if Backmerge failed
        if: ${{failure()}}
        uses: mshick/add-pr-comment@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          message: |
            **A conflict error has occurred. Please perform a manual back-merge and obtain PR approval to re-run the BVT.**
          allow-repeats: true
      - name: Approve rebased PR with Master
        if: success()
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          GITHUB_TOKEN=${{ secrets.CI_BOT_TOKEN }}
          # Make PATCH request to update the pull request
          curl -X PATCH \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"maintainer_can_modify": false}' \
          "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER"
      - name: Checkout Latest Code from PR
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Retrieve Latest Commit ID
        if: success()
        id: pr_info
        run: |
          echo "Sleeping for 10 seconds..."
          sleep 10
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          API_URL="https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}"
          API_RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.CI_BOT_TOKEN }}" "$API_URL")
          LATEST_COMMIT=$(echo "$API_RESPONSE" | jq --raw-output .head.sha)
          echo "::set-output name=latest_commit::$LATEST_COMMIT"
      - name: Print Lastest Commit id from PR - Debugging Step
        run: echo ${{ steps.pr_info.outputs.latest_commit }}
      - name: Update BVT Status Check Link to Latest Merged Commit - Pending
        if: ${{ env.old_commit != steps.pr_info.outputs.latest_commit && success() }}
        run: |
          echo "env.old_commit: ${{ env.old_commit }}"
          echo "steps.pr_info.outputs.latest_commit: ${{ steps.pr_info.outputs.latest_commit }}"
          echo "Condition: ${{ env.old_commit != steps.pr_info.outputs.latest_commit }}"
          STATUS_URL=${{ steps.workflow_run.outputs.url }}
          STATUS_DESCRIPTION="The BVT test on Devstack has been initiated. Kindly wait until the test is completed."
          STATUS_CONTEXT="Run BVT in Devstack Post Approval"
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.CI_BOT_TOKEN }}" \
            -d '{
              "state": "pending",
              "target_url": "'"$STATUS_URL"'",
              "description": "'"$STATUS_DESCRIPTION"'",
              "context": "'"$STATUS_CONTEXT"'"
            }' \
            "https://api.github.com/repos/${{ github.repository }}/statuses/${{ steps.pr_info.outputs.latest_commit }}"
      # Validate existence of Roast PR NUmber Field
      - name: Validate existence of roastPRNumber Field - ROAST
        uses: actions/github-script@v6
        id: roast-pr-number
        with:
          result-encoding: string
          script: |
            const regex = /roastprnumber.*/i;
            roastPRNumberFlag = regex.test(context.payload.pull_request.body.toLowerCase())
            return Boolean(roastPRNumberFlag)
        # Fetch PR Number for Roast mentioned in description
      - name: Fetch PR Number for Roast - ROAST
        uses: actions/github-script@v6
        if: ${{steps.roast-pr-number.outputs.result == 'true'}}
        id: roastPRNumber
        with:
          result-encoding: string
          script: |
            roastPRNumberStr = context.payload.pull_request.body.toLowerCase()
            var roastPRNumberValueRow = (roastPRNumberStr.substring(roastPRNumberStr.indexOf("roastprnumber"))).split("\n")
            var prNumberValue = roastPRNumberValueRow[0].split("|")
            var prNumber = prNumberValue[1].trim()
            return prNumber
      - name: Print Roast PR Number - ROAST
        run: echo ${{ steps.roastPRNumber.outputs.result }}
        # Get Roast PR State if its approved or not
      - name: Run Roast API PR flow if value is not null - ROAST
        id: get_pr_state
        if: ${{steps.roastPRNumber.outputs.result != null }}
        uses: actions/github-script@v6
        with:
          result-encoding: string
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          script: |
            pullnumber = parseInt(${{steps.roastPRNumber.outputs.result}})
            const result = await github.pulls.listReviews({
              owner: context.payload.repository.owner.login,
              repo: 'roast',
              pull_number: pullnumber,
              per_page: 100
            })
            const prState = result.data.filter(f => f.state.toLowerCase().includes("approved")).length > 0
            return Boolean(prState)
        # Get Target Branch for Roast Repo
      - name: Get Roast Branch for PR - ROAST
        id: roast-branch
        if: |
          steps.roastPRNumber.outputs.result != null  && steps.get_pr_state.outputs.result == 'true'
        uses: actions/github-script@v6
        with:
          result-encoding: string
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          script: |
            const response = await github.pulls.get({
              owner: context.payload.repository.owner.login,
              repo: 'roast',
              pull_number: ${{steps.roastPRNumber.outputs.result}},
            })
            const roastBranch = response.data.head.ref
            return String(roastBranch)
        # Rebase Master to a roast branch in Roast Repo
      - name: Rebase master to a branch - ROAST
        id: rebase-branch
        if: |
          steps.roastPRNumber.outputs.result != null  && steps.get_pr_state.outputs.result == 'true'
        uses: linhbn123/rebase-pull-requests@v1.0.1
        with:
          repository: 'razorpay/roast'
          head: 'razorpay:${{ steps.roast-branch.outputs.result }}'
          base: 'master'
          token: ${{ secrets.CI_BOT_TOKEN }}
      - name: Comments if master merge failed - ROAST
        if: failure()
        uses: mshick/add-pr-comment@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          message: |
            **Conflict Error Please rebase manually**
            allow-repeats: true
        # Fetch the latest commit of the Roast Repo
      - name: Fetch latest Commit of the PR in Roast after rebase - ROAST
        id: latest-commit
        if: |
          steps.roastPRNumber.outputs.result != null  && steps.get_pr_state.outputs.result == 'true'
        uses: actions/github-script@v6
        with:
          result-encoding: string
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          script: |
            const response = await github.pulls.get({
              owner: context.payload.repository.owner.login,
              repo: 'roast',
              pull_number: ${{steps.roastPRNumber.outputs.result}},
              })
              const latestCommit = response.data.head.sha
              return String(latestCommit)
      - name: Check Build Image Workflow Status
        env:
          GITHUB_TOKEN: ${{ github.token }}
          BRANCH: ${{ github.event.pull_request.head.ref }}
          WORKFLOW: build_images.yml
          COMMIT_ID: ${{ steps.pr_info.outputs.latest_commit }}
        run: |
          echo "commit id: ${{ steps.pr_info.outputs.latest_commit }}"
          echo "WORKFLOW_STATUS=$(sh ./.github/actions/getWorkflowStatus.sh)" >> $GITHUB_ENV
      - name: Check Workflow Status - Debugging Step
        run: echo $WORKFLOW_STATUS
      - name: Log Workflow Status - Debugging Step
        env:
          GITHUB_TOKEN: ${{ github.token }}
          BRANCH: ${{ github.event.pull_request.head.ref }}
          WORKFLOW: build_images.yml
          API_HEADER: "Accept: application/vnd.github.v3+json"
        run: |
          cat build_image_workflow_log.txt
      - name: Run BVT Suite on Devstack with Successful Build Image Workflow
        if: env.WORKFLOW_STATUS == 'success'
        env:
          SPINNAKER_PASSWORD: ${{ secrets.SPINNAKER_PASSWORD }}
          WEBHOOK_TRIGGER: api-pr-commit-devstack
          GITHUB_TOKEN: ${{ github.token }}
          ROAST_PR_COMMIT: ${{steps.latest-commit.outputs.result}}
          GIT_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
          COMMIT_ID: ${{ steps.pr_info.outputs.latest_commit }}
          SKIP_DEVSTACK: false
        run: |
          sh ./.github/actions/triggerDevstack.sh
      - name: Post comment for devstack initated
        if: success() && env.WORKFLOW_STATUS == 'success'
        uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          message: |
            :white_check_mark: The BVT test on Devstack has been initiated. Kindly wait until the test is completed.

            For troubleshooting BVT, please consult this [documentation](https://docs.google.com/document/d/162IkAOyLUQxYc-A6sDllXiiP2VJCyFpqn6-tfZGBhK8/edit#heading=h.exflzwww951h).

            BVT Execution Initiated for Commit ID : `${{ steps.pr_info.outputs.latest_commit }}`
          allow-repeats: true
      - name: Post comment for devstack failed to initated
        if: env.WORKFLOW_STATUS != 'success'
        uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          message: |
            :x: The BVT trigger was unsuccessful due to a failure in image creation. [Retrigger the workflow](${{ steps.workflow_run.outputs.url }})

            For troubleshooting BVT trigger, please consult this [documentation](https://write.razorpay.com/doc/execute-bvt-test-in-devstack-api-repo-haK6b8Q0Bs).

            BVT Execution Failed for Commit ID : `${{ steps.pr_info.outputs.latest_commit }}`
          allow-repeats: true
      - name: Update BVT Status Check Link To Master Merge Commit - Success
        if: ${{ env.WORKFLOW_STATUS == 'success' && env.old_commit != steps.pr_info.outputs.latest_commit && success() }}
        run: |
          STATUS_URL=${{ steps.workflow_run.outputs.url }}
          STATUS_DESCRIPTION="The BVT test on Devstack has been initiated. Kindly wait until the test is completed."
          STATUS_CONTEXT="Run BVT in Devstack Post Approval"
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.CI_BOT_TOKEN }}" \
            -d '{
              "state": "success",
              "target_url": "'"$STATUS_URL"'",
              "description": "'"$STATUS_DESCRIPTION"'",
              "context": "'"$STATUS_CONTEXT"'"
            }' \
            "https://api.github.com/repos/${{ github.repository }}/statuses/${{ steps.pr_info.outputs.latest_commit }}"
      - name: Update BVT Status Check Link To Master Merge Commit - Failed
        if: ${{ env.WORKFLOW_STATUS != 'success' && env.old_commit != steps.pr_info.outputs.latest_commit }}
        run: |
          STATUS_URL=${{ steps.workflow_run.outputs.url }}
          STATUS_DESCRIPTION="The BVT test on Devstack has been initiated. Kindly wait until the test is completed."
          STATUS_CONTEXT="Run BVT in Devstack Post Approval"
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.CI_BOT_TOKEN }}" \
            -d '{
              "state": "failure",
              "target_url": "'"$STATUS_URL"'",
              "description": "'"$STATUS_DESCRIPTION"'",
              "context": "'"$STATUS_CONTEXT"'"
            }' \
            "https://api.github.com/repos/${{ github.repository }}/statuses/${{ steps.pr_info.outputs.latest_commit }}"
