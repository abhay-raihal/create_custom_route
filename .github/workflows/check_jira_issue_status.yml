name: Check Jira Issue Status

on:
  pull_request:
    types: [ labeled, unlabeled, opened, synchronize, reopened ]

jobs:
  check_jira_issue_status:
    name: Jira Issue Status
    runs-on: [ api-public ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Fetch Github Users
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        id: githubUsers
        run: |
          USER_CHECK=$(sh ./.github/actions/getGithubusers.sh ${{github.actor}})
          echo "::set-output name=flaguser::$USER_CHECK"

      - name: Show Github Users Flag
        env:
          USER_CHECK: ${{steps.githubUsers.outputs.flaguser}}
        run: |
          echo $USER_CHECK

      - if: contains(github.event.pull_request.labels.*.name, 'bu_payments')
        name: Set flag paymentsBU
        id: paymentsBU
        run: echo "::set-output name=flag::true"

      - if: contains(github.event.pull_request.head.ref, 'hotfix')
        name: Set flag hotfix
        id: hotfix
        run: echo "::set-output name=flag::true"

      - if: contains(github.event.pull_request.head.ref, 'bugfix')
        name: Set flag bugfix
        id: bugfix
        run: echo "::set-output name=flag::true"

      - name: Fetch Jira Id
        uses: actions/github-script@0.9.0
        id: jiraIssueId
        with:
          result-encoding: string
          script: |
            jiraIssueIdStr = context.payload.pull_request.body.toLowerCase()
            console.log(jiraIssueIdStr)
            var jiraIssueIdValueRow = (jiraIssueIdStr.substring(jiraIssueIdStr.indexOf("jiraid"))).split("\n")
            var jiraId = jiraIssueIdValueRow[0].split("|")
            var jiraIssueId = jiraId[1].trim()
            console.log(jiraIssueId)
            return jiraIssueId

      - name: Check Issue status
        env:
          JIRA_ISSUE_ID: ${{steps.jiraIssueId.outputs.result}}
          PAYMENTS_BU_FLAG: ${{steps.paymentsBU.outputs.flag}}
          HOTFIX_LABEL: ${{steps.hotfix.outputs.flag}}
          BUGFIX_LABEL: ${{steps.bugfix.outputs.flag}}
          BASE_URL: ${{secrets.JIRA_BASE_URL}}
          USER_EMAIL: ${{secrets.JIRA_USER_EMAIL}}
          API_TOKEN: ${{secrets.JIRA_API_TOKEN}}
        run: |
          bash ./.github/actions/jiraStatusCheck.sh
