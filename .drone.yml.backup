---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

steps:
  - name: prepare_test
    pull: always
    image: razorpay/onggi:php-7.2
    commands:
      - cp ./environment/.env.drone ./environment/.env.testing
      - touch /etc/php7/conf.d/assertion.ini
      - 'echo "zend.assertions=1" >> /etc/php7/conf.d/assertion.ini'
      - 'echo "assert.exception=1" >> /etc/php7/conf.d/assertion.ini'
      - php -m
      - chmod 777 -R storage
      - git config --global user.name $GIT_USERNAME
      - composer config --global github-oauth.github.com $GIT_TOKEN
      - composer global require hirak/prestissimo
      - composer install --no-interaction --optimize-autoloader
      - mkdir -p /opt/razorpay/certs/first_data
    environment:
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
      GIT_TOKEN:
        from_secret: git_token
      GIT_USERNAME:
        from_secret: git_username
      RZP_API:
        from_secret: rzp_api
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - tag
          - pull_request

  - name: validate_php_syntax
    pull: default
    image: php:7.2-cli-alpine
    commands:
      - "find -path ./vendor -prune -o -iname '*.php'|xargs -n1 php -l"
    depends_on:
      - prepare_test
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request

  - name: application_test_suite
    pull: always
    image: razorpay/onggi:php-7.2-apache-api
    depends_on:
      - prepare_test
    commands:
      - "php vendor/phpunit/phpunit/phpunit --testsuite \"Application Test Suite\" --printer=\"Codedungeon\\\\PHPUnitPrettyResultPrinter\\\\Printer\""
    settings:
    environment:
      DB_AUTH_DATABASE: api_auth_applicaiton
      DB_AUTH_HOST: mysql
      DB_LIVE_DATABASE: api_live_application
      DB_LIVE_HOST: mysql
      DB_TEST_DATABASE: api_test_application
      DB_TEST_HOST: mysql
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
      ES_AUDIT_HOST: elasticsearch
      ES_HOST: elasticsearch
      GIT_TOKEN:
        from_secret: git_token
      REDIS_HOST: redis
      QUERY_CACHE_REDIS_HOST: redis
      MUTEX_REDIS_HOST: redis
      THROTTLE__REDIS_HOST: redis
      RZP_API:
        from_secret: rzp_api
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - tag
          - pull_request

  - name: features_test_suite
    pull: always
    image: razorpay/onggi:php-7.2-apache-api
    commands:
      - "php vendor/phpunit/phpunit/phpunit --testsuite \"Features-1 Test Suite\" --printer=\"Codedungeon\\\\PHPUnitPrettyResultPrinter\\\\Printer\""
    settings:
    environment:
      DB_AUTH_DATABASE: api_auth_feature_1
      DB_AUTH_HOST: mysql
      DB_LIVE_DATABASE: api_live_feature_1
      DB_LIVE_HOST: mysql
      DB_TEST_DATABASE: api_test_feature_1
      DB_TEST_HOST: mysql
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
      ES_AUDIT_HOST: elasticsearch
      ES_ENTITY_INDEX_PREFIX: testing_features_1_
      ES_ENTITY_TYPE_PREFIX: testing_features_1_
      ES_HOST: elasticsearch
      GIT_TOKEN:
        from_secret: git_token
      REDIS_HOST: redis2
      QUERY_CACHE_REDIS_HOST: redis2
      MUTEX_REDIS_HOST: redis2
      THROTTLE__REDIS_HOST: redis2
      RZP_API:
        from_secret: rzp_api
    depends_on:
      - prepare_test
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - tag
          - pull_request

  - name: feature_2_test_suite
    pull: always
    image: razorpay/onggi:php-7.2-apache-api
    depends_on:
      - prepare_test
    commands:
      - "php vendor/phpunit/phpunit/phpunit --testsuite \"Features-2 Test Suite\" --printer=\"Codedungeon\\\\PHPUnitPrettyResultPrinter\\\\Printer\""
    settings:
    environment:
      DB_AUTH_DATABASE: api_auth_feature_2
      DB_AUTH_HOST: mysql
      DB_LIVE_DATABASE: api_live_feature_2
      DB_LIVE_HOST: mysql
      DB_TEST_DATABASE: api_test_feature_2
      DB_TEST_HOST: mysql
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
      ES_AUDIT_HOST: elasticsearch
      ES_ENTITY_INDEX_PREFIX: testing_features_2_
      ES_ENTITY_TYPE_PREFIX: testing_features_2_
      ES_HOST: elasticsearch
      GIT_TOKEN:
        from_secret: git_token
      REDIS_HOST: redis3
      QUERY_CACHE_REDIS_HOST: redis3
      MUTEX_REDIS_HOST: redis3
      THROTTLE__REDIS_HOST: redis3
      RZP_API:
        from_secret: rzp_api
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - tag
          - pull_request

  - name: feature_3_test_suite
    pull: always
    image: razorpay/onggi:php-7.2-apache-api
    depends_on:
      - prepare_test
    commands:
      - "php vendor/phpunit/phpunit/phpunit --testsuite \"Features-3 Test Suite\" --printer=\"Codedungeon\\\\PHPUnitPrettyResultPrinter\\\\Printer\""
    settings:
    environment:
      DB_AUTH_DATABASE: api_auth_feature_3
      DB_AUTH_HOST: mysql2
      DB_LIVE_DATABASE: api_live_feature_3
      DB_LIVE_HOST: mysql2
      DB_TEST_DATABASE: api_test_feature_3
      DB_TEST_HOST: mysql2
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
      ES_AUDIT_HOST: elasticsearch
      ES_ENTITY_INDEX_PREFIX: testing_features_3_
      ES_ENTITY_TYPE_PREFIX: testing_features_3_
      ES_HOST: elasticsearch
      GIT_TOKEN:
        from_secret: git_token
      REDIS_HOST: redis4
      QUERY_CACHE_REDIS_HOST: redis4
      MUTEX_REDIS_HOST: redis4
      THROTTLE__REDIS_HOST: redis4
      RZP_API:
        from_secret: rzp_api
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - tag
          - pull_request

  - name: feature_4_test_suite
    pull: always
    image: razorpay/onggi:php-7.2-apache-api
    depends_on:
      - prepare_test
    commands:
      - "php vendor/phpunit/phpunit/phpunit --testsuite \"Features-4 Test Suite\" --printer=\"Codedungeon\\\\PHPUnitPrettyResultPrinter\\\\Printer\""
    settings:
    environment:
      DB_AUTH_DATABASE: api_auth_feature_4
      DB_AUTH_HOST: mysql2
      DB_LIVE_DATABASE: api_live_feature_4
      DB_LIVE_HOST: mysql2
      DB_TEST_DATABASE: api_test_feature_4
      DB_TEST_HOST: mysql2
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
      ES_AUDIT_HOST: elasticsearch
      ES_ENTITY_INDEX_PREFIX: testing_features_4_
      ES_ENTITY_TYPE_PREFIX: testing_features_4_
      ES_HOST: elasticsearch
      GIT_TOKEN:
        from_secret: git_token
      REDIS_HOST: redis5
      QUERY_CACHE_REDIS_HOST: redis5
      MUTEX_REDIS_HOST: redis5
      THROTTLE__REDIS_HOST: redis5
      RZP_API:
        from_secret: rzp_api
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - tag
          - pull_request

  - name: feature_6_test_suite
    pull: always
    image: razorpay/onggi:php-7.2-apache-api
    depends_on:
      - prepare_test
    commands:
      - "php vendor/phpunit/phpunit/phpunit --testsuite \"Feature-6 Test Suite\" --printer=\"Codedungeon\\\\PHPUnitPrettyResultPrinter\\\\Printer\""
    settings:
    environment:
      DB_AUTH_DATABASE: api_auth_feature_6
      DB_AUTH_HOST: mysql4
      DB_LIVE_DATABASE: api_live_feature_6
      DB_LIVE_HOST: mysql4
      DB_TEST_DATABASE: api_test_feature_6
      DB_TEST_HOST: mysql4
      DB_UPI_PAYMENTS_MOCKED: false
      DB_UPI_PAYMENTS_LIVE_HOST: mysql4
      DB_UPI_PAYMENTS_TEST_HOST: mysql4
      SLAVE_DB_UPI_PAYMENTS_LIVE_HOST: mysql4
      SLAVE_DB_UPI_PAYMENTS_TEST_HOST: mysql4
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
      ES_AUDIT_HOST: elasticsearch
      ES_ENTITY_INDEX_PREFIX: testing_feature_6_
      ES_ENTITY_TYPE_PREFIX: testing_feature_6_
      ES_HOST: elasticsearch
      GIT_TOKEN:
        from_secret: git_token
      REDIS_HOST: redis5
      QUERY_CACHE_REDIS_HOST: redis5
      MUTEX_REDIS_HOST: redis5
      THROTTLE__REDIS_HOST: redis5
      RZP_API:
        from_secret: rzp_api
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - tag
          - pull_request

  - name: gateway_3_test_suite
    pull: always
    image: razorpay/onggi:php-7.2-apache-api
    depends_on:
      - prepare_test
    commands:
      - "php vendor/phpunit/phpunit/phpunit --testsuite \"Gateway-3 Test Suite\" --printer=\"Codedungeon\\\\PHPUnitPrettyResultPrinter\\\\Printer\""
    settings:
    environment:
      DB_AUTH_DATABASE: api_auth_feature_5
      DB_AUTH_HOST: mysql2
      DB_LIVE_DATABASE: api_live_feature_5
      DB_LIVE_HOST: mysql2
      DB_TEST_DATABASE: api_test_feature_5
      DB_TEST_HOST: mysql2
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
      ES_AUDIT_HOST: elasticsearch
      ES_ENTITY_INDEX_PREFIX: testing_features_5_
      ES_ENTITY_TYPE_PREFIX: testing_features_5_
      ES_HOST: elasticsearch
      GIT_TOKEN:
        from_secret: git_token
      REDIS_HOST: redis6
      QUERY_CACHE_REDIS_HOST: redis6
      MUTEX_REDIS_HOST: redis6
      THROTTLE__REDIS_HOST: redis6
      RZP_API:
        from_secret: rzp_api
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - tag
          - pull_request

  - name: payment_test_suite
    pull: always
    image: razorpay/onggi:php-7.2-apache-api
    depends_on:
      - prepare_test
    commands:
      - "php vendor/phpunit/phpunit/phpunit --testsuite \"Payment Test Suite\" --printer=\"Codedungeon\\\\PHPUnitPrettyResultPrinter\\\\Printer\""
    settings:
    environment:
      DB_AUTH_DATABASE: api_auth_payment
      DB_AUTH_HOST: mysql3
      DB_LIVE_DATABASE: api_live_payment
      DB_LIVE_HOST: mysql3
      DB_TEST_DATABASE: api_test_payment
      DB_TEST_HOST: mysql3
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
      ES_AUDIT_HOST: elasticsearch
      ES_ENTITY_INDEX_PREFIX: testing_payments_
      ES_ENTITY_TYPE_PREFIX: testing_payments_
      ES_HOST: elasticsearch
      GIT_TOKEN:
        from_secret: git_token
      REDIS_HOST: redis7
      QUERY_CACHE_REDIS_HOST: redis7
      MUTEX_REDIS_HOST: redis7
      THROTTLE__REDIS_HOST: redis7
      RZP_API:
        from_secret: rzp_api
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - tag
          - pull_request

  - name: gateway_1_test_suite
    pull: always
    image: razorpay/onggi:php-7.2-apache-api
    depends_on:
      - prepare_test
    commands:
      - "php vendor/phpunit/phpunit/phpunit --testsuite \"Gateway-1 Test Suite\" --printer=\"Codedungeon\\\\PHPUnitPrettyResultPrinter\\\\Printer\""
    settings:
    environment:
      DB_AUTH_DATABASE: api_auth_gateway1
      DB_AUTH_HOST: mysql3
      DB_LIVE_DATABASE: api_live_gateway1
      DB_LIVE_HOST: mysql3
      DB_TEST_DATABASE: api_test_gateway1
      DB_TEST_HOST: mysql3
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
      ES_AUDIT_HOST: elasticsearch
      ES_ENTITY_INDEX_PREFIX: testing_gateway_1_
      ES_ENTITY_TYPE_PREFIX: testing_gateway_1_
      ES_HOST: elasticsearch
      GIT_TOKEN:
        from_secret: git_token
      REDIS_HOST: redis8
      QUERY_CACHE_REDIS_HOST: redis8
      MUTEX_REDIS_HOST: redis8
      THROTTLE__REDIS_HOST: redis8
      RZP_API:
        from_secret: rzp_api
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - tag
          - pull_request

  - name: gateway_2_test_suite
    pull: always
    image: razorpay/onggi:php-7.2-apache-api
    depends_on:
      - prepare_test
    commands:
      - "php vendor/phpunit/phpunit/phpunit --testsuite \"Gateway-2 Test Suite\" --printer=\"Codedungeon\\\\PHPUnitPrettyResultPrinter\\\\Printer\""
    settings:
    environment:
      DB_AUTH_DATABASE: api_auth_gateway2
      DB_AUTH_HOST: mysql3
      DB_LIVE_DATABASE: api_live_gateway2
      DB_LIVE_HOST: mysql3
      DB_TEST_DATABASE: api_test_gateway2
      DB_TEST_HOST: mysql3
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
      ES_AUDIT_HOST: elasticsearch
      ES_ENTITY_INDEX_PREFIX: testing_gateway_2_
      ES_ENTITY_TYPE_PREFIX: testing_gateway_2_
      ES_HOST: elasticsearch
      GIT_TOKEN:
        from_secret: git_token
      REDIS_HOST: redis9
      QUERY_CACHE_REDIS_HOST: redis9
      MUTEX_REDIS_HOST: redis9
      THROTTLE__REDIS_HOST: redis9
      RZP_API:
        from_secret: rzp_api
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - tag
          - pull_request

  - name: build-app
    pull: default
    image: plugins/docker
    settings:
      build_args:
        - "GIT_COMMIT_HASH=${DRONE_COMMIT_SHA}"
      build_args_from_env:
        - GIT_TOKEN
        - GIT_USERNAME
      repo: razorpay/api
      tags: "${DRONE_COMMIT_SHA}"
    environment:
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
      GIT_TOKEN:
        from_secret: git_token
      GIT_USERNAME:
        from_secret: git_username
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request
      status:
        - success

  - name: build-checkout
    pull: default
    image: plugins/docker
    settings:
      build_args:
        - "GIT_COMMIT_HASH=${DRONE_COMMIT_SHA}"
      repo: razorpay/api
      tags: "checkout-${DRONE_COMMIT_SHA}"
      dockerfile: Dockerfile.checkout
    environment:
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request
      status:
        - success

  - name: build-openresty
    pull: default
    image: plugins/docker
    settings:
      build_args:
        - "GIT_COMMIT_HASH=${DRONE_COMMIT_SHA}"
      build_args_from_env:
        - GIT_TOKEN
        - GIT_USERNAME
      repo: razorpay/api
      tags: "openresty-${DRONE_COMMIT_SHA}"
      dockerfile: Dockerfile.openresty
    environment:
      DOCKER_PASSWORD:
        from_secret: docker_password
      DOCKER_USERNAME:
        from_secret: docker_username
      GIT_TOKEN:
        from_secret: git_token
      GIT_USERNAME:
        from_secret: git_username
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request
      status:
        - success

  - name: build-notify
    pull: default
    image: plugins/slack
    settings:
      channel: tech_builds
      icon_url: "https://avatars2.githubusercontent.com/u/2181346?s=200&v=4"
      template: "{{#success build.status}}\n  Build succeeded.\n{{else}}\n  Build failed.\n{{/success}}\n  Build No:{{build.number}}\n  Branch: {{build.branch}}\n  Commit: {{build.commit}}\n  Author: {{build.author}}\n  Started at: {{build.started}}\n  Time taken: {{since build.started}}\n  Link: {{build.link}}\n"
      username: drone
    environment:
      SLACK_WEBHOOK:
        from_secret: slack_webhook
    depends_on:
      - validate_php_syntax
      - application_test_suite
      - features_test_suite
      - feature_2_test_suite
      - feature_3_test_suite
      - feature_4_test_suite
      - gateway_3_test_suite
      - payment_test_suite
      - gateway_1_test_suite
      - gateway_2_test_suite
    when:
      event:
        - push
  - name: trigger_regression_suite
    image: plugins/webhook
    settings:
      urls: "https://deploy-api.razorpay.com/webhooks/webhook/x-regression"
      content_type: application/json
      template: { "branch" : "{{build.branch}}", "commit": "{{build.commit}}" , "status": "{{build.status}}" , "repo": "{{repo.name}}"}
    depends_on:
      - build-app
      - application_test_suite
      - features_test_suite
      - feature_2_test_suite
      - feature_3_test_suite
      - feature_4_test_suite
      - gateway_3_test_suite
      - payment_test_suite
      - gateway_1_test_suite
      - gateway_2_test_suite
    when:
      branch:
        - master
      status:
        - success
  - name: build-notify-master
    pull: default
    image: plugins/slack
    settings:
      channel: tech_backend
      icon_url: "https://avatars2.githubusercontent.com/u/2181346?s=200&v=4"
      template: "Master Build failed. Build No:{{build.number}}\n Branch: {{build.branch}}\n Commit: {{build.commit}}\n Author: {{build.author}}\n Started at: {{build.started}}\n Time taken: {{since build.started}}\n Link: {{build.link}}\n"
      username: drone
    environment:
      SLACK_WEBHOOK:
        from_secret: slack_webhook
    depends_on:
      - build-app
      - build-checkout
      - build-openresty
    when:
      branch:
        - master
      status:
        - failure
services:
  - name: mysql
    pull: default
    image: mysql:5.7
    tmpfs:
      - /var/lib/mysql
    environment:
      MYSQL_DATABASE: api
      MYSQL_ROOT_PASSWORD: root
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request

  - name: mysql2
    pull: default
    image: mysql:5.7
    tmpfs:
      - /var/lib/mysql
    environment:
      MYSQL_DATABASE: api
      MYSQL_ROOT_PASSWORD: root
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request

  - name: mysql3
    pull: default
    image: mysql:5.7
    tmpfs:
      - /var/lib/mysql
    environment:
      MYSQL_DATABASE: api
      MYSQL_ROOT_PASSWORD: root
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request

  - name: mysql4
    pull: default
    image: mysql:5.7
    tmpfs:
      - /var/lib/mysql
    environment:
      MYSQL_DATABASE: payments_upi
      MYSQL_ROOT_PASSWORD: root
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request

  - name: redis
    pull: default
    image: redis
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request

  - name: redis2
    pull: default
    image: redis
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request

  - name: redis3
    pull: default
    image: redis
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request

  - name: redis4
    pull: default
    image: redis
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request

  - name: redis5
    pull: default
    image: redis
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request

  - name: redis6
    pull: default
    image: redis
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request

  - name: redis7
    pull: default
    image: redis
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request

  - name: redis8
    pull: default
    image: redis
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request

  - name: redis9
    pull: default
    image: redis
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request

  - name: elasticsearch
    pull: default
    image: elasticsearch:5.2-alpine
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    when:
      event:
        include:
          - push
        exclude:
          - deployment
          - pull_request
