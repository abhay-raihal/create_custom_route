CREATE TABLE linked_account_reference_data (
  id char(14) COLLATE utf8mb4_bin NOT NULL,
  account_name varchar(255) NOT NULL,
  account_email varchar(255) NOT NULL,
  business_name varchar(255) NOT NULL,
  business_type varchar(255) NOT NULL,
  account_number varchar(40) NOT NULL,
  beneficiary_name varchar(120) NOT NULL,
  category varchar(60) NOT NULL,
  dashboard_access tinyint NOT NULL DEFAULT '0',
  customer_refund_access tinyint NOT NULL DEFAULT '0',
  is_active tinyint NOT NULL DEFAULT '1',
  ifsc_code char(11) NOT NULL,
  created_at int NOT NULL,
  updated_at int DEFAULT NULL,
  PRIMARY KEY (id),
  KEY la_reference_data_category_index (category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin;

ALTER TABLE payouts
    ADD COLUMN status_details_id char(14) COLLATE utf8mb4_bin DEFAULT NULL;

ALTER TABLE pricing
    ADD COLUMN app_name varchar(16) DEFAULT NULL;

ALTER TABLE cards
    ADD merchant_id varchar(14) after id;

ALTER TABLE merchant_documents
    MODIFY file_store_id char(14) NULL;

ALTER TABLE merchant_documents
    ADD INDEX (`file_store_id`);

UPDATE cards, payments
    SET cards.merchant_id = payments.merchant_id where cards.id = payments.card_id;

ALTER TABLE cards MODIFY COLUMN merchant_id VARCHAR(14) NOT NULL,
    ADD CONSTRAINT cards_merchant_id_foreign FOREIGN KEY(merchant_id)
    REFERENCES merchants(id) ON DELETE RESTRICT;
ALTER TABLE `cards` ADD INDEX `cards_network_index` (`network`);

ALTER TABLE transactions
    ADD channel VARCHAR(8) NOT NULL after escrow_balance;
ALTER TABLE transactions
    ADD INDEX transactions_channel_index (`channel`);

ALTER TABLE bank_accounts
    ADD COLUMN beneficiary_code VARCHAR(6) UNIQUE NOT NULL after account_number,
    ADD COLUMN beneficiary_city VARCHAR(30) NOT NULL after beneficiary_address4,
    ADD COLUMN beneficiary_state VARCHAR(2) NOT NULL after beneficiary_city,
    ADD COLUMN beneficiary_country VARCHAR(2) NOT NULL after beneficiary_state,
    ADD COLUMN beneficiary_pin CHAR(6) NOT NULL after beneficiary_country,
    MODIFY COLUMN beneficiary_address1 VARCHAR(30) NOT NULL,
    MODIFY COLUMN beneficiary_address2 VARCHAR(30),
    MODIFY COLUMN beneficiary_address3 VARCHAR(30),
    MODIFY COLUMN beneficiary_address4 VARCHAR(30),
    MODIFY COLUMN beneficiary_name VARCHAR(40) NOT NULL after account_number,
    MODIFY COLUMN beneficiary_mobile CHAR(10) NOT NULL;

ALTER TABLE daily_settlements
    ADD COLUMN api_fee INTEGER NOT NULL AFTER amount,
    ADD COLUMN gateway_fee INTEGER NOT NULL AFTER api_fee;

ALTER TABLE payments
    ADD INDEX payments_created_at_index (created_at),
    ADD COLUMN auto_captured TINYINT(1) NOT NULL DEFAULT 0 AFTER transaction_id,
    ADD INDEX payments_auto_captured_index (auto_captured);

INSERT INTO balance (id, balance, created_at, updated_at) VALUES ('1ApiFeeAccount', '0', '1424916694', '1424916694');

ALTER TABLE daily_settlements
    ADD COLUMN settlement_count INTEGER NOT NULL AFTER gateway_fee,
    ADD COLUMN transaction_count INTEGER NOT NULL AFTER settlement_count;

ALTER TABLE daily_settlements
    MODIFY COLUMN settlement_count INTEGER NOT NULL,
    MODIFY COLUMN transaction_count INTEGER NOT NULL;

ALTER TABLE payments
    ADD COLUMN verified TINYINT(1) AFTER signed,
    MODIFY COLUMN notes TEXT,
    ADD INDEX payments_verified_index (verified);

ALTER TABLE merchants
    ADD COLUMN activated_at INT AFTER activated,
    ADD INDEX merchants_activated_at_index (activated_at);

UPDATE merchants m1, merchants m2
    SET m1.activated_at = m2.updated_at
    WHERE m1.id = m2.id && m1.activated = 1;

ALTER TABLE terminals
    ADD COLUMN gateway_access_code VARCHAR(255) AFTER gateway_terminal_password,
    ADD COLUMN gateway_secure_secret VARCHAR(255) AFTER gateway_access_code,
    ADD COLUMN netbanking TINYINT(1) AFTER card,
    ADD COLUMN shared TINYINT(1) AFTER netbanking,
    MODIFY COLUMN gateway_merchant_id VARCHAR(255),
    MODIFY COLUMN gateway_terminal_id VARCHAR(255),
    MODIFY COLUMN gateway_terminal_password TEXT;

ALTER TABLE merchants
    ADD COLUMN website VARCHAR(255) AFTER pricing_plan_id,
    ADD COLUMN category CHAR(4) AFTER website,
    ADD COLUMN international TINYINT(1) DEFAULT 0 AFTER category;

ALTER TABLE merchant_banks
    MODIFY COLUMN banks TEXT NOT NULL;

ALTER TABLE paytm
    CHANGE COLUMN `respmessage` `respmsg` VARCHAR(255);

ALTER TABLE axis
    MODIFY COLUMN vpc_TxnResponseCode VARCHAR(10);

ALTER TABLE paytm
    MODIFY COLUMN payment_mode_only VARCHAR(255),
    MODIFY COLUMN auth_mode VARCHAR(255),
    MODIFY COLUMN payment_type_id VARCHAR(5),
    MODIFY COLUMN banktxnid VARCHAR(15),
    MODIFY COLUMN respcode VARCHAR(10);

ALTER TABLE paytm
    ADD COLUMN method VARCHAR(255) AFTER action;

ALTER TABLE merchant_banks
    ADD COLUMN paytm TINYINT(1) AFTER banks;

ALTER TABLE payments
    ADD COLUMN wallet varchar(8) AFTER bank;

ALTER TABLE merchant_banks
    MODIFY COLUMN paytm TINYINT(1) NOT NULL DEFAULT 0;

ALTER TABLE merchant_banks
    ADD COLUMN card TINYINT(1) NOT NULL DEFAULT 1 AFTER merchant_id;

ALTER TABLE payments
    ADD COLUMN callback_url TEXT AFTER verified;

ALTER TABLE paytm
    CHANGE COLUMN `refundamt` `refundamount` VARCHAR(255);

ALTER TABLE merchants
    ADD COLUMN billing_label VARCHAR(255) AFTER international,
    ADD COLUMN hold_funds TINYINT(1) NOT NULL DEFAULT 0 AFTER live,
    ADD COLUMN transaction_report_email VARCHAR(255) AFTER billing_label;

UPDATE merchants
    SET transaction_report_email=email;

ALTER TABLE paytm
    MODIFY COLUMN txnid BIGINT;

ALTER TABLE payments
    MODIFY COLUMN bank CHAR(6);

ALTER TABLE payments
    ADD COLUMN authorized_at INTEGER AFTER transaction_id;

ALTER TABLE merchants
    ADD COLUMN receipt_email_enabled TINYINT(1) AFTER transaction_report_email;

ALTER TABLE payments
    MODIFY COLUMN callback_url TEXT;

ALTER TABLE axis
    ADD COLUMN action VARCHAR(10) AFTER payment_id,
    MODIFY COLUMN vpc_AcqResponseCode VARCHAR(3),
    MODIFY COLUMN vpc_Command VARCHAR(7),
    MODIFY COLUMN vpc_3DSXID VARCHAR(28),
    MODIFY COLUMN vpc_AuthorizeId VARCHAR(6),
    MODIFY COLUMN vpc_BatchNo VARCHAR(8),
    MODIFY COLUMN vpc_ReceiptNo VARCHAR(12),
    MODIFY COLUMN vpc_ShopTransactionNo VARCHAR(19),
    MODIFY COLUMN vpc_TransactionNo VARCHAR(19),
    MODIFY COLUMN vpc_VerToken VARCHAR(28);

ALTER TABLE axis
    ADD COLUMN vpc_AuthorisedAmount INTEGER AFTER vpc_Amount,
    ADD COLUMN vpc_CapturedAmount INTEGER AFTER vpc_AuthorisedAmount,
    ADD COLUMN vpc_RefundedAmount INTEGER AFTER vpc_CapturedAmount;

ALTER TABLE axis
    ADD COLUMN vpc_AcqCSCRespCode VARCHAR(20) AFTER vpc_Message;

CREATE INDEX payments_authorized_at_index ON payments(authorized_at) USING BTREE;

ALTER TABLE axis
    ADD COLUMN vpc_CSCResultCode VARCHAR(20) AFTER vpc_AcqCSCRespCode;

ALTER TABLE netbanking
    ADD COLUMN date VARCHAR(255) AFTER reference1,
    ADD COLUMN refund_id CHAR(14) AFTER date;

ALTER TABLE netbanking
    ADD INDEX `netbanking_refund_id_index` (`refund_id`);

ALTER TABLE billdesk
    ADD COLUMN received TINYINT(1) NOT NULL DEFAULT 0 AFTER action;

UPDATE billdesk set received = 1 where AuthStatus IS NOT NULL;

ALTER TABLE payments
    ADD INDEX `payments_email_index` (`email`);

ALTER TABLE netbanking
    ADD COLUMN received TINYINT(1) NOT NULL DEFAULT 0 AFTER action;

UPDATE netbanking set received=1 where bank_payment_id IS NOT NULL;

ALTER TABLE axis
    ADD COLUMN received TINYINT(1) NOT NULL DEFAULT 0 AFTER action,
    ADD INDEX `axis_received_index` (`received`);

ALTER TABLE billdesk
    ADD INDEX `billdesk_received_index` (`received`),
    ADD INDEX `billdesk_AuthStatus_index` (`AuthStatus`);

ALTER TABLE netbanking
    ADD INDEX `netbanking_received_index` (`received`);

ALTER TABLE paytm
    ADD COLUMN received TINYINT(1) NOT NULL DEFAULT 0 after action,
    ADD INDEX `paytm_received_index` (`received`);

ALTER TABLE payments
    ADD INDEX `payments_bank_index` (`bank`);

ALTER TABLE merchant_banks
    ADD COLUMN mobikwik TINYINT(1) NOT NULL DEFAULT 0 AFTER paytm,
    ADD INDEX `methods_card_index` (`card`),
    ADD INDEX `methods_paytm_index` (`paytm`),
    ADD INDEX `methods_mobikwik_index` (`mobikwik`);

UPDATE payments SET status="refunded" WHERE refund_status="full";

## Only in live production test mode database
UPDATE payments
    JOIN terminals ON payments.terminal_id = terminals.id AND terminals.used_count=0
    SET terminal_id="1000SharpTrmnl" AND gateway="sharp";

DELETE FROM terminals WHERE used_count=0;
UPDATE terminals set deleted_at="1442860397" WHERE id!="1000SharpTrmnl";

DELETE FROM terminals
    WHERE id NOT IN (
        SELECT payments.terminal_id FROM payments);

ALTER TABLE netbanking
    ADD COLUMN int_payment_id BIGINT UNSIGNED AFTER payment_id,
    ADD INDEX `netbanking_int_payment_id_index` (`int_payment_id`);

ALTER TABLE balance
    MODIFY COLUMN balance BIGINT NOT NULL DEFAULT 0,
    MODIFY COLUMN on_hold BIGINT NOT NULL DEFAULT 0;

ALTER TABLE payments
    ADD COLUMN internal_error_code VARCHAR(255) AFTER error_code;

ALTER TABLE transactions
    MODIFY COLUMN escrow_balance BIGINT;

ALTER TABLE transactions
    MODIFY COLUMN balance BIGINT;

ALTER TABLE netbanking
    ADD COLUMN caps_payment_id CHAR(14) NOT NULL AFTER refund_id,
    ADD INDEX `netbanking_caps_payment_id_index` (`caps_payment_id`);

UPDATE netbanking SET caps_payment_id = UPPER(payment_id);

ALTER TABLE merchants
    ADD INDEX `merchants_activated_index` (`activated`),
    ADD INDEX `merchants_live_index` (`live`),
    ADD INDEX `merchants_hold_funds_index` (`hold_funds`),
    ADD INDEX `merchants_category_index` (`category`),
    ADD INDEX `merchants_international_index` (`international`),
    ADD INDEX `merchants_receipt_email_enabled_index` (`receipt_email_enabled`);

ALTER TABLE axis
    ADD COLUMN amex TINYINT(1) AFTER received,
    ADD INDEX `axis_amex_index` (`amex`);

ALTER TABLE paytm
    MODIFY COLUMN banktxnid VARCHAR(20);

ALTER TABLE terminals
    ADD COLUMN category INTEGER UNSIGNED AFTER used_count,
    ADD INDEX `terminals_category_index` (`category`),
    ADD INDEX `terminals_gateway_index` (`gateway`),
    ADD INDEX `terminals_deleted_at_index` (`deleted_at`);

ALTER TABLE cards
    ADD INDEX `cards_last4_index` (`last4`);

ALTER TABLE axis
    MODIFY COLUMN vpc_AcqResponseCode VARCHAR(4);

ALTER TABLE merchant_banks
    ADD COLUMN payzapp TINYINT(1) NOT NULL DEFAULT 0 AFTER mobikwik,
    ADD INDEX `methods_payzapp_index` (`payzapp`);

ALTER TABLE settlements
    ADD COLUMN fees INTEGER UNSIGNED AFTER AMOUNT;

## Runs code here first to fill all fees values for settlements

ALTER TABLE settlements
    MODIFY COLUMN fees INTEGER UNSIGNED NOT NULL;

ALTER TABLE daily_settlements
    ADD COLUMN fees INTEGER UNSIGNED AFTER AMOUNT;

UPDATE daily_settlements SET settlement_count = 1 WHERE id="2gjqgF27mIgFFp";

## Runs code here first to fill all fees values for daily settlements

ALTER TABLE daily_settlements
    MODIFY COLUMN fees INTEGER UNSIGNED NOT NULL;

ALTER TABLE merchants
    ADD COLUMN settlement_schedule INTEGER AFTER billing_label;

UPDATE merchants SET settlement_schedule=3;

ALTER TABLE merchants
    MODIFY COLUMN settlement_schedule INTEGER NOT NULL;

UPDATE axis SET vpc_Command = "pay" WHERE vpc_Command = "queryDR" AND action = "authorize";

ALTER TABLE balance
    ADD COLUMN credits BIGINT NOT NULL DEFAULT 0 AFTER on_hold;

ALTER TABLE transactions
    ADD COLUMN gratis TINYINT(1) NOT NULL DEFAULT 0 AFTER api_fee,
    ADD INDEX `transactions_gratis_index` (`gratis`);

UPDATE pricing SET plan_id="10ZeroPricingP" WHERE plan_id="4Je2k4PWacyYbO";
UPDATE pricing SET id="1ZeroPricingR1" WHERE plan_id="10ZeroPricingP" AND payment_method="card";
UPDATE pricing SET id="1ZeroPricingR2" WHERE plan_id="10ZeroPricingP" AND payment_method="netbanking";
UPDATE pricing SET id="1ZeroPricingR3" WHERE plan_id="10ZeroPricingP" AND payment_method="wallet";

UPDATE payments SET terminal_id="3olokG2obOLrly" WHERE terminal_id="4EgXhcZuKp9eK6";
UPDATE terminals SET id="1000HdfcShared" WHERE id="4EgXhcZuKp9eK6";
UPDATE payments SET terminal_id="1000HdfcShared" WHERE terminal_id="3olokG2obOLrly";

ALTER TABLE payments
    ADD INDEX payments_gateway_index (gateway);

ALTER TABLE pricing
    ADD INDEX `pricing_plan_id_index` (`plan_id`);

ALTER TABLE merchants
    ADD INDEX merchants_pricing_plan_id_index (pricing_plan_id);

ALTER TABLE transactions
    ADD COLUMN service_tax INTEGER UNSIGNED AFTER fee;

ALTER TABLE payments
    ADD COLUMN fee INTEGER UNSIGNED AFTER callback_url,
    ADD COLUMN service_tax INTEGER UNSIGNED AFTER fee;

ALTER TABLE terminals
    ADD COLUMN gateway_merchant_id2 VARCHAR(255) AFTER gateway_merchant_id;

ALTER TABLE bank_accounts
    ADD COLUMN id CHAR(14) FIRST;

ALTER TABLE settlements
    ADD COLUMN bank_account_id CHAR(14) AFTER transaction_id;

ALTER TABLE settlements
    ADD COLUMN service_tax INTEGER UNSIGNED AFTER fees;

ALTER TABLE bank_accounts
    ADD COLUMN deleted_at INTEGER UNSIGNED AFTER updated_at;

ALTER TABLE bank_accounts
    ADD COLUMN is_gateway_sync TINYINT(1) DEFAULT NULL

ALTER TABLE bank_accounts
    ADD INDEX bank_accounts_deleted_at_index (deleted_at);

UPDATE settlements
    JOIN bank_accounts b ON s.merchant_id = b.merchant_id
    SET s.bank_account_id = b.id;

ALTER TABLE bank_accounts
    ADD INDEX bank_accounts_merchant_id_foreign (merchant_id),
    DROP PRIMARY KEY,
    MODIFY COLUMN id CHAR(14) NOT NULL,
    ADD PRIMARY KEY (id);

ALTER TABLE settlements
    ADD CONSTRAINT settlements_bank_account_id_foreign FOREIGN KEY (bank_account_id) REFERENCES bank_accounts(id);

ALTER TABLE daily_settlements
    ADD COLUMN service_tax INTEGER UNSIGNED AFTER fees;

ALTER TABLE bank_accounts
    MODIFY COLUMN beneficiary_mobile CHAR(11);

ALTER TABLE payments
    MODIFY COLUMN verified TINYINT(4);

ALTER TABLE hdfc
    MODIFY COLUMN error_text VARCHAR(255);

ALTER TABLE merchants
    ADD COLUMN features VARCHAR(255) AFTER transaction_report_email;

ALTER TABLE hdfc
    ADD COLUMN received TINYINT(1) AFTER action,
    ADD INDEX hdfc_received_index (received);

UPDATE merchant_banks
    SET payzapp='1' WHERE mobikwik='1';

ALTER TABLE merchant_banks
    ADD COLUMN amex TINYINT(1) NOT NULL DEFAULT 0 AFTER card,
    ADD COLUMN emi TINYINT(1) NOT NULL DEFAULT 0 AFTER banks,
    ADD INDEX methods_amex_index (amex),
    ADD INDEX methods_emi_index (emi);

ALTER TABLE axis
    ADD COLUMN ezeclick TINYINT(1) NOT NULL DEFAULT 0 AFTER amex,
    ADD INDEX axis_ezeclick_index (ezeclick);

ALTER TABLE payments
    MODIFY COLUMN emi_plan_id VARCHAR(14);

ALTER TABLE pricing
    ADD COLUMN international TINYINT(1) NOT NULL DEFAULT 0 AFTER payment_issuer,
    ADD INDEX pricing_international_index (international);

ALTER TABLE payments
    ADD COLUMN emi_plan_id VARCHAR(14) AFTER wallet;

ALTER TABLE terminals
    ADD COLUMN emi TINYINT(1) AFTER netbanking,
    ADD COLUMN emi_duration INTEGER AFTER emi,
    ADD INDEX terminals_emi_index (emi);

ALTER TABLE iins
    ADD COLUMN issuer_name VARCHAR(255) AFTER issuer,
    ADD COLUMN emi TINYINT(1) NOT NULL DEFAULT 0 AFTER issuer_name;

UPDATE iins
    SET issuer_name=issuer;

ALTER TABLE axis
    MODIFY COLUMN vpc_Card VARCHAR(4);

ALTER TABLE cards
    ADD COLUMN issuer_name VARCHAR(255) AFTER issuer,
    ADD COLUMN emi TINYINT(1) NOT NULL DEFAULT 0 AFTER issuer_name;

ALTER TABLE netbanking
    ADD INDEX netbanking_bank_payment_id_index (bank_payment_id);

ALTER TABLE pricing
    ADD COLUMN amount_range_active TINYINT(1) NOT NULL DEFAULT 0 AFTER international,
    ADD COLUMN amount_range_min INTEGER UNSIGNED AFTER amount_range_active,
    ADD COLUMN amount_range_max INTEGER UNSIGNED AFTER amount_range_min,
    ADD INDEX pricing_amount_range_active_index (amount_range_active);

UPDATE bank_accounts SET account_number="007805008260" WHERE merchant_id="4VUhFiV6029ARY";

ALTER TABLE netbanking
    ADD COLUMN status VARCHAR(255) AFTER int_payment_id;

ALTER TABLE payments
    ADD COLUMN order_id VARCHAR(14) AFTER status;

UPDATE axis
    SET vpc_Command="pay" WHERE vpc_Command="queryDR";
ALTER TABLE payments
    ADD CONSTRAINT payments_order_id_foreign FOREIGN KEY (order_id) REFERENCES orders(id);

ALTER TABLE orders
    MODIFY COLUMN authorized TINYINT(1) DEFAULT 0,
    ADD INDEX orders_authorized_index (authorized);

ALTER TABLE payments
    ADD INDEX payments_method_index (method);

ALTER TABLE iins
    ADD COLUMN otp_read TINYINT(1) NOT NULL DEFAULT 0 AFTER emi,
    ADD INDEX iins_emi_index (emi),
    ADD INDEX iins_otp_read_index (otp_read);

ALTER TABLE merchants
    ADD COLUMN brand_color VARCHAR(6) AFTER features;

ALTER TABLE cards
    ADD COLUMN service VARCHAR(20) AFTER international,
    ADD COLUMN token VARCHAR(50) AFTER service,
    ADD INDEX cards_international_index (international);

ALTER TABLE merchants
    ADD COLUMN tdr_client TINYINT(1) UNSIGNED DEFAULT 0 AFTER features;

ALTER TABLE merchants
    CHANGE COLUMN tdr_client `fee_bearer` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0;

ALTER TABLE merchants
    ADD COLUMN risk_rating TINYINT(1) UNSIGNED NOT NULL AFTER brand_color,
    ADD INDEX merchants_risk_rating_index (risk_rating);

UPDATE merchants SET risk_rating = 3;

UPDATE iins
    SET type="credit" where iin in (559341, 559340, 530562, 524512, 524508, 405995);

ALTER TABLE axis
    ADD INDEX axis_vpc_ReceiptNo_index (vpc_ReceiptNo);

ALTER TABLE refunds
    ADD COLUMN notes TEXT AFTER currency;

ALTER TABLE orders
    ADD COLUMN notes TEXT AFTER receipt;

ALTER TABLE merchants
    DROP INDEX merchants_email_unique,
    ADD INDEX merchants_email_index (email);

DELETE FROM pricing
    where id = "4jRr7VrCKEY4rY" or id="5Gd4xm6eNLP3tL";

ALTER TABLE webhooks
    ADD COLUMN secret VARCHAR(255) AFTER url;

ALTER TABLE webhooks
    MODIFY COLUMN secret TEXT;

ALTER TABLE cards
    ADD COLUMN vault VARCHAR(20) AFTER token,
    ADD COLUMN vault_token VARCHAR(50) AFTER vault,
    ADD INDEX cards_vault_token_index (vault_token),
    ADD INDEX cards_vault_index (vault);

UPDATE cards
    SET vault=service, vault_token=token;

ALTER TABLE payments
    ADD COLUMN customer_id VARCHAR(14) AFTER error_description,
    ADD COLUMN app_id VARCHAR(14) AFTER customer_id;

ALTER TABLE orders
    ADD COLUMN customer_id VARCHAR(14) AFTER receipt;

ALTER TABLE payments
    ADD COLUMN token VARCHAR(14) AFTER app_id,
    ADD COLUMN save TINYINT(1) NOT NULL DEFAULT 0 AFTER service_tax;

DELETE FROM pricing
    WHERE id="4oSWwZchMqnDBW";

ALTER TABLE orders
    ADD COLUMN method VARCHAR(10) AFTER notes,
    ADD COLUMN account_number VARCHAR(50) AFTER method;

ALTER TABLE webhooks
    ADD COLUMN last_successful_at INTEGER UNSIGNED AFTER failure_count;

ALTER TABLE merchant_banks
    ADD COLUMN netbanking TINYINT(1) NOT NULL DEFAULT 1 AFTER card,
    ADD INDEX methods_netbanking_index (netbanking);

ALTER TABLE cards
    ADD COLUMN global_card_id VARCHAR(14) AFTER country,
    ADD CONSTRAINT cards_global_card_id_foreign FOREIGN KEY (global_card_id) REFERENCES cards(id);

ALTER TABLE tokens
    ADD COLUMN terminal_id VARCHAR(14) AFTER merchant_id,
    ADD CONSTRAINT token_terminal_id_foreign FOREIGN KEY (terminal_id) REFERENCES terminals(id);

ALTER TABLE merchants
    ADD COLUMN logo_url TEXT AFTER brand_color;

ALTER TABLE transactions
   ADD INDEX transactions_created_at_index (created_at);

ALTER TABLE orders
    ADD COLUMN bank VARCHAR(6) AFTER method;

ALTER TABLE merchant_banks
    ADD COLUMN payumoney TINYINT(1) AFTER payzapp;

UPDATE merchant_banks
    SET paytm=0, mobikwik=1, payzapp=1, payumoney=1 WHERE paytm=1;

ALTER TABLE payments
    ADD COLUMN otp_attempts TINYINT(1) AFTER service_tax,
    ADD COLUMN otp_count TINYINT(1) AFTER otp_attempts;

UPDATE cards
    SET type = "debit" where network="RuPay" and type="unknown";

UPDATE cards
    SET type = "credit" where network="American Express" and type="unknown";

UPDATE cards
    SET type = "debit" where network="Maestro" and type="unknown";

ALTER TABLE hdfc
    MODIFY COLUMN enroll_result VARCHAR(20);

ALTER TABLE settlements
    ADD INDEX settlements_created_at_index (created_at);

ALTER TABLE tokens
    ADD COLUMN gateway_token2 VARCHAR(50) AFTER gateway_token,
    ADD COLUMN expired_at INTEGER AFTER updated_at;

UPDATE payments SET status="authorized", error_code=NULL, error_description=NULL, internal_error_code=NULL WHERE id="5WnlkFVOqZ2DZB"; # (only on live prod)

ALTER TABLE customer_apps
    CHANGE device_id device_token VARCHAR(50);

ALTER TABLE payments
    ADD COLUMN global_customer_id VARCHAR(14) AFTER customer_id,
    ADD COLUMN app_token VARCHAR(14) AFTER app_id;

ALTER TABLE terminals
    ADD COLUMN gateway_recon_password VARCHAR(15) AFTER gateway_secure_secret;

ALTER TABLE transactions
    ADD COLUMN gateway_service_tax INTEGER AFTER gateway_fee;

ALTER TABLE billdesk
    ADD INDEX billdesk_RefundId_index (RefundId),
    ADD INDEX billdesk_TxnReferenceNo_index (TxnReferenceNo),
    ADD INDEX billdesk_BankReferenceNo_index (BankReferenceNo),
    MODIFY COLUMN refund_id VARCHAR(14),
    ADD INDEX billdesk_refund_id_index (refund_id);

ALTER TABLE iins
    ADD COLUMN created_at INTEGER,
    ADD COLUMN updated_at INTEGER;

## Set timestamp to 1st Jan 2015 here.

UPDATE iins
    SET created_at=1420070400, updated_at=1420070400;

ALTER TABLE iins
    ADD INDEX iins_created_at_index (created_at);

ALTER TABLE tokens
    ADD COLUMN deleted_at INTEGER;

ALTER TABLE customers
    ADD COLUMN deleted_at INTEGER;

ALTER TABLE customer_apps
    ADD COLUMN deleted_at INTEGER;

## Syncs up test iins table with live iins table.
use api-test;
truncate iins;
INSERT INTO `api-test`.iins SELECT * from api.iins;
exit;

ALTER TABLE axis
    ADD INDEX vpc_3DSstatus_index (vpc_3DSstatus);

ALTER TABLE terminals
    MODIFY COLUMN gateway_recon_password TEXT;

ALTER TABLE sessions
    ADD COLUMN user_id INTEGER AFTER id,
    ADD COLUMN ip_address VARCHAR(45) AFTER user_id,
    ADD COLUMN user_agent TEXT AFTER ip_address;

ALTER TABLE cybersource
    CHANGE error_code reason_code INTEGER;

DROP INDEX beneficiary_code ON bank_accounts;

ALTER TABLE bank_accounts MODIFY COLUMN beneficiary_code VARCHAR(6);

ALTER TABLE terminals ADD COLUMN gateway_acquirer VARCHAR(10) AFTER gateway_recon_password;

ALTER TABLE transactions
    ADD COLUMN gateway_settled_at INTEGER AFTER settled_at,
    ADD INDEX gateway_settled_at_index (gateway_settled_at);

## These payments were successful and had transactions but were erroneously marked as failed
## due to lack of checks
UPDATE payments
    SET status="captured", error_code=null, error_description=null WHERE id = "3pATJGnQjn8mTr";
UPDATE payments
    SET status="captured", error_code=null, error_description=null WHERE id = "2mKynpq6sUkSmc";

SELECT count(*) FROM transactions, payments, billdesk
    WHERE transactions.entity_id = payments.id AND
        payments.id = billdesk.payment_id AND
        billdesk.action = "authorize" AND
        billdesk.RefStatus = "0699" AND
        payments.status = "refunded";

UPDATE payments
    SET status = "captured", error_code=NULL, error_description=NULL, internal_error_code=NULL WHERE id = "5uvPsXKAB4Pl03"; # Only on live-prod

UPDATE payments
    SET status = "captured", error_code=NULL, error_description=NULL, internal_error_code=NULL WHERE id = "5w7PTSGM2iPQJg"; # Only on live-prod

UPDATE payments
    SET status = "captured", error_code=NULL, error_description=NULL, internal_error_code=NULL WHERE id = "5w5mYVbtBu14oT"; # Only on live-prod

ALTER TABLE payments
    ADD COLUMN global_token VARCHAR(14) AFTER token;

ALTER TABLE mobikwik
    MODIFY COLUMN merchantname VARCHAR(255);

# 1. Saved payments with app token set but global_customer_id null

UPDATE payments
    JOIN customer_apps as appTokens ON payments.app_token = appTokens.id
    SET payments.global_customer_id=appTokens.customer_id
    WHERE payments.app_token IS NOT NULL
        AND payments.global_customer_id IS NULL
        AND payments.method='card';

# 2. Token to global token
UPDATE payments
    JOIN tokens on tokens.token = payments.token
    SET payments.global_token = payments.token
    Where payments.app_token is not null
        And payments.token is not null and payments.method='card'
        AND tokens.merchant_id = "100000Razorpay";

UPDATE payments
    JOIN tokens on tokens.token = payments.token
    SET payments.token = null
    Where payments.app_token is not null
        And payments.token is not null and payments.method='card'
        AND tokens.merchant_id = "100000Razorpay";

# 3. Token not set for first time card save
## For global card save
UPDATE payments
    JOIN cards ON payments.card_id = cards.id
    Join tokens on tokens.card_id = cards.global_card_id
    SET payments.global_token=tokens.token
    WHERE payments.save='1'
      AND payments.method='card'
      AND payments.app_token IS NOT NULL
      AND payments.token IS NULL
      AND payments.global_token IS NULL;

# For local card save
UPDATE payments
    Join tokens on tokens.card_id=payments.card_id and payments.customer_id=tokens.customer_id
    SET payments.token=tokens.token
    WHERE payments.save='1'
      AND payments.method='card'
      AND payments.customer_id IS NOT NULL
      AND payments.token IS NULL;

# 4. Global Token not set for payumoney
UPDATE payments
    JOIN tokens ON tokens.customer_id=payments.global_customer_id
    SET payments.global_token=tokens.token
    WHERE payments.method='wallet'
        AND payments.wallet='payumoney'
        AND payments.global_token IS NULL
        AND payments.global_customer_id is not null
        AND tokens.method='wallet'
        AND tokens.wallet='payumoney';


UPDATE payments
SET status = "failed",
    authorized_at = null,
    amount_authorized = 0,
    error_code = "BAD_REQUEST_ERROR",
    internal_error_code = "BAD_REQUEST_PAYMENT_DECLINED_BY_GATEWAY",
    error_description = "Payment declined",
    transaction_id = null
WHERE id = "5vm1q5UUkMNCYH";

# Only on prod-live
UPDATE payments
    SET status='captured'
    WHERE id in ('5vkfFk2gMAsQQ6', '5vkhhaXpfnIP2P', '5voX4wVLTQL4Ah', '5vzwGGrIQDC1zq', '5vzy5jSwfkWT9p', '5wEya72LCrdJZt', '5wRxKnISzqvGHo');

# Only on prod-live
UPDATE payments
    SET captured_at = null
    WHERE id IN ('5wXvl50HNO3ASS', '5wd8gmtfNsbCxt', '5wFT796oZC1XYo', '5wcYDQIp8N69Xh');

ALTER TABLE cybersource
    ADD INDEX cybersource_ref_index (ref),
    ADD INDEX cybersource_capture_ref_index (capture_ref);

ALTER TABLE merchants
    ADD COLUMN max_payment_amount INTEGER AFTER receipt_email_enabled;

ALTER TABLE merchant_banks
    ADD COLUMN debit_card TINYINT(1) DEFAULT 1 AFTER emi,
    ADD COLUMN credit_card TINYINT(1) DEFAULT 1 AFTER debit_card;

ALTER TABLE emi_plans
    MODIFY COLUMN bank CHAR(4),
    ADD COLUMN network VARCHAR(5) AFTER bank;

ALTER TABLE merchant_banks
    ADD COLUMN olamoney TINYINT(1) DEFAULT 0 AFTER payumoney,
    ADD COLUMN freecharge TINYINT(1) DEFAULT 0 AFTER olamoney,
    ADD INDEX merchant_banks_olamoney_index (olamoney),
    ADD INDEX merchant_banks_freecharge_index (freecharge);

update terminals set shared=1 where merchant_id=‘100000Razorpay’;

ALTER TABLE payments
    ADD COLUMN late_authorized TINYINT(1) AFTER save,
    ADD INDEX payments_late_authorized_index (late_authorized);

UPDATE payments
    SET late_authorized = "1" WHERE (authorized_at - created_at) > 630;

UPDATE merchant_banks
    SET payumoney = "1" WHERE mobikwik = "1";

ALTER TABLE tokens MODIFY gateway_token TEXT NULL;
ALTER TABLE tokens MODIFY gateway_token2 TEXT NULL;

ALTER TABLE bank_accounts
    ADD COLUMN entity_id CHAR(14) AFTER merchant_id,
    ADD COLUMN type CHAR(8) AFTER entity_id,
    ADD INDEX bankaccounts_entity_id_index (entity_id),
    ADD INDEX bankaccounts_type_index (type);

UPDATE bank_accounts SET type = "merchant", entity_id = merchant_id;

ALTER TABLE orders
    DROP INDEX orders_receipt_index,
    ADD INDEX orders_receipt_index (receipt(25)),
    ADD COLUMN payment_capture TINYINT(1) DEFAULT 0 AFTER receipt;

ALTER TABLE pricing
    ADD COLUMN feature VARCHAR(20) AFTER plan_name;

UPDATE pricing
    SET feature = 'payment';

ALTER TABLE pricing
    MODIFY COLUMN feature VARCHAR(20) NOT NULL;

ALTER TABLE terminals
   ADD COLUMN recurring TINYINT(1) DEFAULT 0 AFTER emi_duration;

## Only on prod
UPDATE payments
   SET status='captured', error_description=null, error_code=null, internal_error_code=null
   WHERE id in ('6DUDCGfdf5A91W', '6EMWPIPIYLkOgc', '6EMb4XfFeVOdtU', '6EetvzeDKT8haB');

## Only on prod
UPDATE terminals SET category="6211" where id="6GjFUas4Aqs26l";

ALTER TABLE payments
   MODIFY COLUMN wallet VARCHAR(15);

ALTER TABLE tokens
   ADD COLUMN used_count INTEGER DEFAULT 0 AFTER gateway_token2,
   ADD COLUMN used_at INTEGER UNSIGNED AFTER used_count;

UPDATE payments
   JOIN tokens on tokens.token = payments.token
   SET token_id = tokens.id
   WHERE payments.token_id IS NULL
       AND payments.token IS NOT NULL;

UPDATE payments
   JOIN tokens on tokens.token = payments.global_token
   SET global_token_id = tokens.id
   WHERE payments.global_token_id IS NULL
       AND payments.global_token IS NOT NULL;

UPDATE tokens
JOIN
  (SELECT global_token_id AS token_id,
          count(global_token_id) AS used_count,
          max(created_at) AS used_at
   FROM payments
   WHERE global_token_id IS NOT NULL
     AND payments.authorized_at IS NOT NULL
   GROUP BY global_token_id) t1 ON t1.token_id=tokens.id
SET tokens.used_count = t1.used_count,
    tokens.used_at=t1.used_at;

## Only in prod
update payments set status='refunded' where id='6GQRe2XwaK8uLm';

UPDATE tokens
JOIN
  (SELECT token_id,
          count(token_id) AS used_count,
          max(created_at) AS used_at
   FROM payments
   WHERE token_id IS NOT NULL
     AND payments.authorized_at IS NOT NULL
   GROUP BY token_id) t1 ON t1.token_id=tokens.id
SET tokens.used_count = t1.used_count,
    tokens.used_at=t1.used_at;

ALTER TABLE payments
    ADD COLUMN international TINYINT(1) AFTER order_id;

UPDATE payments
    JOIN cards on payments.card_id = cards.id
    SET payments.international = cards.international
    WHERE payments.method = 'card';

ALTER TABLE merchant_banks
    ADD COLUMN upi BOOLEAN DEFAULT 0 NOT NULL;

ALTER TABLE terminals
    ADD COLUMN upi BOOLEAN DEFAULT 0 NOT NULL;

ALTER TABLE merchant_banks
    CHANGE COLUMN upi upi TINYINT(1) DEFAULT 0 NOT NULL AFTER netbanking;

ALTER TABLE terminals
    CHANGE COLUMN upi upi TINYINT(1) DEFAULT 0 NOT NULL AFTER netbanking;

ALTER TABLE `merchants`
    ADD COLUMN `category2` VARCHAR(255) DEFAULT NULL AFTER `category`;

ALTER TABLE `terminals`
    ADD COLUMN `network_category` VARCHAR(255) DEFAULT NULL AFTER `category`;

ALTER TABLE payments
    ADD COLUMN vpa VARCHAR(100) AFTER wallet;

ALTER TABLE terminals
    ADD COLUMN enabled TINYINT(1) DEFAULT 1 NOT NULL AFTER network_category;

ALTER TABLE payments
    ADD COLUMN recurring TINYINT(1) DEFAULT 0 AFTER OTP_COUNT;

ALTER TABLE tokens
    ADD COLUMN recurring TINYINT(1) DEFAULT 0 AFTER gateway_token2;

update settlements set status = 'failed' where id = '6IvkeDrStxAkKl';
update settlements set status = 'failed' where id = '6JKIVhAOglWEzd';
update settlements set status = 'failed' where id = '6KVt8W16z9wM2S';
update settlements set status = 'failed' where id = '6KuQGTmk6bp0TM';
update settlements set status = 'failed' where id = '6LhURyIav2Irt5';

ALTER TABLE payments
    ADD CONSTRAINT payments_token_id_foreign FOREIGN KEY(token_id) REFERENCES tokens(id) ON DELETE RESTRICT,
    ADD CONSTRAINT payments_global_token_id_foreign FOREIGN KEY(global_token_id) REFERENCES tokens(id) ON DELETE RESTRICT;

ALTER TABLE terminals
    ADD COLUMN gateway_client_certificate TEXT AFTER gateway_acquirer;

ALTER TABLE transactions
    MODIFY COLUMN amount BIGINT UNSIGNED NOT NULL,
    MODIFY COLUMN debit BIGINT UNSIGNED NOT NULL,
    MODIFY COLUMN credit BIGINT UNSIGNED NOT NULL,
    MODIFY COLUMN balance BIGINT UNSIGNED;

ALTER TABLE settlements
    MODIFY COLUMN amount BIGINT UNSIGNED NOT NULL;

ALTER TABLE daily_settlements
    MODIFY COLUMN amount BIGINT UNSIGNED NOT NULL;

ALTER TABLE settlement_details
    MODIFY COLUMN amount BIGINT UNSIGNED NOT NULL;

ALTER TABLE payment_analytics
    MODIFY COLUMN terminal_id char(14);

ALTER TABLE emi_plans
    ADD COLUMN issuer_plan_id VARCHAR(255) AFTER min_amount;

UPDATE iins
SET issuer='HSBC',
    issuer_name='HSBC Bank',
    emi='1',
    type='credit'
WHERE iin IN ('461715',
              '418356',
              '447692',
              '461704',
              '456342',
              '461707',
              '461708',
              '467191',
              '490900',
              '517755',
              '540259',
              '542207',
              '517797',
              '554837',
              '512042',
              '517782',
              '517798',
              '554851',
              '541089',
              '418357',
              '461714',
              '467190',
              '438459',
              '456719',
              '461716',
              '461721',
              '461722',
              '486269',
              '461709');

UPDATE iins
SET issuer='ICIC',
    issuer_name='ICICI Bank',
    emi='1',
    type='credit'
WHERE iin IN ('447746',
              '423226',
              '444341',
              '447758',
              '407659',
              '517637',
              '517653',
              '517719',
              '524193',
              '524376',
              '523951',
              '525996',
              '552418',
              '547467',
              '545207',
              '540282',
              '402368',
              '423227',
              '447747',
              '407651',
              '461133',
              '437551',
              '462986',
              '470573',
              '474846',
              '420580',
              '450172',
              '405533');

UPDATE iins
SET issuer='SCBL',
    issuer_name='Standard Chartered Bank',
    emi='1',
    type='credit'
WHERE iin IN ('402874',
              '412903',
              '412905',
              '419607',
              '454198',
              '462270',
              '462271',
              '462272',
              '462273',
              '543186',
              '544438',
              '549124',
              '549132',
              '554374',
              '554375',
              '554378',
              '554623',
              '558959');

UPDATE wallet w
JOIN refunds r ON w.refund_id = r.id
SET w.amount = r.amount
WHERE w.wallet = 'olamoney'
    AND w.action = 'refund'
    AND w.amount != r.amount;

ALTER TABLE first_data
    ADD COLUMN auth_code VARCHAR(6) AFTER gateway_terminal_id;

## Queries related to fee credits changes
## Fired on Oct 23 12:01 pm
ALTER TABLE credits
   MODIFY COLUMN value INTEGER NOT NULL,
   ADD COLUMN type VARCHAR(20) AFTER merchant_id;

ALTER TABLE balance
   ADD COLUMN fee_credits INTEGER NOT NULL DEFAULT 0 AFTER credits;

ALTER TABLE transactions
   ADD COLUMN fee_credits INTEGER NOT NULL DEFAULT 0 AFTER gratis;

UPDATE credits
    SET type = "amount";

ALTER TABLE credits
    MODIFY COLUMN type VARCHAR(20) NOT NULL;

ALTER TABLE schedules
    MODIFY COLUMN next_run INTEGER DEFAULT 0;

## IST 2000-01-01 00:00:00
ALTER TABLE schedules
    MODIFY COLUMN next_run INTEGER DEFAULT 946665000;

ALTER TABLE `payments`
    ADD COLUMN `verify_bucket` TINYINT(1) DEFAULT NULL AFTER `verified`;

ALTER TABLE `payments`
    ADD INDEX `payments_verify_bucket_index` (`verify_bucket`),
    ADD INDEX `payments_gateway_index` (`gateway`);

ALTER TABLE `tokens`
    ADD COLUMN status VARCHAR(20) DEFAULT NULL AFTER 'auth_type';

ALTER TABLE `tokens`
    ADD COLUMN notes TEXT DEFAULT NULL;

# Following query is run because even though HDFC said the rupay payment
# was not captured, we marked the payment as authorized on our end.
# Hence, updating the payment status and deleting the corresponding transaction.

UPDATE payments
SET status = "failed",
    authorized_at = null,
    amount_authorized = 0,
    error_code = "BAD_REQUEST_ERROR",
    internal_error_code = "BAD_REQUEST_PAYMENT_DECLINED_BY_GATEWAY",
    error_description = "Payment declined",
    transaction_id = null
WHERE id = "5vm1q5UUkMNCYH";

# Currently, the error related fields are all null.

UPDATE hdfc
SET status = "auth_enroll_failed",
    result = "null",
    auth = null,
    ref = null,
    avr = null,
    postdate = null,
    error_code = "RP00007",
    error_text = 'Purchase/Capture/Refund not done. Response result code is "NOT CAPTURED"'
WHERE id = "525568";

# Current values:
# auth = 999999
# result = NOT CAPTURED
# ref = 620015700567
# avr = N
# postdata = 0718

# Changing all above to null because recent payments which failed due to the same reason,
# their values are null in their entities.

DELETE FROM transactions WHERE id = "5vm2jUB8ckfcEW";

# Escrow balance in the transaction and also merchant balance may get messed up
# because of this. Since these are updated on authorize itself and not on capture, for rupay and maestro.

# Following query is run because even though HDFC said the maestro payment
# was not captured (purchased), we marked the payment as authorized on our end.
# Hence, updating the payment status and deleting the corresponding transaction.

UPDATE payments
SET status = "failed",
    authorized_at = null,
    amount_authorized = 0,
    error_code = "BAD_REQUEST_ERROR",
    internal_error_code = "BAD_REQUEST_PAYMENT_DECLINED_BY_GATEWAY",
    error_description = "Payment declined",
    transaction_id = null
WHERE id = "5vlIoS1jATCbuy";

# Currently, the error related fields are all null.

UPDATE hdfc
SET status = "auth_enroll_failed",
    result = "null",
    auth = null,
    ref = null,
    avr = null,
    postdate = null,
    error_code = "RP00007",
    error_text = 'Purchase/Capture/Refund not done. Response result code is "NOT CAPTURED"'
WHERE id = "525287";

# Current values:
# auth = 999999
# result = NOT CAPTURED
# ref = 620015700567
# avr = N
# postdata = 0718

# Changing all above to null because recent payments which failed due to the same reason,
# their values are null in their entities.

DELETE FROM transactions WHERE id = "5vlNg9WR5sOMrL";

# The following two queries are run because transaction was created (via recon)
# and not associated with the payment.

UPDATE payments
    SET transaction_id = '6YiwamKY8KrUao'
    WHERE id = '5MYZCAx3Is9RND';

UPDATE payments
    SET transaction_id = '6YizQlgBsrXxSb'
    WHERE id = '5b7Szpk8AU9ahw';

# These queries need to be run because these payments were done on an
# authAndCapture Axis terminal and was not handled. We are not able to refund
# them now because of that. And since these are in authorized state, they can be refunded
# on our system without having to refund on the gateway (since it's on authAndCapture).

UPDATE payments
    SET transaction_id = null
    WHERE id = "4SQ02CGsicBfB5";

DELETE FROM transactions
    WHERE id = "4SQ1dr1zWn17nv";

UPDATE payments
    SET transaction_id = null
    WHERE id = "4bxsGqsHFeV6Rw";

DELETE FROM transactions
    WHERE id = "4bxuQq1asbow3U";

UPDATE payments
    SET transaction_id = null
    WHERE id = "4bztqiuhehhrGF";

DELETE FROM transactions
    WHERE id = "4bzvEo2dECqAfN";

UPDATE payments
    SET transaction_id = null
    WHERE id = "4lH7ZQDJow6hUC";

DELETE FROM transactions
    WHERE id = "4lH9VU8axyicbn";

UPDATE payments
    SET transaction_id = null
    WHERE id = "4lQGbrSKA9Oasi";

DELETE FROM transactions
    WHERE id = "4lQHmjF5PLqryZ";

UPDATE payments
    SET transaction_id = null
    WHERE id = "4lrNkMC1VI5F6v";

DELETE FROM transactions
    WHERE id = "4lrOqsJGzOLAxk";

ALTER TABLE payments
    ADD COLUMN cancellation_reason VARCHAR(255) AFTER error_description;

ALTER TABLE schedules
    ADD COLUMN deleted_at INTEGER AFTER updated_at;

ALTER TABLE adjustment
    ADD COLUMN settlement_id VARCHAR(14) AFTER transaction_id,
    ADD CONSTRAINT adjustment_settlement_id_foreign FOREIGN KEY (settlement_id) REFERENCES settlements(id);

ALTER TABLE payments
    ADD COLUMN two_factor_auth VARCHAR(20) AFTER status;

ALTER TABLE upi
    ADD COLUMN provider VARCHAR(50) DEFAULT NULL AFTER bank,
    ADD COLUMN acquirer VARCHAR(20) AFTER amount,
    MODIFY COLUMN bank  VARCHAR(5) DEFAULT NULL;

ALTER TABLE payment_analytics
    ADD COLUMN merchant_id VARCHAR(14) AFTER payment_id,
    ADD CONSTRAINT payment_analytics_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);

# Queries around "invoices" prs deployment

ALTER TABLE `invoices` ADD COLUMN `ref_num`    char(14) DEFAULT NULL AFTER `id`;
ALTER TABLE `invoices` ADD COLUMN `issued_at`  int(11)  DEFAULT NULL AFTER `scheduled_at`;
ALTER TABLE `invoices` ADD COLUMN `paid_at`    int(11)  DEFAULT NULL AFTER `issued_at`;
ALTER TABLE `invoices` ADD COLUMN `expired_at` int(11)  DEFAULT NULL AFTER `paid_at`;

ALTER TABLE `invoices` ADD UNIQUE INDEX `invoices_merchant_id_ref_num_unique` (`merchant_id`,`ref_num`);

ALTER TABLE `line_items` ADD COLUMN `item_id`     char(14)     DEFAULT NULL AFTER `id`;
ALTER TABLE `line_items` ADD COLUMN `entity_id`   char(14)     DEFAULT NULL AFTER `item_id`;
ALTER TABLE `line_items` ADD COLUMN `entity_type` varchar(32)  DEFAULT NULL AFTER `entity_id`;

ALTER TABLE `line_items` MODIFY COLUMN `name`        varchar(512) DEFAULT NULL;
ALTER TABLE `line_items` MODIFY COLUMN `amount`      int          DEFAULT NULL;

ALTER TABLE `line_items` ADD CONSTRAINT `line_items_item_id_foreign` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`);
CREATE INDEX `line_items_entity_id_index`   ON `line_items` (`entity_id`);
CREATE INDEX `line_items_entity_type_index` ON `line_items` (`entity_type`);


# Run these queries post https://github.com/razorpay/api/pull/1575/ 's code deployment

ALTER TABLE `line_items` DROP FOREIGN KEY `line_items_invoice_id_foreign`;
DROP INDEX `line_items_amount_index` ON `line_items`;

ALTER TABLE `line_items` DROP COLUMN `invoice_id`;
ALTER TABLE `line_items` DROP COLUMN `name`;
ALTER TABLE `line_items` DROP COLUMN `description`;
ALTER TABLE `line_items` DROP COLUMN `amount`;

ALTER TABLE `line_items` MODIFY COLUMN `item_id`     char(14)    NOT NULL;
ALTER TABLE `line_items` MODIFY COLUMN `entity_id`   char(14)    NOT NULL;
ALTER TABLE `line_items` MODIFY COLUMN `entity_type` varchar(32) NOT NULL;

# Run these queries post https://github.com/razorpay/api/pull/1638 's code deployment

alter table fees_breakup add unique fees_breakup_name_transaction_id_unique (name, transaction_id);

# Queries for updating credit_card, debit_card method
UPDATE merchant_banks SET credit_card = 0 WHERE card = 0;
UPDATE merchant_banks SET debit_card = 0 WHERE card = 0;

# Pre code deployment / https://github.com/razorpay/api/pull/1697

ALTER TABLE invoices ADD COLUMN description TEXT DEFAULT NULL AFTER customer_contact;
ALTER TABLE invoices MODIFY COLUMN customer_id CHAR(14) DEFAULT NULL;

# adds invoice id to payments
ALTER TABLE payments
    ADD COLUMN invoice_id VARCHAR(14) AFTER order_id;
ALTER TABLE payments
    ADD CONSTRAINT payments_invoice_id_foreign FOREIGN KEY (invoice_id) REFERENCES invoices(id);

# Pre code deployment / Branch: invoices_rename_column

ALTER TABLE invoices
    ADD COLUMN receipt VARCHAR(40) DEFAULT NULL AFTER id;

ALTER TABLE invoices
    ADD UNIQUE INDEX invoices_merchant_id_receipt_unique (merchant_id, receipt);

UPDATE invoices
    SET receipt = ref_num LIMIT 1000;

# Post code deployment / Branch: invoices_rename_column
ALTER TABLE invoices
    DROP INDEX invoices_merchant_id_ref_num_unique;

ALTER TABLE invoices
    DROP COLUMN ref_num;

# adds account number to billdesk
ALTER TABLE billdesk
    ADD COLUMN AccountNumber VARCHAR(50) AFTER BankID;

UPDATE billdesk
    JOIN payments ON payments.id = billdesk.payment_id
    JOIN orders ON orders.id = payments.order_id
SET
    billdesk.AccountNumber = orders.account_number;

# Pre code deployment / PR: https://github.com/razorpay/api/pull/1620

ALTER TABLE invoices MODIFY COLUMN order_id CHAR(14) DEFAULT NULL;
ALTER TABLE invoices MODIFY COLUMN amount BIGINT(20) DEFAULT NULL;
ALTER TABLE invoices ADD COLUMN deleted_at INT(11) DEFAULT NULL;
CREATE INDEX invoices_deleted_at_index ON invoices (deleted_at);

ALTER TABLE line_items ADD COLUMN deleted_at INT(11) DEFAULT NULL;
CREATE INDEX line_items_deleted_at_index ON line_items (deleted_at);

ALTER TABLE items ADD COLUMN deleted_at INT(11) DEFAULT NULL;
CREATE INDEX items_deleted_at_index ON items (deleted_at);

# Pre deployment https://github.com/razorpay/api/pull/910
ALTER TABLE payments
    ADD COLUMN gateway_captured TINYINT AFTER auto_captured
    ADD INDEX payments_gateway_captured_index (gateway_captured);

# Post code deployment / https://github.com/razorpay/api/pull/1732
UPDATE invoices SET date = created_at WHERE date IS NULL LIMIT 3000;

# Following queries are executed for altering cybersource table
# These changes have arised because of cybersource refactoring
ALTER TABLE cybersource
    ADD COLUMN avsCode CHAR(2) DEFAULT NULL AFTER xid,
    ADD COLUMN cardCategory CHAR(2) DEFAULT NULL AFTER avsCode,
    ADD COLUMN cardGroup CHAR(2) DEFAULT NULL AFTER cardCategory,
    ADD COLUMN cvCode CHAR(2) DEFAULT NULL AFTER cardGroup,
    ADD COLUMN veresEnrolled CHAR(2) DEFAULT NULL AFTER cvCode,
    ADD COLUMN authorizationCode CHAR(6) DEFAULT NULL AFTER cavv,
    ADD COLUMN receiptNumber CHAR(6) DEFAULT NULL AFTER authorizationCode,
    ADD COLUMN merchantAdviceCode CHAR(30) DEFAULT NULL AFTER capture_ref,
    ADD COLUMN gatewayTransactionId CHAR(30) DEFAULT NULL AFTER merchantAdviceCode,
    ADD COLUMN processorResponse CHAR(10) DEFAULT NULL AFTER gatewayTransactionId;

ALTER TABLE cybersource
    MODIFY COLUMN pares_status CHAR(2) DEFAULT NULL,
    MODIFY COLUMN eci CHAR(2) DEFAULT NULL,
    MODIFY COLUMN collection_indicator CHAR(2) DEFAULT NULL;

ALTER TABLE cybersource
    ADD COLUMN acquirer CHAR(10) DEFAULT NULL AFTER payment_id;

ALTER TABLE cybersource
    MODIFY COLUMN collection_indicator CHAR(2) DEFAULT NULL AFTER eci;

# Adds column tpv to terminals
ALTER TABLE terminals
    ADD COLUMN tpv TINYINT(1) DEFAULT 0 AFTER shared;

UPDATE terminals SET tpv = true WHERE id IN ('6ILLNfapHFQygK', '6GjFUas4Aqs26l');

# Adds auto refund delay column to merchant
ALTER TABLE merchants
    ADD COLUMN auto_refund_delay INT DEFAULT NULL AFTER max_payment_amount;

# Following queries are executed for fixing the error_code for
# BAD_REQUEST_PAYMENT_TIMED_OUT
UPDATE payments
    SET internal_error_code = error_code
    WHERE internal_error_code = null
        AND error_code = 'BAD_REQUEST_PAYMENT_TIMED_OUT';

UPDATE payments
    SET error_code = 'BAD_REQUEST_ERROR'
    WHERE internal_error_code = 'BAD_REQUEST_PAYMENT_TIMED_OUT'
        AND error_code = 'BAD_REQUEST_PAYMENT_TIMED_OUT';

ALTER TABLE merchants
    ADD COLUMN org_id CHAR(14)
    AFTER category2;

# Following queries are executed for fixing the length of
# vpc_Command in axis table
ALTER TABLE axis
    MODIFY vpc_Command VARCHAR(20) NOT NULL;

# Following query was executed to add a new column to admin table
ALTER TABLE admins ADD COLUMN allow_all_merchants BOOLEAN DEFAULT 0;

ALTER TABLE orgs
    ADD COLUMN custom_code VARCHAR(255)
    UNIQUE NULL
    AFTER invoice_logo_url;

# Adds Currency Code to terminals
ALTER TABLE terminals
    ADD COLUMN currency VARCHAR(3) DEFAULT 'INR' after tpv;

# ALTER TABLE org_hostname
    DROP FOREIGN KEY org_hostname_org_id_foreign;

# ALTER TABLE org_hostname
    ADD CONSTRAINT `org_hostname_org_id_foreign`
    FOREIGN KEY (`org_id`) REFERENCES `orgs` (`id`) ON DELETE cascade;

ALTER TABLE merchants
    ADD COLUMN convert_currency TINYINT(1) AFTER auto_refund_delay;

ALTER TABLE payments
    MODIFY COLUMN currency CHAR(3) NOT NULL AFTER amount,
    ADD COLUMN base_amount INTEGER UNSIGNED AFTER currency,
    ADD COLUMN base_amount_refunded INTEGER UNSIGNED DEFAULT 0 AFTER amount_refunded,
    ADD COLUMN convert_currency TINYINT(1) NULL AFTER late_authorized;

ALTER TABLE refunds
    ADD COLUMN base_amount INTEGER UNSIGNED AFTER currency;

ALTER TABLE bank_accounts
    ADD COLUMN mobile_banking_enabled TINYINT(1) AFTER beneficiary_address4,
    ADD COLUMN mpin VARCHAR(255) AFTER mobile_banking_enabled,
    MODIFY COLUMN beneficiary_mobile CHAR(32) NOT NULL;

# Query to add jiomoney method
ALTER TABLE merchant_banks
    ADD COLUMN jiomoney TINYINT(1) DEFAULT 0 AFTER freecharge,
    ADD INDEX merchant_banks_jiomoney_index (jiomoney);

ALTER TABLE payments
    MODIFY contact VARCHAR(20);

ALTER TABLE org_hostname
    MODIFY COLUMN id CHAR(14);

UPDATE org_hostname
    SET id = '70I3fMI9AGKROX' WHERE hostname = 'dashboard.razorpay.com';

UPDATE org_hostname
    SET id = '70I47LP6lyPYJR' WHERE hostname = 'beta-dashboard.razorpay.com';

UPDATE org_hostname
    SET id = '70I6GMmOpMJp40' WHERE hostname = 'dashboard.razorpay.dev';

UPDATE org_hostname
    SET id = '70I6bfuaPQ72xa' WHERE hostname = 'dashboard-hdfc.razorpay.dev';

# Queries to add Role and Department in merchant_details for new signup flow
ALTER TABLE merchant_details
    ADD COLUMN role VARCHAR (255) AFTER transaction_report_email,
    ADD COLUMN department VARCHAR (255) AFTER role;

# Queries to remove redundant features column in merchants table
ALTER TABLE merchants
    DROP COLUMN features;
DELETE FROM features WHERE name='cardsaving';

# Queries for PR:1943
ALTER TABLE merchants
    ADD COLUMN fee_model TINYINT(1) NOT NULL DEFAULT 0 AFTER fee_bearer;

ALTER TABLE transactions
    ADD COLUMN fee_bearer TINYINT(1) NOT NULL DEFAULT 0 AFTER channel,
    ADD COLUMN fee_model TINYINT(1) NOT NULL DEFAULT 0 AFTER fee_bearer,
    ADD COLUMN credit_type VARCHAR(25) NOT NULL DEFAULT 'default' AFTER fee_model;

UPDATE transactions
  SET credit_type = 'amount'
  WHERE gratis is true;

UPDATE transactions
  SET credit_type = 'fee'
  WHERE fee_credits > 0;

# Adds cross org access control via flag
ALTER TABLE orgs
    ADD COLUMN cross_org_access boolean default 0 NOT NULL AFTER ALLOW_SIGN_UP;

ALTER TABLE orgs
    ADD COLUMN payment_apps_logo_url VARCHAR(500) NULL AFTER email_logo_url;

ALTER TABLE orgs
    ADD COLUMN payment_btn_logo_url VARCHAR(500) NULL AFTER payment_apps_logo_url;

UPDATE orgs
    SET cross_org_access=1 WHERE id='100000razorpay';

ALTER TABLE refunds
    ADD COLUMN gateway_refunded TINYINT AFTER base_amount;
ALTER TABLE refunds
    ADD INDEX refunds_gateway_refunded_index (gateway_refunded);

ALTER TABLE transactions
    MODIFY COLUMN fee_bearer TINYINT(1) DEFAULT -1,
    MODIFY COLUMN fee_model TINYINT(1) DEFAULT -1;

UPDATE transactions
    SET fee_bearer = '-1' WHERE type != 'payment';

UPDATE transactions
    SET fee_model = '-1' WHERE type != 'payment';

# Changes Primary key to alpha numeric for amdin_tokens entity
ALTER TABLE admin_tokens
    MODIFY COLUMN id char(14);

TRUNCATE TABLE admin_tokens;

# Queries to be run before deploying invoices-schema-fixes-2
ALTER TABLE line_items ADD COLUMN name varchar(512) DEFAULT NULL AFTER entity_type;
ALTER TABLE line_items ADD COLUMN description varchar(2048) DEFAULT NULL AFTER name;
ALTER TABLE line_items ADD COLUMN amount int(11) DEFAULT NULL AFTER description;
ALTER TABLE line_items ADD COLUMN currency char(3) DEFAULT NULL AFTER amount;

ALTER TABLE line_items MODIFY COLUMN item_id char(14) DEFAULT NULL;

UPDATE line_items li
    JOIN items i on li.item_id = i.id
SET
    li.name = i.name,
    li.description = i.description,
    li.amount = i.amount,
    li.currency = i.currency;

# Queries to be run after deploying invoices-schema-fixes-2
ALTER TABLE line_items MODIFY COLUMN name varchar(512) NOT NULL;
ALTER TABLE line_items MODIFY COLUMN amount int(11) NOT NULL;
ALTER TABLE line_items MODIFY COLUMN currency char(3) NOT NULL;

# Queries for PR:1978
ALTER TABLE org_hostname
    DROP COLUMN deleted_at;

# Set of queries to change org_id column's length from 255 to 14
ALTER TABLE org_hostname
    DROP FOREIGN KEY org_hostname_org_id_foreign,
    MODIFY COLUMN org_id char(14) NOT NULL;

ALTER TABLE org_hostname
    ADD CONSTRAINT org_hostname_org_id_foreign FOREIGN KEY(`org_id`) REFERENCES orgs(`id`) ON DELETE RESTRICT;

# Adds batch id for daily settlement in settlement entity
ALTER TABLE settlements
    ADD COLUMN batch_settlement_id CHAR(14) AFTER bank_account_id,
    ADD CONSTRAINT settlements_batch_settlement_id_foreign FOREIGN KEY(batch_settlement_id)
    REFERENCES daily_settlements(id) ON DELETE RESTRICT;

-- PRE deployment of invoices-expired-by branch

ALTER TABLE invoices ADD COLUMN expire_by int(11) DEFAULT NULL;
ALTER TABLE invoices ADD INDEX invoices_expire_by_index (expire_by);

ALTER TABLE invoices ADD COLUMN customer_billing_addr_id char(14) DEFAULT NULL AFTER customer_id;
ALTER TABLE invoices ADD INDEX invoices_customer_billing_addr_id_foreign (customer_billing_addr_id);
ALTER TABLE invoices ADD CONSTRAINT invoices_customer_billing_addr_id_foreign FOREIGN KEY (customer_billing_addr_id) REFERENCES addresses (id);

-- POST deployment of invoices-expired-by branch

ALTER TABLE invoices DROP FOREIGN KEY invoices_customer_address_foreign;
ALTER TABLE invoices DROP INDEX invoices_customer_address_foreign;
ALTER TABLE invoices DROP COLUMN customer_address;

--

ALTER TABLE billdesk
    ADD INDEX billdesk_refstatus_index (RefStatus);

# Adds archived and suspended columns to merchant
ALTER TABLE merchants
    ADD COLUMN archived_at INT DEFAULT NULL AFTER activated_at,
    ADD COLUMN suspended_at INT DEFAULT NULL AFTER archived_at;

# Removes terminal related columns from payment anlytics
ALTER TABLE payment_analytics
    DROP COLUMN terminal_id,
    DROP COLUMN terminal_status,
    DROP COLUMN terminal_response_time,
    DROP COLUMN terminal_status_code,
    DROP COLUMN terminal_status_msg,
    DROP COLUMN payment_type;

ALTER TABLE invoices
    ADD INDEX invoices_type_index (`type`),
    ADD INDEX invoices_source_index (`source`);

# Merchant Details data correction
UPDATE files
    SET entity_type='merchant_detail'
    WHERE entity_type = "RZP\\Models\\Merchant\\Detail\\Entity";

UPDATE merchant_details
    SET business_proof_url = substr(business_proof_url, 6)
    where business_proof_url LIKE "file_%";

UPDATE merchant_details
    SET business_operation_proof_url = substr(business_operation_proof_url, 6)
    where business_operation_proof_url LIKE "file_%";

UPDATE merchant_details
    SET business_pan_url = substr(business_pan_url, 6)
    where business_pan_url LIKE "file_%";

UPDATE merchant_details
    SET address_proof_url = substr(address_proof_url, 6)
    where address_proof_url LIKE "file_%";

UPDATE merchant_details
    SET promoter_proof_url = substr(promoter_proof_url, 6)
    where promoter_proof_url LIKE "file_%";

UPDATE merchant_details
    SET promoter_pan_url = substr(promoter_pan_url, 6)
    where promoter_pan_url LIKE "file_%";

UPDATE merchant_details
    SET promoter_address_url = substr(promoter_address_url, 6)
    where promoter_address_url LIKE "file_%";

ALTER TABLE merchant_details
    ADD COLUMN activation_progress INTEGER DEFAULT 0 AFTER steps_finished;

# Pre deployment of branch invoice_new_field_comment
ALTER TABLE invoices ADD COLUMN comment text AFTER notes;

# Before deploying: invoices_fetch_by_cust_contact
ALTER TABLE invoices ADD INDEX invoices_customer_contact_index (customer_contact);
ALTER TABLE invoices ADD INDEX invoices_customer_email_index (customer_email);
ALTER TABLE invoices ADD INDEX invoices_customer_name_index (customer_name);

# Changes default value of gateway and terminal
ALTER TABLE payments
    MODIFY COLUMN gateway VARCHAR(255) NULL,

SET FOREIGN_KEY_CHECKS=0;
ALTER TABLE payments
    MODIFY COLUMN terminal_id VARCHAR(14) NULL;
SET FOREIGN_KEY_CHECKS=1;

# Signup flow changes
ALTER TABLE merchants
    MODIFY name VARCHAR(255) default null;

ALTER TABLE payments
    ADD INDEX `payments_amount_index` (`amount`);

# Modify max_payment_amount column to be unsigned
ALTER TABLE merchants
    MODIFY COLUMN max_payment_amount INTEGER UNSIGNED NULL;

ALTER TABLE refunds
    MODIFY COLUMN amount INTEGER UNSIGNED NOT NULL;

# Drop merchants features
ALTER TABLE merchants DROP COLUMN features;

ALTER TABLE merchants
    ADD INDEX `merchants_auto_refund_delay_index` (`auto_refund_delay`);

ALTER TABLE merchants
    ADD COLUMN auto_capture_late_auth TINYINT(1) NOT NULL DEFAULT 0 AFTER brand_color;

# Query for offers tabble modifications
ALTER TABLE offers
    ADD COLUMN merchant_id CHAR(14) AFTER id,
    MODIFY COLUMN name VARCHAR(20) NULL,
    ADD COLUMN iins TEXT DEFAULT NULL AFTER payment_method_type,
    ADD COLUMN fail_payment tinyint DEFAULT 1 AFTER active,
    MODIFY COLUMN processing_time INT NULL,
    ADD COLUMN TYPE varchar(15) DEFAULT 'deferred' AFTER fail_payment,
    ADD CONSTRAINT offers_merchant_id_foreign
        FOREIGN KEY(merchant_id) REFERENCES merchants(id),
    DROP INDEX offers_percent_rate_index,
    DROP INDEX offers_min_amount_index,
    DROP INDEX offers_max_cashback_index,
    DROP INDEX offers_flat_cashback_index;

SET FOREIGN_KEY_CHECKS=0;
ALTER TABLE orders
    ADD COLUMN offer_id char(14) DEFAULT NULL AFTER merchant_id,
    ADD CONSTRAINT orders_offer_id_foreign
        FOREIGN KEY(offer_id) REFERENCES offers(id);
SET FOREIGN_KEY_CHECKS=1;

# Adding remarks in settlements
ALTER TABLE settlements
    ADD COLUMN remarks VARCHAR(255) DEFAULT NULL AFTER failure_reason;

# multicurrency support
ALTER TABLE transactions
    ADD COLUMN gateway_amount INTEGER NULL AFTER BALANCE;

ALTER TABLE hdfc
    ADD COLUMN currency VARCHAR(3) AFTER amount;

ALTER TABLE cybersource
    ADD COLUMN currency VARCHAR(3) AFTER amount;

ALTER TABLE first_data
    ADD COLUMN currency VARCHAR(3) AFTER amount;

ALTER TABLE netbanking
    ADD COLUMN customer_id VARCHAR(255) AFTER merchant_code,
    ADD COLUMN customer_name VARCHAR(255) AFTER customer_id;

# payouts related fields
ALTER TABLE payments
    ADD COLUMN amount_paidout INTEGER UNSIGNED DEFAULT 0 AFTER base_amount_refunded;

# payout reconciliation remarks
ALTER TABLE payouts
    ADD COLUMN remarks VARCHAR(255) DEFAULT NULL AFTER return_utr;

# Adding column to schedule to fix time of day
ALTER TABLE schedules
    ADD COLUMN hour TINYINT(1) DEFAULT 0 AFTER anchor;

# Updates the filed for beneficiary_code in bank_accounts
ALTER TABLE bank_accounts
    MODIFY COLUMN beneficiary_code VARCHAR(10) AFTER type;

ALTER TABLE bank_accounts
    ADD UNIQUE INDEX bank_accounts_beneficiary_code_unique (beneficiary_code);

# payouts - add batch settlement
ALTER TABLE payouts
    CHANGE COLUMN fee fees INT UNSIGNED DEFAULT 0,
    MODIFY COLUMN service_tax INT UNSIGNED DEFAULT 0,
    ADD COLUMN batch_settlement_id CHAR(14) AFTER transaction_id,
    ADD CONSTRAINT payouts_batch_settlement_id_foreign FOREIGN KEY(batch_settlement_id) REFERENCES daily_settlements(id) ON DELETE RESTRICT;

ALTER TABLE daily_settlements
    ADD COLUMN type VARCHAR(50) DEFAULT NULL AFTER id,
    CHANGE COLUMN `settlement_count` `total_count` INTEGER NOT NULL;

# permissions
insert into permissions (id, name, category, description, created_at, updated_at) values ('7PBUySeriKJuIb', 'schedule_create', 'schedule', 'Create a new schedule', UNIX_TIMESTAMP(), UNIX_TIMESTAMP());
insert into permissions (id, name, category, description, created_at, updated_at) values ('7PBV5Or9YWZtXc', 'schedule_update', 'schedule', 'Update a schedule', UNIX_TIMESTAMP(), UNIX_TIMESTAMP());
insert into permissions (id, name, category, description, created_at, updated_at) values ('7PBVEaPUHQlMGC', 'schedule_delete', 'schedule', 'Delete a schedule', UNIX_TIMESTAMP(), UNIX_TIMESTAMP());
insert into permissions (id, name, category, description, created_at, updated_at) values ('7PBVKgguP22wTl', 'schedule_assign', 'schedule', 'Assign schedule to merchant', UNIX_TIMESTAMP(), UNIX_TIMESTAMP());
insert into permissions (id, name, category, description, created_at, updated_at) values ('7PBVRggj0CjK3q', 'schedule_migration', 'schedule', 'Migration', UNIX_TIMESTAMP(), UNIX_TIMESTAMP());

ALTER TABLE files
    ADD COLUMN region  VARCHAR(255)  DEFAULT NULL AFTER bucket;

# --- Marketplace + Openwallet ---

ALTER TABLE merchant_banks
    ADD COLUMN openwallet TINYINT(1) NOT NULL DEFAULT 0 AFTER payumoney;

ALTER TABLE payments
    ADD COLUMN amount_transferred INTEGER UNSIGNED NOT NULL DEFAULT 0 AFTER base_amount_refunded,
    ADD COLUMN on_hold TINYINT DEFAULT 0 AFTER vpa,
    ADD COLUMN on_hold_until INTEGER DEFAULT NULL AFTER on_hold,
    ADD COLUMN transfer_id CHAR(14) DEFAULT NULL AFTER invoice_id,
    ADD CONSTRAINT payments_transfer_id_foreign FOREIGN KEY (transfer_id) REFERENCES transfers(id) ON DELETE RESTRICT;

ALTER TABLE merchants
    ADD COLUMN parent_id CHAR(14) DEFAULT NULL AFTER email,
    ADD CONSTRAINT merchants_parent_id_foreign FOREIGN KEY (parent_id) REFERENCES merchants(id) ON DELETE RESTRICT;

ALTER TABLE transfers
    ADD COLUMN currency CHAR(3) NOT NULL AFTER amount,
    ADD COLUMN amount_reversed INTEGER UNSIGNED NOT NULL DEFAULT 0 AFTER currency,
    ADD COLUMN on_hold TINYINT DEFAULT 0 AFTER amount_reversed,
    ADD COLUMN on_hold_until INTEGER DEFAULT NULL AFTER on_hold;

ALTER TABLE transactions
    ADD COLUMN on_hold TINYINT DEFAULT 0 AFTER credit_type,
    ADD INDEX transactions_on_hold_index (on_hold);

# The below query was executed on 8th Sept 2016. Refer https://github.com/razorpay/brahma/issues/433
ALTER TABLE payment_analytics MODIFY referer text;

ALTER TABLE payment_analytics
    ADD COLUMN browser_version VARCHAR(50) AFTER `browser`;

UPDATE payment_analytics
    SET browser_version = platform_version
    WHERE browser is not NULL
    AND platform_version is not NULL
    AND platform = 1
    AND browser_version is NULL;

UPDATE payment_analytics
    SET platform_version = NULL
    WHERE platform = 1
    AND platform_version is not NULL
    AND browser is not NULL
    AND browser_version is not NULL;

ALTER TABLE terminals
    ADD INDEX terminals_gateway_merchant_id_index (gateway_merchant_id),
    ADD INDEX terminals_network_category_index (network_category);

ALTER TABLE terminals
    ADD COLUMN `plan_id` char(14) COLLATE utf8_bin NULL AFTER `org_id`;

ALTER TABLE terminals
    ADD INDEX terminals_plan_id_index (plan_id);

ALTER TABLE gateway_status_absence
    CHANGE COLUMN `from` `begin` INT(11),
    CHANGE COLUMN `to` `end` INT(11) DEFAULT NULL,
    ADD KEY `gateway_status_absence_issuer_created_at` (`created_at`),
    ADD KEY `gateway_status_absence_reason_code` (`reason_code`),
    ADD KEY `gateway_status_absence_source` (`source`),
    ALTER COLUMN scheduled SET DEFAULT 0,
    ALTER COLUMN issuer SET DEFAULT 'UNKNOWN',
    ALTER COLUMN card_type SET DEFAULT 'UNKNOWN',
	ALTER COLUMN gateway SET DEFAULT 'ALL',
    ADD COLUMN public tinyint(4) NOT NULL DEFAULT '1',
    ALTER COLUMN network SET DEFAULT 'UNKNOWN';

# batch fund transfers
ALTER TABLE settlements
    ADD COLUMN batch_fund_transfer_id CHAR(14) AFTER batch_settlement_id,
    ADD CONSTRAINT settlements_batch_fund_transfer_id_foreign FOREIGN KEY(batch_fund_transfer_id)
    REFERENCES daily_settlements(id) ON DELETE RESTRICT;

ALTER TABLE payouts
    ADD COLUMN batch_fund_transfer_id CHAR(14) AFTER batch_settlement_id,
    ADD CONSTRAINT payouts_batch_fund_transfer_id_foreign FOREIGN KEY(batch_fund_transfer_id)
    REFERENCES daily_settlements(id) ON DELETE RESTRICT;

ALTER TABLE first_data
    MODIFY COLUMN error_message VARCHAR(255);

# transfer/ reversal notes
ALTER TABLE transfers
    ADD COLUMN notes TEXT AFTER amount_reversed;

ALTER TABLE reversals
    ADD COLUMN notes TEXT AFTER currency;

DELETE FROM migrations WHERE migration = '2016_08_05_131651_create_gateway_absence';
DROP TABLE `gateway_status_absence`;

# Migration to new terminal recurring notation
UPDATE terminals
    SET recurring = 1 WHERE recurring = 0 AND gateway != 'cybersource';
UPDATE terminals
    SET recurring = 3 WHERE recurring = 0 AND gateway = 'cybersource';
UPDATE terminals
    SET recurring = 4 WHERE recurring = 2 AND gateway = 'cybersource';
ALTER TABLE terminals
    MODIFY COLUMN recurring TINYINT(1) UNSIGNED DEFAULT 1;

# Prod live
UPDATE tokens
    SET terminal_id = '5yKTyCuDne8eiz' WHERE recurring = 1;
# Prod test
UPDATE tokens
    SET terminal_id = '1000SharpTrmnl' WHERE recurring = 1;

# Adds cancelled_at column to invoices table
ALTER TABLE invoices ADD COLUMN cancelled_at int(11) DEFAULT NULL AFTER paid_at;

ALTER TABLE daily_settlements
    ADD COLUMN txt_file_id CHAR(14) AFTER urls,
    ADD CONSTRAINT daily_settlements_txt_file_id_foreign
        FOREIGN KEY(txt_file_id) REFERENCES files(id) ON DELETE RESTRICT,
    ADD COLUMN excel_file_id CHAR(14) AFTER txt_file_id,
    ADD CONSTRAINT daily_settlements_excel_file_id_foreign
        FOREIGN KEY(excel_file_id) REFERENCES files(id) ON DELETE RESTRICT;

# Query to add international flag to terminal entity
ALTER TABLE terminals
    ADD COLUMN international TINYINT(1) DEFAULT 0 NOT NULL AFTER recurring;

INSERT INTO `org_field_map` (`id`, `org_id`, `entity_name`, `fields`, `created_at`, `updated_at`)
VALUES
	('7NamQFIGFyyNdc','100000razorpay','admin','name,email,allow_all_merchants,disabled,roles,groups',1488445356,1488445356),
	('7NawjzGBBIX6Ar','6dLbNSpv5XbCOG','admin','name,username,email,password,password_confirmation,employee_code,department_code,branch_code,location_code,supervisor_code,allow_all_merchants,disabled,roles,groups',1488445942,1488445942),
	('7NayAS7Iz2aMyi','6dLbNSpv5XbCOG','admin_lead','channel_code,crm_next_no,db_token_no,branch_lts_no,branch_code,source_code,promo_code,lg_code,lc_ro_code,mrm_code,merchant_type,mcc_category,mcc_code,merchant_name,contact_name,contact_email,dba_name',1488446023,1488446023),
	('7Nb15NvBMGKP2k','100000razorpay','admin_lead','merchant_name,contact_name,contact_email,dba_name',1488446189,1488446189);

ALTER TABLE `admins` MODIFY COLUMN `department_code` VARCHAR(255) DEFAULT NULL;
ALTER TABLE `admins` MODIFY COLUMN `supervisor_code` VARCHAR(255) DEFAULT NULL;
ALTER TABLE `admins` MODIFY COLUMN `branch_code` VARCHAR(255) DEFAULT NULL;
ALTER TABLE `admins` MODIFY COLUMN `location_code` VARCHAR(255) DEFAULT NULL;

# Query to add custom error message attribute to offer
ALTER TABLE offers
    ADD COLUMN error_message VARCHAR(255) NULL AFTER display_text;

# Add indices for fetch by cron
ALTER TABLE payments
    ADD INDEX `payments_on_hold_index` (`on_hold`),
    ADD INDEX `payments_on_hold_until_index` (`on_hold_until`);

# Add attempts to settlements
ALTER TABLE settlements
    ADD COLUMN attempts INTEGER NOT NULL DEFAULT 1 AFTER channel;

ALTER TABLE payment_analytics
    ADD CONSTRAINT payment_analytics_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments(id);

ALTER TABLE gateway_downtimes DROP COLUMN public;

ALTER TABLE upi
    ADD COLUMN refund_id CHAR(14) DEFAULT NULL AFTER payment_id,
    ADD INDEX upi_refund_id_index (refund_id);

ALTER TABLE daily_settlements
    ADD COLUMN processed_amount bigint(20) unsigned AFTER amount,
    ADD COLUMN processed_count int(11) AFTER total_count;

# Query to add checkout_display flag to offers
ALTER TABLE offers
    ADD COLUMN checkout_display TINYINT(1) DEFAULT 0 NOT NULL AFTER block;

ALTER TABLE workflow_steps
    ADD COLUMN op_type VARCHAR(15) DEFAULT 'and' NOT NULL AFTER REVIEWER_COUNT;

# Rrn column for refunds
ALTER TABLE refunds
    ADD COLUMN rrn VARCHAR(255) AFTER gateway_refunded;

# arn_no column for hdfc
ALTER TABLE hdfc
    ADD COLUMN arn_no VARCHAR(255) AFTER avr;

ALTER TABLE axis
    ADD INDEX axis_vpc_Command_index (vpc_Command),
    ADD INDEX axis_vpc_MerchTxnRef_index (vpc_MerchTxnRef);

#PR 2989 Adds foreign key for pricing_rule_id in fees_breakup
SET FOREIGN_KEY_CHECKS=0;
ALTER TABLE fees_breakup
    ADD CONSTRAINT fees_breakup_pricing_rule_id_foreign FOREIGN KEY (pricing_rule_id) REFERENCES pricing(id);
SET FOREIGN_KEY_CHECKS=1;

ALTER TABLE permissions
    ADD COLUMN enable_workflow TINYINT(1) NOT NULL DEFAULT 0 AFTER assignable;

ALTER TABLE permissions DROP COLUMN  `enable_workflow`;

ALTER TABLE permission_map ADD COLUMN `enable_workflow` boolean DEFAULT 0 NOT NULL AFTER entity_type;

ALTER TABLE refunds
    ADD COLUMN status VARCHAR(255) NULL AFTER base_amount,
    ADD COLUMN attempts TINYINT(1) NULL AFTER transaction_id,
    ADD COLUMN last_attempted_at INT NULL DEFAULT NULL AFTER attempts,
    ADD INDEX refunds_status_index (status),
    ADD INDEX refunds_attempts_index (attempts),
    ADD INDEX refunds_created_at_index (created_at),
    ADD INDEX refunds_last_attempted_at_index (last_attempted_at);

# Post deployment query for updating status of all the refunds #2673
UPDATE refunds SET status = "processed", attempts = 1, last_attempted_at = created_at WHERE status is null;

# ---- subscriptions ----

ALTER TABLE payments
    ADD COLUMN subscription_id CHAR(14) DEFAULT NULL AFTER invoice_id;

ALTER TABLE invoices
    ADD COLUMN subscription_id CHAR(14) DEFAULT NULL AFTER merchant_id,
    ADD COLUMN billing_start INT(11) DEFAULT NULL AFTER subscription_id,
    ADD COLUMN billing_end INT(11) DEFAULT NULL AFTER billing_start,
    ADD COLUMN subscription_status VARCHAR(32) NULL AFTER status,
    ADD INDEX invoices_subscription_status_index (subscription_status);

ALTER TABLE items
    ADD COLUMN type VARCHAR(16) DEFAULT 'invoice' AFTER currency,
    ADD INDEX items_type_index (type);

ALTER TABLE line_items
    ADD COLUMN ref_id CHAR(14) DEFAULT NULL AFTER item_id,
    ADD COLUMN ref_type VARCHAR(32) DEFAULT NULL AFTER ref_id,
    ADD INDEX line_items_ref_id_index (ref_id),
    ADD INDEX line_items_ref_type_index (ref_type);

ALTER TABLE schedules
    DROP INDEX `schedules_type_index`,
    DROP INDEX `schedules_next_run_index`,
    DROP COLUMN type,
    DROP COLUMN next_run,
    MODIFY COLUMN `delay` TINYINT(1) NOT NULL DEFAULT 0;

ALTER TABLE schedule_tasks
    ADD COLUMN last_run_at INT(11) DEFAULT NULL AFTER next_run_at,
    ADD INDEX schedule_tasks_entity_id_index (entity_id),
    ADD INDEX schedule_tasks_next_run_at_index (next_run_at),
    ADD INDEX schedule_tasks_last_run_at_index (last_run_at),
    ADD INDEX schedule_tasks_created_at_index (created_at);

# ---- POST DEPLOYMENT ONLY ----
SET foreign_key_checks = 0;
ALTER TABLE payments
    ADD CONSTRAINT payments_subscription_id_foreign FOREIGN KEY (subscription_id) REFERENCES subscriptions(id) ON DELETE RESTRICT;
SET foreign_key_checks = 1;

# ---- End subscriptions ----

ALTER TABLE merchant_banks
    ADD COLUMN aeps TINYINT(1) DEFAULT 0 NOT NULL AFTER upi;

ALTER TABLE terminals
    ADD COLUMN aeps TINYINT(1) DEFAULT 0 NOT NULL AFTER upi;

ALTER TABLE workflow_actions
    ADD COLUMN permission_id char(14) DEFAULT NULL AFTER `workflow_id`;

ALTER TABLE workflow_actions
    ADD CONSTRAINT workflow_actions_permission_id_foreign
    FOREIGN KEY(permission_id) REFERENCES permissions(id) ON DELETE RESTRICT;

# Add FK for file in reports
ALTER TABLE reports
    ADD CONSTRAINT report_file_id_foreign FOREIGN KEY (file_id) REFERENCES files(id);

# Makes international attribute of gateway rules nullable
ALTER TABLE gateway_rules MODIFY COLUMN international TINYINT(1);

# Add column processed_at to settlements, and payouts tables
alter table payouts
    add column processed_at int(11) default null after `remarks`,
    add column settled_on int(11) default null after `processed_at`;

alter table settlements
    add column processed_at int(11) default null after `remarks`,
    add column settled_on int(11) default null after `processed_at`;

ALTER TABLE payments
    ADD COLUMN approval_code VARCHAR(10) NULL AFTER terminal_id,
    ADD COLUMN reference1 VARCHAR NULL AFTER approval_code,
    ADD COLUMN reference2 VARCHAR NULL AFTER reference1;

# Pre deployment of #3125

ALTER TABLE invoices
    ADD COLUMN gross_amount INT(10) UNSIGNED DEFAULT NULL AFTER sms_status,
    ADD COLUMN tax_amount INT(10) UNSIGNED DEFAULT NULL AFTER gross_amount,
    ADD COLUMN group_taxes_discounts TINYINT(1) DEFAULT 0 NOT NULL AFTER user_id;

ALTER TABLE items
    ADD COLUMN unit varchar(512) DEFAULT NULL AFTER currency,
    ADD COLUMN tax_inclusive tinyint(4) NOT NULL DEFAULT 0 AFTER unit,
    ADD COLUMN tax_id char(14) DEFAULT NULL AFTER tax_inclusive,
    ADD COLUMN tax_group_id char(14) DEFAULT NULL AFTER tax_id,
    ADD CONSTRAINT items_tax_id_foreign FOREIGN KEY (tax_id) REFERENCES taxes(id) ON DELETE SET NULL,
    ADD CONSTRAINT items_tax_group_id_foreign FOREIGN KEY (tax_group_id) REFERENCES tax_groups(id) ON DELETE SET NULL,
    ADD INDEX items_tax_group_id_foreign (tax_group_id),
    ADD INDEX items_tax_id_foreign (tax_id);

ALTER TABLE line_items
    ADD COLUMN tax_inclusive tinyint(4) NOT NULL DEFAULT 0 AFTER currency,
    ADD COLUMN unit varchar(512) DEFAULT NULL AFTER tax_inclusive,
    ADD COLUMN gross_amount INT(10) UNSIGNED DEFAULT NULL AFTER amount,
    ADD COLUMN tax_amount INT(10) UNSIGNED DEFAULT NULL AFTER gross_amount,
    ADD COLUMN net_amount INT(10) UNSIGNED DEFAULT NULL AFTER tax_amount;

# Adds type to terminals
ALTER TABLE terminals
    ADD COLUMN type TINYINT(1) DEFAULT 3 NOT NULL AFTER tpv;

# Adding from_email and signature_email in orgs
ALTER TABLE orgs
    ADD COLUMN from_email VARCHAR(255) DEFAULT NULL after custom_code,
    ADD COLUMN signature_email VARCHAR(255) DEFAULT NULL after from_email;

ALTER TABLE terminals
    ADD COLUMN used TINYINT(1) DEFAULT 0 NOT NULL AFTER used_count;

ALTER TABLE admin_leads
  ADD merchant_id CHAR(14) DEFAULT NULL AFTER org_id;

ALTER TABLE admin_leads
  ADD CONSTRAINT `admin_leads_merchant_id_foreign` FOREIGN KEY (`merchant_id`) REFERENCES `merchants` (`id`);

# Index payment.wallet
ALTER TABLE payments
    ADD INDEX payments_wallet_index (wallet);

#pre deploy of pr - 3321
ALTER TABLE offers
    ADD COLUMN max_payment_count INTEGER NULL AFTER flat_cashback;

ALTER TABLE offers
    ADD COLUMN linked_offer_ids TEXT NULL AFTER max_payment_count;

# post deploy of pr - 3321
ALTER TABLE offers
    DROP COLUMN payment_count;

# Adds mode to terminals
ALTER TABLE terminals
    ADD COLUMN mode TINYINT(1) DEFAULT 3 NOT NULL AFTER type;

# Index payment.amount_transferred
ALTER TABLE payments
    ADD INDEX payments_amount_transferred_index (amount_transferred);

# Foreign Key on Merchants
ALTER TABLE adjustment
    ADD CONSTRAINT adjustment_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants(id);

ALTER TABLE terminals
   MODIFY COLUMN type TINYINT(1) UNSIGNED DEFAULT 1;

# Query to add mpesa method
ALTER TABLE merchant_banks
    ADD COLUMN mpesa TINYINT(1) DEFAULT 0 AFTER jiomoney,
    ADD INDEX merchant_banks_mpesa_index (mpesa);

# Add merchant_id to fund_transfer_attempts

alter table fund_transfer_attempts
    add column merchant_id char(14) after source_id,
    add constraint fund_transfer_attempts_merchant_id_foreign foreign key(merchant_id)
    references merchants(id) on delete restrict;

# Pre deployment of branch order-partial-payments
ALTER TABLE orders
    ADD COLUMN partial_payment TINYINT(4) NOT NULL DEFAULT 0 AFTER offer_id,
    ADD COLUMN amount_paid INT(10) unsigned NOT NULL DEFAULT 0 AFTER partial_payment;

ALTER TABLE invoices ADD COLUMN partial_payment TINYINT(4) NOT NULL DEFAULT 0 AFTER sms_status;

# Add ARN data to refunds
ALTER TABLE refunds
    ADD COLUMN reference1 varchar(255) after rrn,
    ADD COLUMN reference2 varchar(255) after reference1;

ALTER TABLE `refunds`
    DROP COLUMN `rrn`;

ALTER TABLE axis ADD COLUMN arn VARCHAR(40) AFTER refund_id;

# Virtual Accounts changes
ALTER TABLE merchants
    ADD COLUMN handle VARCHAR(4) AFTER brand_color;

ALTER TABLE bank_accounts
    MODIFY COLUMN beneficiary_address1 VARCHAR(30),
    MODIFY COLUMN beneficiary_city VARCHAR(30),
    MODIFY COLUMN beneficiary_state VARCHAR(2),
    MODIFY COLUMN beneficiary_country VARCHAR(2),
    MODIFY COLUMN beneficiary_pin CHAR(6),
    MODIFY COLUMN beneficiary_email VARCHAR(255),
    MODIFY COLUMN beneficiary_mobile CHAR(32),
    ADD INDEX bank_accounts_account_number_index (account_number);

ALTER TABLE bank_accounts
    MODIFY COLUMN type VARCHAR(40);

ALTER TABLE merchant_banks
    ADD COLUMN bank_transfer TINYINT(1) NOT NULL DEFAULT 0 AFTER upi,
    ADD INDEX `methods_bank_transfer_index` (`bank_transfer`);

ALTER TABLE payment_analytics
    ADD COLUMN risk_score DECIMAL(11,4) NULL AFTER checkout_id,
    ADD COLUMN risk_engine TINYINT(1) NULL AFTER risk_score;

SET FOREIGN_KEY_CHECKS=0;
ALTER TABLE subscriptions
    MODIFY COLUMN customer_id VARCHAR(14) NULL;
SET FOREIGN_KEY_CHECKS=1;

# Query to add enabled column in IIN
ALTER TABLE iins
    ADD COLUMN enabled TINYINT(1) DEFAULT 1 AFTER trivia;

# Pre deployment of branch 'payment_links_bulk_import'

ALTER TABLE invoices
    ADD COLUMN batch_id varchar(14) DEFAULT NULL AFTER subscription_id,
    ADD CONSTRAINT invoices_batch_id_foreign FOREIGN KEY (batch_id) REFERENCES batches (id);

ALTER TABLE batches
    ADD INDEX batches_created_at_index (created_at),
    ADD INDEX batches_type_index (type),
    ADD INDEX batches_status_index (status);

ALTER TABLE invitations
    MODIFY COLUMN id INT auto_increment;

ALTER TABLE bank_transfers
    MODIFY COLUMN time BIGINT;

# Add column locked in iins
ALTER TABLE iins
    ADD COLUMN locked TINYINT(1) DEFAULT 0 AFTER enabled;

# GST fields
ALTER TABLE merchant_details
    ADD COLUMN gstin VARCHAR(255) AFTER business_doe,
    ADD COLUMN p_gstin VARCHAR(255) AFTER gstin;

ALTER TABLE first_data
    ADD COLUMN caps_payment_id VARCHAR(14) AFTER gateway_transaction_id;

ALTER TABLE pricing
    ADD COLUMN min_fee INTEGER UNSIGNED NOT NULL DEFAULT 0 AFTER fixed_rate,
    ADD COLUMN max_fee INTEGER UNSIGNED AFTER min_fee;

ALTER TABLE virtual_accounts
    ADD COLUMN description TEXT AFTER notes;

ALTER TABLE customers
    ADD global_customer_id VARCHAR(14) AFTER id,
    ADD CONSTRAINT customers_global_customer_id_foreign FOREIGN KEY (global_customer_id) REFERENCES customers(id);

ALTER TABLE pricing
    ADD COLUMN deleted_at INTEGER AFTER updated_at,
    ADD INDEX pricing_deleted_at_index (deleted_at);

ALTER TABLE netbanking
    ADD COLUMN credit_account_number varchar(255) DEFAULT NULL AFTER account_number;

# Add new column to upi table for storing npci reference ids

ALTER TABLE `upi`
    ADD COLUMN `npci_reference_id` VARCHAR(20) NULL DEFAULT NULL AFTER `gateway_payment_id`,
    ADD INDEX `upi_npci_reference_id_index` (`npci_reference_id`);

ALTER TABLE emi_plans
    ADD COLUMN subvention VARCHAR(255) DEFAULT  'customer' AFTER issuer_plan_id,
    ADD COLUMN merchant_payback INTEGER UNSIGNED DEFAULT 0  AFTER subvention;

ALTER TABLE merchant_banks
    ADD COLUMN emi_subvention VARCHAR(255) DEFAULT NULL AFTER emi;

ALTER TABLE terminals
    ADD COLUMN emi_subvention VARCHAR(255) DEFAULT NULL AFTER emi_duration;

ALTER TABLE first_data
    ADD COLUMN arn_no VARCHAR(40) AFTER error_message;

# Transfer pricing
ALTER TABLE transfers
    ADD COLUMN fees INT UNSIGNED DEFAULT 0 AFTER notes,
    ADD COLUMN service_tax INT UNSIGNED DEFAULT 0 AFTER fees;

ALTER TABLE terminals
    ADD COLUMN corporate TINYINT(1) NOT NULL DEFAULT 0 AFTER mode;

ALTER TABLE `first_data`
    ADD INDEX `first_data_caps_payment_id_index` (`caps_payment_id`);

ALTER TABLE `first_data`
    ADD INDEX `first_data_gateway_transaction_id_index` (`gateway_transaction_id`);

ALTER TABLE `first_data`
    ADD INDEX `first_data_action_index` (`action`);

ALTER TABLE refunds
    ADD INDEX refunds_reference1_index (`reference1`);

DROP TABLE coupons;
DELETE FROM migrations WHERE migration = '2016_11_29_101058_create_coupons';

ALTER TABLE credits
    ADD COLUMN promotion_id varchar(14) DEFAULT NULL after merchant_id,
    ADD COLUMN used INTEGER DEFAULT 0 AFTER type,
    ADD COLUMN expired_at INT(11) DEFAULT NULL AFTER used,
    ADD INDEX credits_expired_at_index (expired_at);

ALTER TABLE schedule_tasks
    ADD COLUMN deleted_at INT(11) DEFAULT NULL AFTER updated_at;

# Removes emi_subvention from methods
ALTER TABLE merchant_banks
    DROP COLUMN emi_subvention;

ALTER TABLE payments
    ADD COLUMN disputed TINYINT(1) DEFAULT 0 NOT NULL AFTER convert_currency;

ALTER TABLE payments
    ADD INDEX payments_disputed_index (disputed);

ALTER TABLE addons
    ADD COLUMN quantity INTEGER DEFAULT 1 AFTER invoice_id;

# batch fund transfers for refunds
ALTER TABLE refunds
    ADD COLUMN batch_fund_transfer_id CHAR(14) AFTER transaction_id,
    ADD CONSTRAINT refunds_batch_fund_transfer_id_foreign FOREIGN KEY(batch_fund_transfer_id)
    REFERENCES daily_settlements(id) ON DELETE RESTRICT;

ALTER TABLE bank_transfers
    ADD COLUMN payer_bank_account_id CHAR(14) AFTER virtual_account_id;

ALTER TABLE bank_transfers
    ADD CONSTRAINT bank_transfer_payer_bank_account_id_foreign FOREIGN KEY(payer_bank_account_id)
    REFERENCES bank_accounts(id) ON DELETE RESTRICT;

ALTER TABLE payments
    ADD COLUMN tax INTEGER UNSIGNED DEFAULT NULL AFTER service_tax;

ALTER TABLE transactions
    ADD COLUMN tax INTEGER UNSIGNED DEFAULT NULL AFTER service_tax;

ALTER TABLE settlements
    ADD COLUMN tax INTEGER UNSIGNED DEFAULT NULL AFTER service_tax;

ALTER TABLE payouts
    ADD COLUMN tax INTEGER UNSIGNED DEFAULT NULL AFTER service_tax;

ALTER TABLE transfers
    ADD COLUMN tax INTEGER UNSIGNED DEFAULT NULL AFTER service_tax;

ALTER TABLE daily_settlements
    ADD COLUMN tax INTEGER UNSIGNED DEFAULT NULL AFTER service_tax;

ALTER TABLE pricing
    ADD COLUMN emi_duration INT UNSIGNED DEFAULT NULL AFTER payment_issuer;

ALTER TABLE dispute_reasons
    ADD COLUMN network VARCHAR(50) NOT NULL AFTER id;

ALTER TABLE bank_transfers
    ADD COLUMN payer_name VARCHAR(255) AFTER merchant_id;

# query for adding columns required for rule filtering
ALTER TABLE gateway_rules
    ADD COLUMN type VARCHAR(10) NOT NULL DEFAULT 'sorter' AFTER gateway,
    ADD COLUMN `group` VARCHAR(50) NULL AFTER type,
    ADD COLUMN filter_type VARCHAR(10) NULL AFTER `group`,
    MODIFY COLUMN `load` INT(11),
    ADD COLUMN network_category VARCHAR(255) NULL AFTER gateway_acquirer,
    ADD COLUMN shared_terminal TINYINT(4) NULL AFTER network_category,
    ADD COLUMN min_amount INT(11) UNSIGNED NOT NULL DEFAULT 0 AFTER issuer,
    ADD COLUMN max_amount INT(11) UNSIGNED NULL AFTER min_amount,
    ADD COLUMN iins TEXT NULL AFTER max_amount,
    ADD COLUMN currency VARCHAR(3) NULL AFTER iins,
    ADD COLUMN emi_duration TINYINT(4) NULL AFTER currency,
    ADD COLUMN emi_subvention VARCHAR(20) NULL AFTER emi_duration,
    ADD COLUMN category2 VARCHAR(255) NULL AFTER emi_subvention,
    ADD INDEX gateway_rules_type_index (type),
    ADD INDEX gateway_rules_filter_type_index (filter_type),
    ADD INDEX gateway_rules_group_index (`group`),
    ADD INDEX gateway_rules_currency_index (currency),
    ADD INDEX gateway_rules_min_amount_index (min_amount),
    ADD INDEX gateway_rules_max_amount_index (max_amount),
    ADD INDEX gateway_rules_emi_duration_index (emi_duration),
    ADD INDEX gateway_rules_emi_subvention_index (emi_subvention),
    ADD INDEX gateway_rules_shared_terminal_index (shared_terminal),
    ADD INDEX gateway_rules_network_category_index (network_category),
    ADD INDEX gateway_rules_category2_index (category2);

ALTER TABLE subscriptions
    ADD COLUMN cancel_at INT(11) DEFAULT NULL AFTER end_at,
    ADD INDEX subscriptions_cancel_at_index (cancel_at);

ALTER TABLE fund_transfer_attempts
    ADD COLUMN narration VARCHAR(255) DEFAULT NULL AFTER utr;

ALTER TABLE merchant_invoice
    ADD COLUMN amount_due INT(11) NOT NULL DEFAULT 0 AFTER tax,
    ADD UNIQUE INDEX `merchant_invoice_merchant_id_year_month_type_unique` (`merchant_id`, `year`, `month`, `type`),
    DROP INDEX `merchant_invoice_merchant_id_year_month_index`;

# Pre deployment of branch: invoices_callback

ALTER TABLE invoices
    ADD COLUMN callback_url TEXT AFTER group_taxes_discounts,
    ADD COLUMN callback_method VARCHAR(16) DEFAULT NULL AFTER callback_url;

ALTER TABLE merchants
    ADD COLUMN risk_threshold TINYINT(2) UNSIGNED AFTER risk_rating;

# Adds indexes on amount fields of orders and invoices table, Mostly useful
# in stats query for now.
ALTER TABLE orders
    ADD INDEX orders_amount_index (amount),
    ADD INDEX orders_amount_paid_index (amount_paid);

ALTER TABLE invoices
    ADD INDEX invoices_amount_index (amount);

# Adds fss payment id and index
ALTER TABLE hdfc
    ADD COLUMN gateway_payment_id bigint(20) unsigned AFTER gateway_transaction_id,
    ADD INDEX hdfc_gateway_payment_id_index (gateway_payment_id);

# Add index on refund amount
ALTER TABLE refunds
    ADD INDEX refunds_amount_index (amount);

ALTER TABLE refunds
    ADD COLUMN receipt VARCHAR(255) DEFAULT NULL AFTER notes,
    ADD UNIQUE INDEX refunds_merchant_id_receipt_unique (merchant_id, receipt);

# Reversal Migration
ALTER TABLE reversals
    ADD COLUMN `entity_id` CHAR(14) AFTER `merchant_id`
    ADD COLUMN `entity_type` VARCHAR(255) AFTER `entity_id`,;

ALTER TABLE reversals
    ADD INDEX reversals_entity_id_index (entity_id),
    DROP FOREIGN KEY reversals_transfer_id_foreign,
    DROP INDEX reversals_transfer_id_foreign,
    DROP COLUMN transfer_id;

UPDATE hdfc
    SET gateway_payment_id = gateway_transaction_id
    WHERE gateway_payment_id IS NULL AND created_at > 1502841600 AND action IN ('1', '4');

UPDATE hdfc
    SET gateway_payment_id = gateway_transaction_id
    WHERE gateway_payment_id IS NULL AND created_at
    = 1502841600 AND action IN ('1', '4');

# Adding index on payments.updated_at, payments.captured_at
# Useful for analytics queries
ALTER TABLE payments
    ADD INDEX payments_updated_at_index (updated_at),
    ADD INDEX payments_captured_at_index (captured_at);

# Query for adding sbibuddy column in merchant_banks table
ALTER TABLE merchant_banks
    ADD COLUMN sbibuddy TINYINT(1) NOT NULL DEFAULT 0 AFTER jiomoney;

ALTER TABLE merchant_invoice
    DROP INDEX `merchant_invoice_merchant_id_year_month_type_unique`,
    ADD COLUMN description VARCHAR(255) DEFAULT NULL AFTER `type`;

# pre deployment query for PR : 4655
ALTER TABLE `merchant_banks`
    ADD COLUMN `disabled_banks` TEXT NULL AFTER `banks`;

ALTER TABLE merchant_invoice
    MODIFY COLUMN invoice_number CHAR(16) NOT NULL;

ALTER TABLE merchants
    ADD COLUMN invoice_code CHAR(12) DEFAULT NULL AFTER category2;

ALTER TABLE tokens
   ADD COLUMN recurring_status VARCHAR(32) AFTER recurring,
   ADD COLUMN recurring_failure_reason TEXT AFTER recurring_status,
   ADD COLUMN max_amount INTEGER AFTER recurring_failure_reason;

# Adding index on settlements.updated_at, refunds.updated_at, transactions.updated_at
# Useful for Merchant analytics queries
ALTER TABLE settlements
    ADD INDEX settlements_updated_at_index (updated_at);

ALTER TABLE refunds
    ADD INDEX refunds_updated_at_index (updated_at);

ALTER TABLE transactions
    ADD INDEX transactions_updated_at_index (updated_at);

# Adding recipient_settlement_id in transfers table
ALTER TABLE transfers
    ADD COLUMN recipient_settlement_id CHAR(14) AFTER transaction_id,
    ADD CONSTRAINT transfers_recipient_settlement_id_foreign FOREIGN KEY(recipient_settlement_id)
    REFERENCES settlements(id) ON DELETE RESTRICT;

ALTER TABLE netbanking
    ADD COLUMN si_token VARCHAR(255) DEFAULT NULL AFTER caps_payment_id,
    ADD COLUMN si_status VARCHAR(255) DEFAULT NULL AFTER si_token,
    ADD COLUMN si_message VARCHAR(255) DEFAULT NULL AFTER si_status;

ALTER TABLE payments
    ADD COLUMN recurring_type VARCHAR(255) DEFAULT NULL AFTER updated_at;

ALTER TABLE subscriptions
    ADD COLUMN type TINYINT(1) UNSIGNED DEFAULT 0 AFTER customer_notify;

ALTER TABLE gateway_rules
    MODIFY COLUMN gateway VARCHAR(50) DEFAULT NULL;

ALTER TABLE offers
    MODIFY COLUMN issuer VARCHAR(20);

ALTER TABLE offers
    MODIFY COLUMN payment_method VARCHAR(10) NULL;

ALTER TABLE bank_transfers
    MODIFY COLUMN payer_ifsc varchar(13) NOT NULL;

ALTER TABLE bank_accounts
    MODIFY COLUMN ifsc_code varchar(11) NULL;

# Pre deployment of branch 'invoice_items_constraints'
# Following 4 queries:

# Adds line_items.type column with default null
ALTER TABLE line_items
    ADD COLUMN type VARCHAR(16) DEFAULT NULL after currency,
    ADD INDEX line_items_type_index (type);

# Populates line_items.type of existing rows
UPDATE line_items l
       JOIN items i
            ON l.item_id = i.id AND l.type IS NULL
SET    l.type = i.type;

UPDATE line_items
SET    type = 'invoice'
WHERE  item_id IS NULL;

## Sets default value for customer_notify
ALTER TABLE subscriptions
   MODIFY COLUMN customer_notify TINYINT(1) UNSIGNED DEFAULT 1;

# Makes line_items.type column not null and default to 'invoice'
ALTER TABLE line_items
    MODIFY COLUMN type VARCHAR(16) NOT NULL DEFAULT 'invoice';

# Adding these columns, since reconciliation send us these data
# which we need to pass in the refund file for Corporation bank
ALTER TABLE netbanking
    ADD COLUMN account_branch_code VARCHAR(255) AFTER account_number,
    ADD COLUMN account_subtype VARCHAR(255) AFTER account_number,
    ADD COLUMN account_type VARCHAR(255) AFTER account_number;

# Make adjustment morph to entity optionally
ALTER TABLE adjustment
    ADD COLUMN entity_type VARCHAR(100) AFTER merchant_id,
    ADD COLUMN entity_id CHAR(14) AFTER entity_type;

INSERT INTO dispute_reasons
    (id, network, gateway_code, gateway_description, code, description, created_at, updated_at)
    VALUES
        ('NotAvailable00', 'RZP', 'RZP00', 'Not Available', 'not_available', 'Not Available', 1506415644, 1506415644);

ALTER TABLE batches
    MODIFY COLUMN `type` CHAR(25);

# Marketplace auto-activate
ALTER TABLE merchants
    ADD COLUMN linked_account_kyc TINYINT(1) NOT NULL DEFAULT 0 AFTER fee_model;

ALTER TABLE merchants
    MODIFY COLUMN invoice_code CHAR(12) NOT NULL AFTER category2;

# Data correction for test bank_transfer payment made in live mode
DELETE FROM payments
    WHERE id='8i1eFM9BkOB8Ze';
DELETE FROM transactions
    WHERE entity_id='8i1eFM9BkOB8Ze';
DELETE FROM refunds
    WHERE id='8iQEuts9RhZTvI';
DELETE FROM transactions
    WHERE entity_id='8iQEuts9RhZTvI';
DELETE FROM bank_transfers
    WHERE payment_id='8i1eFM9BkOB8Ze';

# Makes invoices.user_id refer to users.id
ALTER TABLE invoices
    ADD CONSTRAINT invoices_user_id_foreign FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE RESTRICT;

ALTER TABLE schedules
    MODIFY COLUMN `anchor` int(11);

ALTER TABLE tokens
    ADD COLUMN account_number VARCHAR(40) AFTER wallet,
    ADD INDEX `tokens_account_number_index` (`account_number`);

ALTER TABLE batches
    ADD COLUMN sub_type VARCHAR(25) DEFAULT NULL AFTER type,
    ADD COLUMN gateway VARCHAR(25) DEFAULT NULL AFTER sub_type,
    ADD COLUMN failure_reason TEXT DEFAULT NULL AFTER gateway,
    ADD COLUMN processing TINYINT(1) DEFAULT 0 AFTER failure_reason,
    ADD INDEX batches_gateway_index (gateway);

ALTER TABLE disputes
    ADD COLUMN parent_id CHAR(14) DEFAULT NULL AFTER merchant_id,
    ADD CONSTRAINT disputes_parent_id_foreign FOREIGN KEY (parent_id) REFERENCES disputes(id) ON DELETE RESTRICT;

ALTER TABLE bank_accounts
    MODIFY COLUMN beneficiary_name VARCHAR(120) NOT NULL after account_number;

# Adds tpv coulumn to gateway file
ALTER TABLE gateway_files
    ADD COLUMN sub_type VARCHAR(25) DEFAULT NULL AFTER target;

ALTER TABLE merchant_details
	ADD marketplace_activation_status VARCHAR(30) DEFAULT NULL AFTER locked,
	ADD virtual_accounts_activation_status VARCHAR(30) DEFAULT NULL AFTER marketplace_activation_status,
	ADD subscriptions_activation_status VARCHAR(30) DEFAULT NULL AFTER virtual_accounts_activation_status;

ALTER TABLE virtual_accounts
    ADD COLUMN qr_code_id CHAR(14) DEFAULT NULL after bank_account_id;

ALTER TABLE virtual_accounts
    ADD COLUMN offline_challan_id CHAR(14) DEFAULT NULL after qr_code_id;

ALTER TABLE fund_transfer_attempts
	ADD mode VARCHAR(30) DEFAULT NULL AFTER bank_status_code;

ALTER TABLE gateway_files
    ADD COLUMN processing TINYINT(1) NOT NULL DEFAULT 0 AFTER status;

ALTER TABLE payments
    DROP COLUMN service_tax;

ALTER TABLE transactions
    DROP COLUMN service_tax;

ALTER TABLE settlements
    DROP COLUMN service_tax;

ALTER TABLE payouts
    DROP COLUMN service_tax;

ALTER TABLE transfers
    DROP COLUMN service_tax;

ALTER TABLE daily_settlements
    DROP COLUMN service_tax;

ALTER TABLE bank_transfers
    MODIFY COLUMN payer_account varchar(40) NOT NULL;

#
# Makes amount field of items, line_items, invoices unsigned and not null in
# consistence with payment, orders and other tables.
#
# Some new amount fields were added later with default null but now they should
# be not null.
#

ALTER TABLE items
    MODIFY COLUMN amount INT(11) UNSIGNED NOT NULL;

ALTER TABLE line_items
    MODIFY COLUMN amount INT(11) UNSIGNED NOT NULL,
    MODIFY COLUMN gross_amount INT(11) UNSIGNED NOT NULL,
    MODIFY COLUMN tax_amount INT(11) UNSIGNED NOT NULL,
    MODIFY COLUMN net_amount INT(11) UNSIGNED NOT NULL;

ALTER TABLE invoices
    MODIFY COLUMN gross_amount INT(11) UNSIGNED DEFAULT NULL,
    MODIFY COLUMN tax_amount INT(11) UNSIGNED DEFAULT NULL;

# PR - 5730
ALTER TABLE action_comments
    ADD COLUMN entity_id CHAR(14) AFTER action_id,
    ADD COLUMN entity_type VARCHAR(100) AFTER entity_id,
    ADD COLUMN merchant_id CHAR(14) AFTER admin_id,
    MODIFY COLUMN action_id CHAR(14),
    MODIFY COLUMN admin_id CHAR(14);

# PR - 5730
ALTER TABLE action_state
    ADD COLUMN entity_id CHAR(14) AFTER action_id,
    ADD COLUMN entity_type VARCHAR(100) AFTER entity_id,
    ADD COLUMN merchant_id CHAR(14) AFTER admin_id,
    MODIFY COLUMN action_id CHAR(14),
    MODIFY COLUMN admin_id CHAR(14);

# Renaming and altering geo_ips
RENAME TABLE `gio_ips` TO `geo_ips`;

ALTER TABLE `geo_ips`
    CHANGE `created_at` `created_at` INT(11) NULL DEFAULT NULL,
    CHANGE `updated_at` `updated_at` INT(11) NULL DEFAULT NULL;

ALTER TABLE batches
    MODIFY COLUMN upload_file_url VARCHAR(255) NOT NULL,
    MODIFY COLUMN download_file_url VARCHAR(255) DEFAULT NULL;

ALTER TABLE gateway_rules ADD COLUMN comments TEXT DEFAULT NULL AFTER category2;

ALTER TABLE orders ADD INDEX orders_receipt1_index (receipt(25));
ALTER TABLE orders DROP INDEX orders_receipt_index;
ALTER TABLE orders ADD INDEX orders_receipt_index(receipt(25));
ALTER TABLE orders DROP INDEX orders_receipt1_index;

ALTER TABLE `customers` ADD INDEX `customers_email_index` (`email`);

ALTER TABLE bank_transfers
    MODIFY COLUMN payer_account varchar(40) NULL;

#changes adjustment amount to bigint
ALTER TABLE adjustment
    MODIFY COLUMN amount BIGINT SIGNED NOT NULL;

# changes for UPI table
ALTER TABLE upi
    ADD COLUMN expiry_time MEDIUMINT SIGNED NULL;

ALTER TABLE `merchant_details`
    ADD COLUMN `activation_status` VARCHAR(30) DEFAULT NULL AFTER `locked`,
    ADD COLUMN `clarification_mode` VARCHAR(15) DEFAULT NULL AFTER `activation_status`,
    ADD COLUMN `archived_at` INT(11) DEFAULT NULL AFTER `clarification_mode`,
    ADD INDEX `merchant_details_activation_status_index` (`activation_status`),
    ADD INDEX `merchant_details_archived_at_index` (`archived_at`);

ALTER TABLE batches
    MODIFY COLUMN upload_file_url varchar(255) DEFAULT NULL;

# Pre deployment of drop_batch_url_columns pr

ALTER TABLE batches
    DROP COLUMN download_file_url,
    DROP COLUMN upload_file_url;

ALTER TABLE orders
    MODIFY COLUMN receipt VARCHAR(40), ALGORITHM=INPLACE;

ALTER TABLE settings
    ADD COLUMN created_at INT(11) DEFAULT NULL AFTER value,
    ADD COLUMN updated_at INT(11) DEFAULT NULL AFTER created_at,
    ADD INDEX settings_created_at_index (created_at),
    ADD INDEX settings_updated_at_index (updated_at);

ALTER TABLE axis
    ADD INDEX axis_vpc_TransactionNo_index (vpc_TransactionNo),
    ADD INDEX axis_vpc_ShopTransactionNo_index (vpc_ShopTransactionNo),
    ADD INDEX axis_vpc_TxnResponseCode_index (vpc_TxnResponseCode);

ALTER TABLE emi_plans
    ADD INDEX emi_plans_bank_index (bank),
    ADD INDEX emi_plans_network_index (network),
    ADD INDEX emi_plans_subvention_index (subvention);

ALTER TABLE bank_accounts
    ADD INDEX bank_accounts_created_at_index (created_at),
    ADD INDEX bank_accounts_updated_at_index (updated_at);

ALTER TABLE wallet
    ADD INDEX wallet_gateway_refund_id_index (gateway_refund_id),
    ADD INDEX wallet_wallet_index (wallet);

ALTER TABLE disputes
    ADD INDEX disputes_amount_index (amount),
    ADD INDEX disputes_updated_at_index (updated_at);

ALTER TABLE dispute_reasons
    ADD INDEX dispute_reasons_network_index (network);

ALTER TABLE orders
    ADD INDEX orders_merchant_id_created_at_index (merchant_id, created_at);

ALTER TABLE payments
    ADD INDEX payments_merchant_id_created_at_index (merchant_id, created_at);

ALTER TABLE refunds
    ADD INDEX refunds_merchant_id_created_at_index (merchant_id, created_at);

ALTER TABLE transactions
    ADD INDEX transactions_merchant_id_created_at_index (merchant_id, created_at);

ALTER TABLE payouts
    ADD INDEX payouts_merchant_id_created_at_index (merchant_id, created_at);

ALTER TABLE settlements
    ADD INDEX settlements_merchant_id_created_at_index (merchant_id, created_at);

ALTER TABLE transfers
    ADD INDEX transfers_merchant_id_created_at_index (merchant_id, created_at);

ALTER TABLE reversals
    ADD INDEX reversals_merchant_id_created_at_index (merchant_id, created_at);

ALTER TABLE invoices
    ADD INDEX invoices_merchant_id_created_at_index (merchant_id, created_at);

ALTER TABLE items
    ADD INDEX items_merchant_id_created_at_index (merchant_id, created_at);

ALTER TABLE subscriptions
    ADD INDEX subscriptions_merchant_id_created_at_index (merchant_id, created_at);

ALTER TABLE plans
    ADD INDEX plans_merchant_id_created_at_index (merchant_id, created_at);

ALTER TABLE addons
    ADD INDEX addons_merchant_id_created_at_index (merchant_id, created_at);

ALTER TABLE virtual_accounts
    ADD INDEX virtual_accounts_merchant_id_created_at_index (merchant_id, created_at);

ALTER TABLE settings
    MODIFY COLUMN created_at INT(11) NOT NULL,
    MODIFY COLUMN updated_at INT(11) NOT NULL;

ALTER TABLE upi
    ADD COLUMN type VARCHAR(32) DEFAULT NULL AFTER action;

ALTER TABLE `action_state_reasons`
    ADD INDEX `action_state_reasons_reason_type_index` (`reason_type`);

ALTER TABLE virtual_accounts
    MODIFY COLUMN amount_received BIGINT UNSIGNED,
    MODIFY COLUMN amount_paid BIGINT UNSIGNED,
    MODIFY COLUMN amount_reversed BIGINT UNSIGNED,
    MODIFY COLUMN amount_expected BIGINT UNSIGNED;

ALTER TABLE `merchants`
    ADD COLUMN `channel` VARCHAR(32) DEFAULT 'kotak' AFTER `billing_label`;

ALTER TABLE payments
    CHANGE COLUMN `global_token` `auth_type` VARCHAR(14) DEFAULT NULL;

ALTER TABLE payments
    ADD INDEX `payments_auth_type_index` (`auth_type`);

ALTER TABLE tokens
    ADD COLUMN beneficiary_name VARCHAR(120) DEFAULT NULL AFTER account_number;

ALTER TABLE tokens
    ADD COLUMN ifsc VARCHAR(16) DEFAULT NULL AFTER beneficiary_name;

ALTER TABLE settings
    MODIFY COLUMN created_at INT(11) NOT NULL,
    MODIFY COLUMN updated_at INT(11) NOT NULL;

ALTER TABLE fund_transfer_attempts
    ADD COLUMN purpose VARCHAR(32) AFTER merchant_id;

# Makes customer id nullable in payouts
ALTER TABLE payouts
    MODIFY COLUMN customer_id VARCHAR(14);

ALTER TABLE merchant_invoice
    MODIFY COLUMN amount bigint(20)  NOT NULL,
    MODIFY COLUMN tax int(11) NOT NULL,
    MODIFY COLUMN amount_due bigint(20) NOT NULL DEFAULT 0;

ALTER TABLE workflow_steps
    ADD COLUMN deleted_at INT UNSIGNED DEFAULT NULL
    AFTER updated_at;

ALTER TABLE workflow_steps
    ADD INDEX `workflow_steps_created_at_deleted_at_index` (`created_at`,`deleted_at`);

ALTER TABLE fund_transfer_attempts
    MODIFY COLUMN bank_status_code varchar(30) DEFAULT NULL;

ALTER TABLE `action_comments`
    ADD INDEX `action_comments_entity_id_entity_type_index` (`entity_id`, `entity_type`);

ALTER TABLE `action_state`
    ADD INDEX `action_state_entity_id_entity_type_index` (`entity_id`,`entity_type`);

ALTER TABLE `admins`
    ADD INDEX `admins_email_index` (`email`),
    ADD INDEX `admins_created_at_index` (`created_at`),
    ADD INDEX `admins_last_login_at_index` (`last_login_at`);

ALTER TABLE `bank_accounts`
    DROP INDEX `bankaccounts_entity_id_index`,
    ADD INDEX `bankaccounts_entity_id_type_index` (`entity_id`, `type`);

ALTER TABLE `features`
    DROP INDEX `features_name_index`;

ALTER TABLE `merchants`
    ADD INDEX `merchants_created_at_index` (`created_at`),
    ADD INDEX `merchants_updated_at_index` (`updated_at`);

ALTER TABLE `merchant_details`
    ADD INDEX `merchant_details_created_at_index` (`created_at`),
    ADD INDEX `merchant_details_updated_at_index` (`updated_at`);

ALTER TABLE `risk`
    DROP INDEX `risk_merchant_id_foreign`,
    ADD INDEX `risk_merchant_id_created_at_index` (`merchant_id`,`created_at`);

ALTER TABLE `schedules`
    ADD INDEX `schedules_name_index` (`name`);

ALTER TABLE `users`
    ADD INDEX `users_confirm_token_index` (`confirm_token`);

ALTER TABLE `workflow_actions`
    ADD INDEX `workflow_actions_entity_id_entity_name_index`(`entity_id`,`entity_name`);

ALTER TABLE merchants
    ADD COLUMN notes TEXT DEFAULT NULL AFTER invoice_code;

ALTER TABLE balance
    ADD COLUMN refund_credits BIGINT UNSIGNED DEFAULT 0 after fee_credits;

ALTER TABLE merchants
    ADD COLUMN refund_source TINYINT(1) DEFAULT 0 after fee_model;

ALTER TABLE `merchant_details`
    ADD COLUMN `form_12a_url` VARCHAR(255) DEFAULT NULL AFTER `promoter_address_url`,
    ADD COLUMN `form_80g_url` VARCHAR(255) DEFAULT NULL AFTER `form_12a_url`;

ALTER TABLE webhooks
    ADD COLUMN entity_type VARCHAR(100) DEFAULT NULL AFTER events,
    ADD COLUMN entity_id VARCHAR(14) DEFAULT NULL AFTER entity_type;

ALTER TABLE webhooks
    ADD UNIQUE INDEX webhooks_merchant_id_entity_id_unique (merchant_id,entity_id);


ALTER TABLE merchants
   ADD COLUMN whitelisted_ips_live VARCHAR(255) DEFAULT NULL AFTER category,
   ADD COLUMN whitelisted_ips_test VARCHAR(255) DEFAULT NULL AFTER whitelisted_ips_live;

ALTER TABLE qr_code
    ADD COLUMN short_url varchar(255) NOT NULL after qr_string;

ALTER TABLE hitachi
    ADD INDEX `hitachi_prequestid_index`(`pRequestId`),
    ADD INDEX `hitachi_prrn_index`(`pRRN`),
    ADD INDEX `hitachi_action_index`(`action`);

ALTER TABLE iins
    ADD COLUMN flows INTEGER UNSIGNED DEFAULT 1 AFTER otp_read;

ALTER TABLE payments Change token emi_subvention varchar(14);

ALTER TABLE atom
    ADD PRIMARY KEY (id);

ALTER TABLE gateway_downtimes
    ADD PRIMARY KEY (id);

ALTER TABLE merchant_terminal
    ADD UNIQUE INDEX merchant_terminal_merchant_id_terminal_id_unique (merchant_id, terminal_id),
    DROP INDEX merchant_terminal_merchant_id_foreign;

ALTER TABLE workflow_permissions
    ADD UNIQUE INDEX workflow_permissions_workflow_id_permission_id (workflow_id, permission_id),
    DROP INDEX workflow_permissions_workflow_id_index;

ALTER TABLE migrations
    ADD UNIQUE INDEX migrations_migration_unique (migration);

ALTER TABLE workflow_actions
    ADD COLUMN `state_changer_id` char(14) COLLATE utf8_bin  NULL AFTER `admin_id`,
    ADD COLUMN `state_changer_role_id` char(14) COLLATE utf8_bin  NULL AFTER `admin_id`,
    ADD CONSTRAINT `workflow_actions_state_changer_id_foreign` FOREIGN KEY (`state_changer_id`) REFERENCES `admins` (`id`),
    ADD CONSTRAINT `workflow_actions_state_changer_role_id_foreign` FOREIGN KEY (`state_changer_role_id`) REFERENCES `roles` (`id`);

ALTER TABLE transactions
    DROP INDEX transactions_settled_index,
    ADD INDEX transactions_settled_channel_on_hold_index (settled, channel, on_hold);

ALTER TABLE payments
    ADD INDEX payments_merchant_id_status_created_at_index (merchant_id, status, created_at),
    ADD INDEX payments_merchant_id_index (merchant_id);

ALTER TABLE payments
    ADD INDEX payments_recurring_index (recurring);

ALTER TABLE files modify extension varchar(255) default null;

ALTER TABLE terminals
    ADD COLUMN emandate TINYINT(1) DEFAULT 0 NOT NULL AFTER upi;

ALTER TABLE tokens
    ADD COLUMN `auth_type` VARCHAR(14) DEFAULT NULL after gateway_token2;

ALTER TABLE merchant_banks
    ADD COLUMN emandate TINYINT(1) DEFAULT 0 NOT NULL AFTER upi;

ALTER TABLE payments
    DROP INDEX payments_merchant_id_foreign;

ALTER TABLE coupons
    DROP INDEX coupons_code_index;

ALTER TABLE devices
    DROP INDEX devices_verification_token_index;

ALTER TABLE invoices
    ADD INDEX invoices_updated_at_index (updated_at),
    DROP INDEX invoices_merchant_id_foreign;

ALTER TABLE merchant_users
    DROP INDEX merchant_users_merchant_id_foreign;

ALTER TABLE orders
    DROP INDEX orders_merchant_id_foreign;

ALTER TABLE orgs
    DROP INDEX custom_code,
    DROP INDEX custom_code_2,
    ADD UNIQUE KEY orgs_custom_code_unique (custom_code);

ALTER TABLE refunds
    DROP INDEX refunds_merchant_id_foreign;

ALTER TABLE settlements
    DROP INDEX settlements_merchant_id_foreign;

ALTER TABLE transactions
    DROP INDEX transactions_settled_at_index,
    DROP INDEX transactions_merchant_id_foreign;

ALTER TABLE webhooks
    DROP INDEX webhooks_merchant_id_foreign;

ALTER TABLE bank_transfers
    ADD INDEX bank_transfers_updated_at_index (updated_at);

ALTER TABLE virtual_accounts
    ADD INDEX virtual_accounts_updated_at_index (updated_at);

ALTER TABLE hitachi
    ADD COLUMN masked_card_number varchar(255) DEFAULT NULL after pStatus,
    ADD COLUMN card_network varchar(255) DEFAULT NULL after masked_card_number,
    ADD COLUMN merchant_reference varchar(255) DEFAULT NULL after card_network;

ALTER TABLE upi
    ADD COLUMN merchant_reference varchar(255) DEFAULT NULL after received;

ALTER TABLE fund_transfer_attempts
    ADD COLUMN initiate_at INT(11) AFTER batch_fund_transfer_id;

ALTER TABLE merchant_access_map
    DROP FOREIGN KEY merchant_access_map_merchant_id_foreign,
    DROP INDEX merchant_access_map_merchant_id_entity_id_unique;

ALTER TABLE merchant_access_map
    ADD CONSTRAINT merchant_access_map_merchant_id_foreign FOREIGN KEY(merchant_id)
        REFERENCES merchants(id);

ALTER TABLE workflow_actions
    ADD COLUMN `maker_id` char(14) NULL AFTER `admin_id`,
    ADD COLUMN `maker_type` char(14) NULL AFTER `maker_id`,
    ADD INDEX workflow_actions_maker_id_maker_type_index (maker_id, maker_type),
    MODIFY `admin_id` CHAR(14) NULL DEFAULT NULL;

# To run after the PR is merged.
UPDATE `workflow_actions`
    SET maker_id = admin_id , maker_type = 'admin'
    WHERE maker_id IS NULL AND admin_id IS NOT NULL;

ALTER TABLE `merchants`
    ADD COLUMN `has_key_access` TINYINT(1) NOT NULL DEFAULT 0 after `linked_account_kyc`;

ALTER TABLE tokens
    ADD COLUMN aadhaar_number VARCHAR(255) DEFAULT NULL AFTER ifsc;

ALTER TABLE schedules
    MODIFY COLUMN `interval` INTEGER DEFAULT NULL;

ALTER TABLE `merchant_details`
    ADD COLUMN `issue_fields` TEXT DEFAULT NULL AFTER `archived_at`,
    ADD COLUMN `issue_fields_reason` TEXT DEFAULT NULL AFTER `issue_fields`,
    ADD COLUMN `internal_notes` TEXT DEFAULT NULL AFTER `issue_fields_reason`;

ALTER TABLE batches
    ADD COLUMN name varchar(255) AFTER sub_type;

# Airtel aggregator accounts breakup -- start

UPDATE merchant_users
SET user_id='9mPKUa8oBmduZK'
WHERE merchant_id IN ('9NpBWKfcLqbgSz','9NpBWktBZ4FEV5','9NpBXAOz1bfDrT','9NpBXaSMBxI1Yt','9NpBY0wePPxA0p','9NpBYSQEFw4kdE','9NpBYutxbGhDv0','9NpBZOOsbscowE','9NpBZug7d03Mr5','9NpBaO8Ok7hpsY','9NpBavxja2MPEy','9NpBbS2cs0GCv1','9NpBbzNHFc7uqh','9NpBcUWcOAAppn','9NpBd1dBd5tJDq','9NpBdUovIi0hbF','9NpBdzgHk64I7T','9NpBeRUfbKv0Wi','9NpBewbQZnITU3','9NpBm2jQNEEbU8','9NpBmYRPdxX4ML')
AND role = 'owner';

DElETE FROM merchant_users
WHERE merchant_id = '9NpBVlLQV8KFf6' AND user_id = '8fgklXn4RUHBqi' AND role = 'owner';

INSERT INTO tagging_tags (tag_slug, tag_name, suggest, count)
VALUES ('ref-9npbvllqv8kff6', 'Ref-9NpBVlLQV8KFf6', 0, 21);

INSERT INTO tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)
VALUES ('9NpBVlLQV8KFf6', 'merchant', 'Referral', 'referral');

insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBWKfcLqbgSz', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBWktBZ4FEV5', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBXAOz1bfDrT', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBXaSMBxI1Yt', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBY0wePPxA0p', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBYSQEFw4kdE', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBYutxbGhDv0', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBZOOsbscowE', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBZug7d03Mr5', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBaO8Ok7hpsY', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBavxja2MPEy', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBbS2cs0GCv1', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBbzNHFc7uqh', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBcUWcOAAppn', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBd1dBd5tJDq', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBdUovIi0hbF', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBdzgHk64I7T', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBeRUfbKv0Wi', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBewbQZnITU3', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBm2jQNEEbU8', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBmYRPdxX4ML', 'merchant', 'Ref-9NpBVlLQV8KFf6', 'ref-9npbvllqv8kff6');

UPDATE merchant_users
SET user_id='9mPMrVjjPpYvcM'
WHERE merchant_id IN ('9NpBnzZdKKxoWx','9NpBoSlNLHjNqO','9NpBouqMMe8GwD','9NpBpObVZwKsBy','9NpBpyWIDlH8dY','9NpBqQR2APWd5z','9NpBqwXPa97TBl','9NpBrQ4jhFQ5F7','9NpBrso0pLEjvf','9NpBsQoxXZPVyT','9NpBssEnjQCv25','9NpBtMSsKuyzL6','9NpBttHNAprqDX','9NpBuNoVGQ1pra','9NpBurc8FKEo7W','9NpBvIpAHpl0rx','9NpBvih8SA7vWO','9NpBw7aWIFQPUe','9NpBwX8eZgtew3','9NpBwz8vbKCrh0','9NpBxPcEu66GGS')
AND role = 'owner';

DElETE FROM merchant_users
WHERE merchant_id = '9NpBnYoKsshmsn' AND user_id = '8fgklXn4RUHBqi' AND role = 'owner';

INSERT INTO tagging_tags (tag_slug, tag_name, suggest, count)
VALUES ('ref-9npbnyoksshmsn', 'Ref-9NpBnYoKsshmsn', 0, 21);

INSERT INTO tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)
VALUES ('9NpBnYoKsshmsn', 'merchant', 'Referral', 'referral');

insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBnzZdKKxoWx', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBoSlNLHjNqO', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBouqMMe8GwD', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBpObVZwKsBy', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBpyWIDlH8dY', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBqQR2APWd5z', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBqwXPa97TBl', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBrQ4jhFQ5F7', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBrso0pLEjvf', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBsQoxXZPVyT', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBssEnjQCv25', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBtMSsKuyzL6', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBttHNAprqDX', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBuNoVGQ1pra', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBurc8FKEo7W', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBvIpAHpl0rx', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBvih8SA7vWO', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBw7aWIFQPUe', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBwX8eZgtew3', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBwz8vbKCrh0', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBxPcEu66GGS', 'merchant', 'Ref-9NpBnYoKsshmsn', 'ref-9npbnyoksshmsn');


UPDATE merchant_users
SET user_id='9mPNcxLacwvrjY'
WHERE merchant_id IN ('9NpBfxOrgqid0P','9NpBgOd0xMJAIt','9NpBgpnck94xNY','9NpBhG7fVuTpNW','9NpBhgPCG3DQ6W','9NpBi9etiEt3d3','9NpBieXoo8ydI4','9NpBj6pIjvui1s','9NpBjctCgqwcpR','9NpBk2671Jh7LD','9NpBkSLPEr5AkA','9NpBl5OaRxiSr0','9NpBlVsJ6ItRMC','9NpBn39Go7wtxh')
AND role = 'owner';

DElETE FROM merchant_users
WHERE merchant_id = '9NpBfTPEa4zCjZ' AND user_id = '8fgklXn4RUHBqi' AND role = 'owner';

INSERT INTO tagging_tags (tag_slug, tag_name, suggest, count)
VALUES ('ref-9npbftpea4zcjz', 'Ref-9NpBfTPEa4zCjZ', 0, 14);

INSERT INTO tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)
VALUES ('9NpBfTPEa4zCjZ', 'merchant', 'Referral', 'referral');

insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBfxOrgqid0P', 'merchant', 'Ref-9NpBfTPEa4zCjZ', 'ref-9npbftpea4zcjz');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBgOd0xMJAIt', 'merchant', 'Ref-9NpBfTPEa4zCjZ', 'ref-9npbftpea4zcjz');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBgpnck94xNY', 'merchant', 'Ref-9NpBfTPEa4zCjZ', 'ref-9npbftpea4zcjz');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBhG7fVuTpNW', 'merchant', 'Ref-9NpBfTPEa4zCjZ', 'ref-9npbftpea4zcjz');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBhgPCG3DQ6W', 'merchant', 'Ref-9NpBfTPEa4zCjZ', 'ref-9npbftpea4zcjz');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBi9etiEt3d3', 'merchant', 'Ref-9NpBfTPEa4zCjZ', 'ref-9npbftpea4zcjz');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBieXoo8ydI4', 'merchant', 'Ref-9NpBfTPEa4zCjZ', 'ref-9npbftpea4zcjz');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBj6pIjvui1s', 'merchant', 'Ref-9NpBfTPEa4zCjZ', 'ref-9npbftpea4zcjz');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBjctCgqwcpR', 'merchant', 'Ref-9NpBfTPEa4zCjZ', 'ref-9npbftpea4zcjz');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBk2671Jh7LD', 'merchant', 'Ref-9NpBfTPEa4zCjZ', 'ref-9npbftpea4zcjz');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBkSLPEr5AkA', 'merchant', 'Ref-9NpBfTPEa4zCjZ', 'ref-9npbftpea4zcjz');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBl5OaRxiSr0', 'merchant', 'Ref-9NpBfTPEa4zCjZ', 'ref-9npbftpea4zcjz');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBlVsJ6ItRMC', 'merchant', 'Ref-9NpBfTPEa4zCjZ', 'ref-9npbftpea4zcjz');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9NpBn39Go7wtxh', 'merchant', 'Ref-9NpBfTPEa4zCjZ', 'ref-9npbftpea4zcjz');

update merchant_users
set user_id='9mPQa4tX51tYnW'
where merchant_id IN ('9ac01tGbLrFpSV','9ac02H8xqcdFQh','9ac02hmncjWTgM','9ac0379Ep1r0J3','9ac03W9VWLetCt','9ac03yT0APTh1z','9ac04NsWxC3tRt','9ac04oe4MKbOXV','9ac05IfbWfIGJo','9ac05lO6vSzhor','9ac06DbLwe9v4u','9ac06hnFv0HRGG','9ac07EP4SuA1KO','9ac07oOsTamskQ','9ac08GZgcokhYc','9ac08i6gJgDVq2','9ac0976yFgKTzq','9ac09UxoDTe1dC','9ac09ucR1vEvph','9ac0GVIQRhPapZ','9ac0Gy7qAbaXk3','9ac0RZym55VGsd')
and role = 'owner';

DElETE FROM merchant_users
WHERE merchant_id = '9ac01GMEGfyU2o' AND user_id = '9aHC1buuBvesVy' AND role = 'owner';

INSERT INTO tagging_tags (tag_slug, tag_name, suggest, count)
VALUES ('ref-9ac01gmegfyu2o', 'Ref-9ac01GMEGfyU2o', 0, 22);

INSERT INTO tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)
VALUES ('9ac01GMEGfyU2o', 'merchant', 'Referral', 'referral');

insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac01tGbLrFpSV', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac02H8xqcdFQh', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac02hmncjWTgM', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0379Ep1r0J3', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac03W9VWLetCt', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac03yT0APTh1z', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac04NsWxC3tRt', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac04oe4MKbOXV', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac05IfbWfIGJo', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac05lO6vSzhor', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac06DbLwe9v4u', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac06hnFv0HRGG', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac07EP4SuA1KO', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac07oOsTamskQ', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac08GZgcokhYc', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac08i6gJgDVq2', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0976yFgKTzq', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac09UxoDTe1dC', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac09ucR1vEvph', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0GVIQRhPapZ', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0Gy7qAbaXk3', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0RZym55VGsd', 'merchant', 'Ref-9ac01GMEGfyU2o', 'ref-9ac01gmegfyu2o');

update merchant_users
set user_id='9mPSJFZA1Ubx3i'
where merchant_id IN ('9ac0INQnpskegm','9ac0Imf8IB87Fh','9ac0JErnD2Ro2U','9ac0JlJ59uylbj','9ac0KBJpur4TWH','9ac0KYoafmULYX','9ac0KxjsLehKbe','9ac0LNVeQv3hwO','9ac0LnF27xkXSy','9ac0MGfpVXM1rX','9ac0MhpX7a0s80','9ac0NHWnXaAQzB','9ac0NmLhDuYhiw','9ac0OJXuuHPLFr','9ac0OjIAZ8F5Er','9ac0P8x82pOwdA','9ac0PY46Hi7cA0','9ac0Pw41WpACh6','9ac0QKavrGzQnG','9ac0QisoFm888E','9ac0R6snbutUvv')
and role = 'owner';

DElETE FROM merchant_users
WHERE merchant_id = '9ac0HotNhSMJzK' AND user_id = '9aHC1buuBvesVy' AND role = 'owner';

INSERT INTO tagging_tags (tag_slug, tag_name, suggest, count)
VALUES ('ref-9ac0hotnhsmjzk', 'Ref-9ac0HotNhSMJzK', 0, 21);

INSERT INTO tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)
VALUES ('9ac0HotNhSMJzK', 'merchant', 'Referral', 'referral');

insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0INQnpskegm', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0Imf8IB87Fh', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0JErnD2Ro2U', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0JlJ59uylbj', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0KBJpur4TWH', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0KYoafmULYX', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0KxjsLehKbe', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0LNVeQv3hwO', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0LnF27xkXSy', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0MGfpVXM1rX', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0MhpX7a0s80', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0NHWnXaAQzB', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0NmLhDuYhiw', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0OJXuuHPLFr', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0OjIAZ8F5Er', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0P8x82pOwdA', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0PY46Hi7cA0', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0Pw41WpACh6', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0QKavrGzQnG', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0QisoFm888E', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0R6snbutUvv', 'merchant', 'Ref-9ac0HotNhSMJzK', 'ref-9ac0hotnhsmjzk');

update merchant_users
set user_id='9mPSvBxUBCLKx8'
where merchant_id IN ('9ac0ApXdgwOurS','9ac0BFkiA29q8o','9ac0Bihc4F9qnW','9ac0CBXZ5Oszgy','9ac0CbzTsptnFU','9ac0D4UcMgbTZV','9ac0DT7Epk7Dre','9ac0DtwA1clRpg','9ac0EIkPFZHWYR','9ac0EnB7f5eyU7','9ac0FFIRLXx83B','9ac0FcOUFdiZWP','9ac0FzCLhwFBx4','9ac0HPqkLkY6tR')
and role = 'owner';

DElETE FROM merchant_users
WHERE merchant_id = '9ac0AMR1H3n18A' AND user_id = '9aHC1buuBvesVy' AND role = 'owner';

INSERT INTO tagging_tags (tag_slug, tag_name, suggest, count)
VALUES ('ref-9ac0amr1h3n18a', 'Ref-9ac0AMR1H3n18A', 0, 14);

INSERT INTO tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)
VALUES ('9ac0AMR1H3n18A', 'merchant', 'Referral', 'referral');

insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0ApXdgwOurS', 'merchant', 'Ref-9ac0AMR1H3n18A', 'ref-9ac0amr1h3n18a');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0BFkiA29q8o', 'merchant', 'Ref-9ac0AMR1H3n18A', 'ref-9ac0amr1h3n18a');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0Bihc4F9qnW', 'merchant', 'Ref-9ac0AMR1H3n18A', 'ref-9ac0amr1h3n18a');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0CBXZ5Oszgy', 'merchant', 'Ref-9ac0AMR1H3n18A', 'ref-9ac0amr1h3n18a');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0CbzTsptnFU', 'merchant', 'Ref-9ac0AMR1H3n18A', 'ref-9ac0amr1h3n18a');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0D4UcMgbTZV', 'merchant', 'Ref-9ac0AMR1H3n18A', 'ref-9ac0amr1h3n18a');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0DT7Epk7Dre', 'merchant', 'Ref-9ac0AMR1H3n18A', 'ref-9ac0amr1h3n18a');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0DtwA1clRpg', 'merchant', 'Ref-9ac0AMR1H3n18A', 'ref-9ac0amr1h3n18a');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0EIkPFZHWYR', 'merchant', 'Ref-9ac0AMR1H3n18A', 'ref-9ac0amr1h3n18a');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0EnB7f5eyU7', 'merchant', 'Ref-9ac0AMR1H3n18A', 'ref-9ac0amr1h3n18a');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0FFIRLXx83B', 'merchant', 'Ref-9ac0AMR1H3n18A', 'ref-9ac0amr1h3n18a');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0FcOUFdiZWP', 'merchant', 'Ref-9ac0AMR1H3n18A', 'ref-9ac0amr1h3n18a');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0FzCLhwFBx4', 'merchant', 'Ref-9ac0AMR1H3n18A', 'ref-9ac0amr1h3n18a');
insert into tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)  VALUES ('9ac0HPqkLkY6tR', 'merchant', 'Ref-9ac0AMR1H3n18A', 'ref-9ac0amr1h3n18a');

DElETE FROM merchant_users
WHERE merchant_id = '9ac0S0RCy2Zy6T' AND user_id = '9aHC1buuBvesVy' AND role = 'owner';

INSERT INTO tagging_tagged (taggable_id, taggable_type, tag_name, tag_slug)
VALUES ('9ac0S0RCy2Zy6T', 'merchant', 'Referral', 'referral');

delete from tagging_tagged
where tag_name = 'Ref-9aHC1hl4PNU3sn';

delete from tagging_tagged
where tag_name = 'Ref-8fgkljXsVg4lSh';

delete from tagging_tags
where name = 'Ref-8fgkljXsVg4lSh';

delete from tagging_tags
where name = 'Ref-9aHC1hl4PNU3sn';

# Airtel aggregator accounts breakup -- end

# Invoice GST - item / line_items

ALTER TABLE items
    ADD COLUMN hsn_code VARCHAR(20) DEFAULT NULL AFTER tax_inclusive,
    ADD COLUMN sac_code VARCHAR(20) DEFAULT NULL AFTER hsn_code,
    ADD COLUMN tax_rate INTEGER UNSIGNED DEFAULT NULL AFTER sac_code;

ALTER TABLE line_items
    ADD COLUMN hsn_code VARCHAR(20) DEFAULT NULL AFTER tax_inclusive,
    ADD COLUMN sac_code VARCHAR(20) DEFAULT NULL AFTER hsn_code;

ALTER TABLE `merchant_details`
    ADD COLUMN `reviewer_id` char(14) NULL DEFAULT NULL AFTER `archived_at`;

ALTER TABLE orders
    ADD COLUMN discount TINYINT(4) NOT NULL DEFAULT 0 AFTER offer_id;

ALTER TABLE upi
    ADD COLUMN account_number VARCHAR(255) NULL DEFAULT NULL AFTER vpa,
    ADD COLUMN ifsc VARCHAR(255) NULL DEFAULT NULL AFTER account_number;

ALTER TABLE action_checker
    ADD INDEX action_checker_created_at_index (created_at);

ALTER TABLE action_comments
    ADD INDEX action_comments_created_at_index (created_at);

ALTER TABLE action_state
    ADD INDEX action_state_created_at_index (created_at);

ALTER TABLE action_state_reasons
    ADD INDEX action_state_reasons_created_at_index (created_at);

ALTER TABLE admin_leads
    ADD INDEX admin_leads_created_at_index (created_at);

ALTER TABLE adjustment
    ADD INDEX adjustment_created_at_index (created_at);

ALTER TABLE admin_tokens
    ADD INDEX admin_tokens_created_at_index (created_at);

ALTER TABLE atom
    ADD INDEX atom_created_at_index (created_at);

ALTER TABLE axis
    ADD INDEX axis_created_at_index (created_at);

ALTER TABLE balance
    ADD INDEX balance_created_at_index (created_at);

ALTER TABLE billdesk
    ADD INDEX billdesk_created_at_index (created_at);

ALTER TABLE cards
    ADD INDEX cards_created_at_index (created_at);

ALTER TABLE coupons
    ADD INDEX coupons_created_at_index (created_at);

ALTER TABLE credit_transaction
    ADD INDEX credit_transaction_created_at_index (created_at);

ALTER TABLE emi_plans
    ADD INDEX emi_plans_created_at_index (created_at);

ALTER TABLE features
    ADD INDEX features_created_at_index (created_at);

ALTER TABLE fees_breakup
    ADD INDEX fees_breakup_created_at_index (created_at),
    DROP INDEX fees_breakup_name_index;

ALTER TABLE gateway_rules
    ADD INDEX gateway_rules_created_at_index (created_at);

ALTER TABLE geo_ips
    ADD INDEX geo_ips_created_at_index (created_at);

ALTER TABLE groups
    ADD INDEX groups_created_at_index (created_at);

ALTER TABLE hdfc
    ADD INDEX hdfc_created_at_index (created_at);

ALTER TABLE hdfc_mpr
    ADD INDEX hdfc_mpr_created_at_index (created_at);

ALTER TABLE hdfc_response_xml
    ADD INDEX hdfc_response_xml_created_at_index (created_at);

ALTER TABLE `keys`
    ADD INDEX keys_created_at_index (created_at);

ALTER TABLE kotak
    ADD INDEX kotak_created_at_index (created_at);

ALTER TABLE login_attempts
    ADD INDEX login_attempts_created_at_index (created_at);

ALTER TABLE merchant_banks
    ADD INDEX merchant_banks_created_at_index (created_at);

ALTER TABLE merchant_emi_plans
    ADD INDEX merchant_emi_plans_created_at_index (created_at);

ALTER TABLE merchant_promotion
    ADD INDEX merchant_promotion_created_at_index (created_at);

ALTER TABLE merchant_requests
    ADD INDEX merchant_requests_created_at_index (created_at);

ALTER TABLE mobikwik
    ADD INDEX mobikwik_created_at_index (created_at);

ALTER TABLE netbanking
    ADD INDEX netbanking_created_at_index (created_at);

ALTER TABLE offers
    ADD INDEX offers_created_at_index (created_at);

ALTER TABLE org_field_map
    ADD INDEX org_field_map_created_at_index (created_at);

ALTER TABLE org_hostname
    ADD INDEX org_hostname__created_at_index (created_at);

ALTER TABLE permissions
    ADD INDEX permissions_created_at_index (created_at);

ALTER TABLE paytm
    ADD INDEX paytm_created_at_index (created_at);

ALTER TABLE pricing
    ADD INDEX pricing_created_at_index (created_at);

ALTER TABLE roles
    ADD INDEX roles_created_at_index (created_at);

ALTER TABLE sbiepay
    ADD INDEX sbiepay_created_at_index (created_at);

ALTER TABLE settlement_details
    ADD INDEX settlement_details_created_at_index (created_at);

ALTER TABLE terminals
    ADD INDEX terminals_created_at_index (created_at);

ALTER TABLE upi
    ADD INDEX upi_created_at_index (created_at);

ALTER TABLE users
    ADD INDEX users_created_at_index (created_at);

ALTER TABLE vpa
    ADD INDEX vpa_created_at_index (created_at);

ALTER TABLE wallet
    ADD INDEX wallet_created_at_index (created_at);

ALTER TABLE workflows
    ADD INDEX workflows_created_at_index (created_at);

# this is already there on reporting replica
# Please ensure that it is dropped before applying this on master
ALTER TABLE transactions
    ADD INDEX transactions_settled_at_merchant_id_index (settled_at, merchant_id);

ALTER TABLE customers
    DROP INDEX customers_contact_index,
    DROP INDEX customers_email_index,
    ADD INDEX customers_email_index (email(40)),
    ADD INDEX customers_contact_email_merchant_id_index (contact, email(40), merchant_id),
    ADD INDEX customers_contact_merchant_id_index (contact, merchant_id);

ALTER TABLE invoices
    ADD INDEX invoices_status_expire_by_deleted_at_index (status, expire_by, deleted_at);

ALTER TABLE virtual_accounts
    ADD COLUMN `entity_id` char(14) NULL DEFAULT NULL AFTER `customer_id`,
    ADD COLUMN `entity_type` char(20) NULL DEFAULT NULL AFTER `entity_id`,
    ADD INDEX `virtual_accounts_entity_id_entity_type_index` (`entity_id`,`entity_type`);

# Customer GSTIN - Invoices
ALTER TABLE customers
    ADD COLUMN gstin VARCHAR(20) DEFAULT NULL AFTER email;

ALTER TABLE invoices
    ADD COLUMN customer_gstin VARCHAR(20) DEFAULT NULL AFTER customer_contact;

ALTER TABLE tokens
    ADD INDEX tokens_recurring_status_index (recurring_status);

ALTER TABLE payments
    ADD COLUMN acknowledged_at INTEGER UNSIGNED AFTER auth_type,
    ADD COLUMN reference3 TINYINT(1) NULL AFTER reference2,
    ADD COLUMN reference4 TINYINT(1) NULL AFTER reference3,
    ADD COLUMN reference5 INT(11) DEFAULT NULL AFTER reference4,
    ADD COLUMN reference6 INT(11) DEFAULT NULL AFTER reference5,
    ADD COLUMN reference7 VARCHAR(255) DEFAULT NULL AFTER reference6,
    ADD COLUMN reference8 VARCHAR(255) DEFAULT NULL AFTER reference7,
    ADD COLUMN reference9 BIGINT UNSIGNED DEFAULT NULL AFTER reference8;

ALTER TABLE enach
    ADD COLUMN error_message VARCHAR(255) DEFAULT NULL AFTER registration_status,
    ADD COLUMN error_code VARCHAR(255) DEFAULT NULL AFTER error_message;

# Invoice GST Changes - address and tax codes
ALTER TABLE invoices
    ADD COLUMN customer_shipping_addr_id CHAR(14) DEFAULT NULL AFTER customer_billing_addr_id,
    ADD CONSTRAINT invoices_customer_shipping_addr_id_foreign FOREIGN KEY (customer_shipping_addr_id) REFERENCES addresses (id);

ALTER TABLE enach
    ADD COLUMN registration_date INTEGER UNSIGNED AFTER registration_status,
    ADD INDEX enach_registration_date_index (registration_date);

//Atom Entity refactor

ALTER TABLE atom DROP FOREIGN KEY atom_id_foreign;

ALTER TABLE atom DROP PRIMARY KEY;

ALTER TABLE atom CHANGE id payment_id CHAR(14);

ALTER TABLE atom ADD id int(10) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY FIRST;

ALTER TABLE atom ADD CONSTRAINT atom_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments(id);

ALTER TABLE atom
    ADD COLUMN refund_id CHAR(14) DEFAULT NULL AFTER payment_id,
    ADD COLUMN action VARCHAR(64) AFTER refund_id,
    ADD COLUMN received TINYINT(1) NOT NULL DEFAULT 0 AFTER action,
    ADD COLUMN amount VARCHAR(10) NOT NULL DEFAULT 0 AFTER received,
    ADD COLUMN status VARCHAR(64) DEFAULT NULL AFTER amount,
    ADD COLUMN account_number VARCHAR(50) DEFAULT NULL AFTER status,
    ADD COLUMN error_code VARCHAR(255) DEFAULT NULL AFTER method,
    ADD INDEX atom_bank_payment_id_index (bank_payment_id),
    ADD CONSTRAINT atom_refund_id_foreign FOREIGN KEY (refund_id) REFERENCES refunds(id),
    MODIFY COLUMN gateway_payment_id int(11) DEFAULT NULL,
    MODIFY COLUMN token char(75) DEFAULT NULL,
    MODIFY COLUMN `payment_id` char(14) NOT NULL;

ALTER TABLE atom MODIFY COLUMN gateway_payment_id VARCHAR(255) DEFAULT NULL;

ALTER TABLE `merchant_details`
    ADD COLUMN `business_category` VARCHAR(255) DEFAULT NULL AFTER `company_pan_name`,
    ADD COLUMN `business_subcategory` VARCHAR(255) DEFAULT NULL AFTER `business_category`;

ALTER TABLE payments drop foreign key payments_app_id_foreign,
                     rename index payments_app_id_foreign TO payments_receiver_id_index,
                     change app_id receiver_id varchar(14),
                     change reference8 receiver_type varchar(255);

# Renaming to batch_id
ALTER TABLE payments
    CHANGE reference7 batch_id VARCHAR(255);

ALTER TABLE settlements
    ADD INDEX settlements_channel_index (channel);

ALTER TABLE pricing
    ADD COLUMN receiver_type varchar(255) DEFAULT NULL AFTER international;

# Invoice GST changes
ALTER TABLE merchants
    ADD COLUMN invoice_label_field varchar(50) DEFAULT NULL AFTER logo_url;

ALTER TABLE invoices
    ADD COLUMN merchant_label varchar(255) DEFAULT NULL AFTER customer_gstin;

ALTER TABLE terminals
    ADD COLUMN mastercard_mpan varchar(16) DEFAULT NULL after gateway_client_certificate,
    ADD COLUMN visa_mpan varchar(16) DEFAULT NULL after mastercard_mpan,
    ADD COLUMN rupay_mpan varchar(16) DEFAULT NULL after visa_mpan,
    ADD COLUMN vpa varchar(255) DEFAULT NULL after rupay_mpan,
    ADD INDEX terminals_mastercard_mpan_index (mastercard_mpan),
    ADD INDEX terminals_visa_mpan_index (visa_mpan),
    ADD INDEX terminals_rupay_mpan_index (rupay_mpan),
    ADD INDEX terminals_vpa_index (vpa);

ALTER TABLE terminals
    CHANGE mastercard_mpan mc_mpan varchar(16),
    rename index terminals_mastercard_mpan_index to terminals_mc_mpan_index;

ALTER TABLE terminals
    ADD COLUMN gateway_terminal_password2 text DEFAULT NULL AFTER gateway_terminal_password,
    ADD COLUMN gateway_secure_secret2 VARCHAR(255) DEFAULT NULL AFTER gateway_secure_secret;

ALTER TABLE payments
    ADD INDEX `payments_merchant_id_captured_at_index` (merchant_id, captured_at);

ALTER TABLE invoices
    ADD COLUMN supply_state_code CHAR(4) DEFAULT NULL AFTER merchant_label;

ALTER TABLE card_fss MODIFY COLUMN status VARCHAR(255) DEFAULT NULL;

DROP INDEX `card_fss_status_index` on `card_fss`; CREATE INDEX `card_fss_status_index` ON card_fss (status(50));

ALTER TABLE line_items
    ADD COLUMN tax_rate INTEGER UNSIGNED DEFAULT NULL AFTER sac_code;

Alter table terminals
    Modify column type integer default '1';

ALTER TABLE invoices
    ADD COLUMN merchant_gstin VARCHAR(20) DEFAULT NULL AFTER customer_gstin;

ALTER TABLE webhooks
    ADD COLUMN disable_on_failure TINYINT(1) NOT NULL DEFAULT 1 AFTER active;

ALTER TABLE offers
    ADD COLUMN international TINYINT(1) DEFAULT NULL AFTER issuer;

ALTER TABLE terminals
    ADD COLUMN expected BOOLEAN DEFAULT 0 NOT NULL after corporate;

ALTER TABLE qr_code
    ADD COLUMN reference varchar(255) DEFAULT NULL after merchant_id,
    ADD INDEX `qr_code_reference_index` (reference),
    MODIFY COLUMN qr_string TEXT DEFAULT NULL,
    MODIFY COLUMN short_url varchar(255) DEFAULT NULL;

ALTER TABLE orders
    ADD COLUMN reference1 TINYINT(1) NULL AFTER authorized,
    ADD COLUMN reference2 TINYINT(1) NULL AFTER reference1,
    ADD COLUMN reference3 TINYINT(4) NULL AFTER reference2,
    ADD COLUMN reference4 INT(11) UNSIGNED DEFAULT NULL AFTER reference3,
    ADD COLUMN reference5 BIGINT UNSIGNED DEFAULT NULL AFTER reference4,
    ADD COLUMN reference6 BIGINT UNSIGNED DEFAULT NULL AFTER reference5,
    ADD COLUMN reference7 VARCHAR(14) DEFAULT NULL AFTER reference6,
    ADD COLUMN reference8 VARCHAR(14) DEFAULT NULL AFTER reference7,
    ADD COLUMN reference9 VARCHAR(255) DEFAULT NULL AFTER reference8,
    ADD COLUMN reference10 VARCHAR(255) DEFAULT NULL AFTER reference9;

# Add attempts to payouts
ALTER TABLE payouts
    ADD COLUMN attempts integer default 1 not null after channel;

# Amazon Pay is added as wallet
ALTER TABLE merchant_banks
    ADD COLUMN amazonpay TINYINT(1) NOT NULL DEFAULT 0 AFTER airtelmoney;

ALTER TABLE batches
    ADD COLUMN processed_count INTEGER UNSIGNED DEFAULT NULL AFTER total_count;

ALTER TABLE tokens
    ADD COLUMN confirmed_at INTEGER UNSIGNED DEFAULT NULL AFTER recurring_failure_reason,
    ADD COLUMN rejected_at INTEGER UNSIGNED DEFAULT NULL AFTER confirmed_at,
    ADD COLUMN initiated_at INTEGER UNSIGNED DEFAULT NULL AFTER rejected_at,
    ADD COLUMN acknowledged_at INTEGER UNSIGNED DEFAULT NULL AFTER initiated_at,
    ADD INDEX `tokens_confirmed_at_index` (confirmed_at);
    ADD INDEX `tokens_rejected_at_index` (rejected_at);
    ADD INDEX `tokens_initiated_at_index` (initiated_at);
    ADD INDEX `tokens_acknowledged_at_index` (acknowledged_at);

# Renames the reference1 column and adds a default value
ALTER TABLE orders
    CHANGE reference1 force_offer TINYINT(1),
    ALGORITHM=INPLACE, LOCK=NONE;

ALTER TABLE merchants
    ADD COLUMN partner_type VARCHAR(255) DEFAULT NULL AFTER has_key_access;

# Corrects unique index on entity_offer
ALTER TABLE entity_offer
  DROP INDEX entity_offer_entity_id_entity_type_unique,
  ADD UNIQUE INDEX entity_offer_entity_id_entity_type_offer_id_unique (entity_id, entity_type, offer_id);

# Adds payment_link_id column and few more blank columns of various types for future usage
# Creates index on payment_link_id
ALTER TABLE payments
    ADD COLUMN payment_link_id CHAR(14) DEFAULT NULL AFTER transfer_id,
    ADD COLUMN reference10 INT(10) UNSIGNED DEFAULT NULL AFTER acknowledged_at,
    ADD COLUMN reference11 INT(10) UNSIGNED DEFAULT NULL AFTER reference10,
    ADD COLUMN reference12 BIGINT(20) UNSIGNED DEFAULT NULL AFTER reference11,
    ADD COLUMN reference13 CHAR(14) DEFAULT NULL AFTER reference12,
    ADD COLUMN reference14 CHAR(14) DEFAULT NULL AFTER reference13,
    ADD COLUMN reference15 VARCHAR(255) DEFAULT NULL AFTER reference14,
    ADD COLUMN reference16 VARCHAR(255) DEFAULT NULL AFTER reference15,
    ADD COLUMN reference17 TEXT AFTER reference16,
    ADD INDEX payments_payment_link_id_index (payment_link_id);

ALTER TABLE gateway_rules
    ADD COLUMN recurring TINYINT(1) DEFAULT NULL AFTER method,
    ADD COLUMN flow VARCHAR(64) DEFAULT NULL AFTER recurring;

ALTER TABLE virtual_accounts
    ADD INDEX virtual_accounts_qr_code_id_index (qr_code_id);

# Removes database unique constraints for merchant_id and receipt uniqueness
# Adds index on merchant_id, receipt for fast lookup
ALTER TABLE invoices
    DROP INDEX invoices_merchant_id_receipt_unique,
    ADD INDEX invoices_merchant_id_receipt_index (merchant_id, receipt);

# Adds auth_type column to pricing table
ALTER TABLE pricing
    ADD COLUMN auth_type VARCHAR(255) DEFAULT NULL AFTER payment_method_type;

#increase error_code length for hdfc
ALTER TABLE hdfc
    ADD COLUMN error_code2 VARCHAR(255) DEFAULT NULL AFTER error_code,
    ADD COLUMN reference1 VARCHAR(255) DEFAULT NULL AFTER arn_no,
    ADD COLUMN reference2 VARCHAR(255) DEFAULT NULL AFTER reference1,
    ADD COLUMN reference3 VARCHAR(255) DEFAULT NULL AFTER reference2,
    ADD COLUMN reference4 VARCHAR(255) DEFAULT NULL AFTER reference3,
    ADD COLUMN reference5 INT(11) UNSIGNED DEFAULT NULL AFTER reference4,
    ADD COLUMN reference6 BIGINT UNSIGNED DEFAULT NULL AFTER reference5;

# Below queries to be run only on prod db.
# Removes foreign key constraints for heimdall entities
# Turn off binlog for the session on master db
SET sql_log_bin = 0
ALTER TABLE action_checker DROP FOREIGN KEY action_checker_action_id_foreign;
ALTER TABLE action_checker DROP FOREIGN KEY action_checker_admin_id_foreign;
ALTER TABLE action_checker DROP FOREIGN KEY action_checker_step_id_foreign;
ALTER TABLE action_comments DROP FOREIGN KEY action_comments_action_id_foreign;
ALTER TABLE action_comments DROP FOREIGN KEY action_comments_admin_id_foreign;
ALTER TABLE action_state DROP FOREIGN KEY action_state_action_id_foreign;
ALTER TABLE action_state DROP FOREIGN KEY action_state_admin_id_foreign;
ALTER TABLE action_state_reasons DROP FOREIGN KEY action_state_reasons_state_id_foreign;
ALTER TABLE admin_leads DROP FOREIGN KEY admin_leads_admin_id_foreign;
ALTER TABLE admin_leads DROP FOREIGN KEY admin_leads_merchant_id_foreign;
ALTER TABLE admin_leads DROP FOREIGN KEY admin_leads_org_id_foreign;
ALTER TABLE admin_tokens DROP FOREIGN KEY admin_tokens_admin_id_foreign;
ALTER TABLE admins DROP FOREIGN KEY admins_org_id_foreign;
ALTER TABLE roles DROP FOREIGN KEY roles_org_id_foreign;
ALTER TABLE workflow_actions DROP FOREIGN KEY workflow_actions_admin_id_foreign;
ALTER TABLE workflow_actions DROP FOREIGN KEY workflow_actions_org_id_foreign;
ALTER TABLE workflow_actions DROP FOREIGN KEY workflow_actions_permission_id_foreign;
ALTER TABLE workflow_actions DROP FOREIGN KEY workflow_actions_state_changer_id_foreign;
ALTER TABLE workflow_actions DROP FOREIGN KEY workflow_actions_state_changer_role_id_foreign;
ALTER TABLE workflow_actions DROP FOREIGN KEY workflow_actions_workflow_id_foreign;
ALTER TABLE workflow_permissions DROP FOREIGN KEY workflow_permissions_permission_id_foreign;
ALTER TABLE workflow_permissions DROP FOREIGN KEY workflow_permissions_workflow_id_foreign;
ALTER TABLE workflow_steps DROP FOREIGN KEY workflow_steps_role_id_foreign;
ALTER TABLE workflow_steps DROP FOREIGN KEY workflow_steps_workflow_id_foreign;
ALTER TABLE workflows DROP FOREIGN KEY workflows_org_id_foreign;
SET sql_log_bin = 1;

# Once above has executed, on each replica apart from redash login and execute the same command.
# Doing it this way, so that there is no time in which redash replica does not have fk constraints.

ALTER TABLE blade
    ADD COLUMN gateway CHAR(64) DEFAULT NULL AFTER acquirer,
    ADD COLUMN gateway_payment_id VARCHAR(255) DEFAULT NULL AFTER eci,
    ADD COLUMN response_code VARCHAR(255) DEFAULT NULL AFTER gateway_payment_id,
    ADD COLUMN response_description VARCHAR(255) DEFAULT NULL AFTER response_code,
    ADD INDEX `blade_gateway_payment_id_index` (gateway_payment_id);

# Run these on master
ALTER TABLE addons DROP FOREIGN KEY addons_invoice_id_foreign;
ALTER TABLE addons DROP FOREIGN KEY addons_item_id_foreign;
ALTER TABLE addons DROP FOREIGN KEY addons_merchant_id_foreign;
ALTER TABLE addons DROP FOREIGN KEY addons_subscription_id_foreign;
ALTER TABLE adjustment DROP FOREIGN KEY adjustment_merchant_id_foreign;
ALTER TABLE adjustment DROP FOREIGN KEY adjustment_settlement_id_foreign;
ALTER TABLE adjustment DROP FOREIGN KEY adjustment_transaction_id_foreign;
ALTER TABLE aeps DROP FOREIGN KEY aeps_payment_id_foreign;
ALTER TABLE atom DROP FOREIGN KEY atom_payment_id_foreign;
ALTER TABLE atom DROP FOREIGN KEY atom_refund_id_foreign;
ALTER TABLE axis DROP FOREIGN KEY axis_payment_id_foreign;
ALTER TABLE axis DROP FOREIGN KEY axis_terminal_id_foreign;
ALTER TABLE balance DROP FOREIGN KEY balance_id_foreign;
ALTER TABLE bank_accounts DROP FOREIGN KEY bank_accounts_merchant_id_foreign;
ALTER TABLE bank_transfers DROP FOREIGN KEY bank_transfer_payer_bank_account_id_foreign;
ALTER TABLE bank_transfers DROP FOREIGN KEY bank_transfers_merchant_id_foreign;
ALTER TABLE bank_transfers DROP FOREIGN KEY bank_transfers_payment_id_foreign;
ALTER TABLE bank_transfers DROP FOREIGN KEY bank_transfers_virtual_account_id_foreign;
ALTER TABLE batches DROP FOREIGN KEY batches_merchant_id_foreign;
ALTER TABLE bharat_qr DROP FOREIGN KEY bharat_qr_payment_id_foreign;
ALTER TABLE bharat_qr DROP FOREIGN KEY bharat_qr_virtual_account_id_foreign;
ALTER TABLE billdesk DROP FOREIGN KEY billdesk_payment_id_foreign;
ALTER TABLE blade DROP FOREIGN KEY blade_payment_id_foreign;
ALTER TABLE cards DROP FOREIGN KEY cards_global_card_id_foreign;
ALTER TABLE cards DROP FOREIGN KEY cards_merchant_id_foreign;
ALTER TABLE coupons DROP FOREIGN KEY coupons_merchant_id_foreign;
ALTER TABLE credit_transaction DROP FOREIGN KEY credit_transaction_credits_id_foreign;
ALTER TABLE credit_transaction DROP FOREIGN KEY credit_transaction_transaction_id_foreign;
ALTER TABLE credits DROP FOREIGN KEY credits_merchant_id_foreign;
ALTER TABLE credits DROP FOREIGN KEY credits_promotion_id_foreign;
ALTER TABLE customer_apps DROP FOREIGN KEY customer_apps_customer_id_foreign;
ALTER TABLE customer_apps DROP FOREIGN KEY customer_apps_merchant_id_foreign;
ALTER TABLE customer_balance DROP FOREIGN KEY customer_balance_customer_id_foreign;
ALTER TABLE customer_balance DROP FOREIGN KEY customer_balance_merchant_id_foreign;
ALTER TABLE customer_transactions DROP FOREIGN KEY customer_transactions_customer_id_foreign;
ALTER TABLE customer_transactions DROP FOREIGN KEY customer_transactions_merchant_id_foreign;
ALTER TABLE customers DROP FOREIGN KEY customers_global_customer_id_foreign;
ALTER TABLE customers DROP FOREIGN KEY customers_merchant_id_foreign;
ALTER TABLE cybersource DROP FOREIGN KEY cybersource_payment_id_foreign;
ALTER TABLE daily_settlements DROP FOREIGN KEY daily_settlements_excel_file_id_foreign;
ALTER TABLE daily_settlements DROP FOREIGN KEY daily_settlements_txt_file_id_foreign;
ALTER TABLE devices DROP FOREIGN KEY devices_customer_id_foreign;
ALTER TABLE discounts DROP FOREIGN KEY discounts_offer_id_foreign;
ALTER TABLE discounts DROP FOREIGN KEY discounts_order_id_foreign;
ALTER TABLE discounts DROP FOREIGN KEY discounts_payment_id_foreign;
ALTER TABLE dispute_files DROP FOREIGN KEY dispute_files_dispute_id_foreign;
ALTER TABLE disputes DROP FOREIGN KEY disputes_merchant_id_foreign;
ALTER TABLE disputes DROP FOREIGN KEY disputes_parent_id_foreign;
ALTER TABLE disputes DROP FOREIGN KEY disputes_payment_id_foreign;
ALTER TABLE disputes DROP FOREIGN KEY disputes_reason_id_foreign;
ALTER TABLE disputes DROP FOREIGN KEY disputes_transaction_id_foreign;
ALTER TABLE ebs DROP FOREIGN KEY ebs_payment_id_foreign;
ALTER TABLE enach DROP FOREIGN KEY enach_payment_id_foreign;
ALTER TABLE entity_offer DROP FOREIGN KEY entity_offer_offer_id_foreign;
ALTER TABLE fees_breakup DROP FOREIGN KEY fees_breakup_pricing_rule_id_foreign;
ALTER TABLE fees_breakup DROP FOREIGN KEY fees_breakup_transaction_id_foreign;
ALTER TABLE files DROP FOREIGN KEY files_merchant_id_foreign;
ALTER TABLE first_data DROP FOREIGN KEY first_data_payment_id_foreign;
ALTER TABLE fund_transfer_attempts DROP FOREIGN KEY fund_transfer_attempts_batch_fund_transfer_id_foreign;
ALTER TABLE fund_transfer_attempts DROP FOREIGN KEY fund_transfer_attempts_merchant_id_foreign;
ALTER TABLE gateway_downtimes DROP FOREIGN KEY gateway_downtimes_terminal_id_foreign;
ALTER TABLE gateway_rules DROP FOREIGN KEY gateway_rules_merchant_id_foreign;
ALTER TABLE gateway_tokens DROP FOREIGN KEY gateway_tokens_merchant_id_foreign;
ALTER TABLE gateway_tokens DROP FOREIGN KEY gateway_tokens_terminal_id_foreign;
ALTER TABLE gateway_tokens DROP FOREIGN KEY gateway_tokens_token_id_foreign;
ALTER TABLE groups DROP FOREIGN KEY groups_org_id_foreign;
ALTER TABLE hdfc DROP FOREIGN KEY hdfc_payment_id_foreign;
ALTER TABLE hitachi DROP FOREIGN KEY hitachi_payment_id_foreign;
ALTER TABLE invitations DROP FOREIGN KEY invitations_merchant_id_foreign;
ALTER TABLE invitations DROP FOREIGN KEY invitations_user_id_foreign;
ALTER TABLE invoices DROP FOREIGN KEY invoices_batch_id_foreign;
ALTER TABLE invoices DROP FOREIGN KEY invoices_customer_address_foreign;
ALTER TABLE invoices DROP FOREIGN KEY invoices_customer_billing_addr_id_foreign;
ALTER TABLE invoices DROP FOREIGN KEY invoices_customer_id_foreign;
ALTER TABLE invoices DROP FOREIGN KEY invoices_customer_shipping_addr_id_foreign;
ALTER TABLE invoices DROP FOREIGN KEY invoices_merchant_id_foreign;
ALTER TABLE invoices DROP FOREIGN KEY invoices_order_id_foreign;
ALTER TABLE invoices DROP FOREIGN KEY invoices_subscription_id_foreign;
ALTER TABLE invoices DROP FOREIGN KEY invoices_user_id_foreign;
ALTER TABLE items DROP FOREIGN KEY items_merchant_id_foreign;
ALTER TABLE items DROP FOREIGN KEY items_tax_group_id_foreign;
ALTER TABLE items DROP FOREIGN KEY items_tax_id_foreign;
ALTER TABLE keys DROP FOREIGN KEY keys_merchant_id_foreign;
ALTER TABLE kotak DROP FOREIGN KEY kotak_payment_id_foreign;
ALTER TABLE line_item_taxes DROP FOREIGN KEY line_item_taxes_group_id_foreign;
ALTER TABLE line_item_taxes DROP FOREIGN KEY line_item_taxes_tax_id_foreign;
ALTER TABLE line_items DROP FOREIGN KEY line_items_item_id_foreign;
ALTER TABLE line_items DROP FOREIGN KEY line_items_merchant_id_foreign;
ALTER TABLE login_attempts DROP FOREIGN KEY login_attempts_admin_id_foreign;
ALTER TABLE merchant_access_map DROP FOREIGN KEY merchant_access_map_merchant_id_foreign;
ALTER TABLE merchant_banks DROP FOREIGN KEY merchant_banks_merchant_id_foreign;
ALTER TABLE merchant_details DROP FOREIGN KEY merchant_details_merchant_id_foreign;
ALTER TABLE merchant_emi_plans DROP FOREIGN KEY merchant_emi_plans_emi_plan_id_foreign;
ALTER TABLE merchant_emi_plans DROP FOREIGN KEY merchant_emi_plans_merchant_id_foreign;
ALTER TABLE merchant_invoice DROP FOREIGN KEY merchant_invoice_merchant_id_foreign;
ALTER TABLE merchant_map DROP FOREIGN KEY merchant_map_merchant_id_foreign;
ALTER TABLE merchant_promotion DROP FOREIGN KEY merchant_promotion_merchant_id_foreign;
ALTER TABLE merchant_promotion DROP FOREIGN KEY merchant_promotion_promotion_id_foreign;
ALTER TABLE merchant_terminal DROP FOREIGN KEY merchant_terminal_merchant_id_foreign;
ALTER TABLE merchant_terminal DROP FOREIGN KEY merchant_terminal_terminal_id_foreign;
ALTER TABLE merchant_users DROP FOREIGN KEY merchant_users_merchant_id_foreign;
ALTER TABLE merchant_users DROP FOREIGN KEY merchant_users_user_id_foreign;
ALTER TABLE merchants DROP FOREIGN KEY merchants_org_id_foreign;
ALTER TABLE merchants DROP FOREIGN KEY merchants_parent_id_foreign;
ALTER TABLE merchants DROP FOREIGN KEY merchants_settlement_schedule_id_foreign;
ALTER TABLE mobikwik DROP FOREIGN KEY mobikwik_payment_id_foreign;
ALTER TABLE netbanking DROP FOREIGN KEY netbanking_payment_id_foreign;
ALTER TABLE offers DROP FOREIGN KEY offers_merchant_id_foreign;
ALTER TABLE orders DROP FOREIGN KEY orders_customer_id_foreign;
ALTER TABLE orders DROP FOREIGN KEY orders_merchant_id_foreign;
ALTER TABLE org_field_map DROP FOREIGN KEY org_field_map_org_id_foreign;
ALTER TABLE org_hostname DROP FOREIGN KEY org_hostname_org_id_foreign;
ALTER TABLE p2p DROP FOREIGN KEY p2p_merchant_id_foreign;
ALTER TABLE payment_analytics DROP FOREIGN KEY payment_analytics_merchant_id_foreign;
ALTER TABLE payment_analytics DROP FOREIGN KEY payment_analytics_payment_id_foreign;
ALTER TABLE payment_links DROP FOREIGN KEY payment_links_merchant_id_foreign;
ALTER TABLE payments DROP FOREIGN KEY payments_card_id_foreign;
ALTER TABLE payments DROP FOREIGN KEY payments_customer_id_foreign;
ALTER TABLE payments DROP FOREIGN KEY payments_emi_plan_id_foreign;
ALTER TABLE payments DROP FOREIGN KEY payments_global_token_id_foreign;
ALTER TABLE payments DROP FOREIGN KEY payments_invoice_id_foreign;
ALTER TABLE payments DROP FOREIGN KEY payments_merchant_id_foreign;
ALTER TABLE payments DROP FOREIGN KEY payments_order_id_foreign;
ALTER TABLE payments DROP FOREIGN KEY payments_subscription_id_foreign;
ALTER TABLE payments DROP FOREIGN KEY payments_terminal_id_foreign;
ALTER TABLE payments DROP FOREIGN KEY payments_token_id_foreign;
ALTER TABLE payments DROP FOREIGN KEY payments_transaction_id_foreign;
ALTER TABLE payments DROP FOREIGN KEY payments_transfer_id_foreign;
ALTER TABLE payouts DROP FOREIGN KEY payouts_batch_fund_transfer_id_foreign;
ALTER TABLE payouts DROP FOREIGN KEY payouts_batch_settlement_id_foreign;
ALTER TABLE payouts DROP FOREIGN KEY payouts_customer_id_foreign;
ALTER TABLE payouts DROP FOREIGN KEY payouts_merchant_id_foreign;
ALTER TABLE payouts DROP FOREIGN KEY payouts_payment_id_foreign;
ALTER TABLE payouts DROP FOREIGN KEY payouts_transaction_id_foreign;
ALTER TABLE paytm DROP FOREIGN KEY paytm_payment_id_foreign;
ALTER TABLE plans DROP FOREIGN KEY plans_item_id_foreign;
ALTER TABLE plans DROP FOREIGN KEY plans_merchant_id_foreign;
ALTER TABLE promotions DROP FOREIGN KEY promotions_schedule_id_foreign;
ALTER TABLE qr_code DROP FOREIGN KEY qr_code_merchant_id_foreign;
ALTER TABLE refunds DROP FOREIGN KEY refunds_batch_fund_transfer_id_foreign;
ALTER TABLE refunds DROP FOREIGN KEY refunds_batch_id_foreign;
ALTER TABLE refunds DROP FOREIGN KEY refunds_merchant_id_foreign;
ALTER TABLE refunds DROP FOREIGN KEY refunds_payment_id_foreign;
ALTER TABLE refunds DROP FOREIGN KEY refunds_transaction_id_foreign;
ALTER TABLE reports DROP FOREIGN KEY report_file_id_foreign;
ALTER TABLE reports DROP FOREIGN KEY reports_merchant_id_foreign;
ALTER TABLE reversals DROP FOREIGN KEY reversals_merchant_id_foreign;
ALTER TABLE reversals DROP FOREIGN KEY reversals_transaction_id_foreign;
ALTER TABLE reversals DROP FOREIGN KEY reversals_transfer_id_foreign;
ALTER TABLE risk DROP FOREIGN KEY risk_merchant_id_foreign;
ALTER TABLE risk DROP FOREIGN KEY risk_payment_id_foreign;
ALTER TABLE sbiepay DROP FOREIGN KEY sbiepay_payment_id_foreign;
ALTER TABLE schedule_tasks DROP FOREIGN KEY schedule_tasks_merchant_id_foreign;
ALTER TABLE schedule_tasks DROP FOREIGN KEY schedule_tasks_schedule_id_foreign;
ALTER TABLE schedules DROP FOREIGN KEY schedules_merchant_id_foreign;
ALTER TABLE settlement_details DROP FOREIGN KEY settlement_details_merchant_id_foreign;
ALTER TABLE settlement_details DROP FOREIGN KEY settlement_details_settlement_id_foreign;
ALTER TABLE settlements DROP FOREIGN KEY settlements_bank_account_id_foreign;
ALTER TABLE settlements DROP FOREIGN KEY settlements_batch_fund_transfer_id_foreign;
ALTER TABLE settlements DROP FOREIGN KEY settlements_batch_settlement_id_foreign;
ALTER TABLE settlements DROP FOREIGN KEY settlements_merchant_id_foreign;
ALTER TABLE settlements DROP FOREIGN KEY settlements_transaction_id_foreign;
ALTER TABLE subscriptions DROP FOREIGN KEY subscriptions_customer_id_foreign;
ALTER TABLE subscriptions DROP FOREIGN KEY subscriptions_merchant_id_foreign;
ALTER TABLE subscriptions DROP FOREIGN KEY subscriptions_plan_id_foreign;
ALTER TABLE subscriptions DROP FOREIGN KEY subscriptions_schedule_id_foreign;
ALTER TABLE subscriptions DROP FOREIGN KEY subscriptions_token_id_foreign;
ALTER TABLE tagging_tags DROP FOREIGN KEY tagging_tags_tag_group_id_foreign;
ALTER TABLE tax_groups DROP FOREIGN KEY tax_groups_merchant_id_foreign;
ALTER TABLE taxes DROP FOREIGN KEY taxes_merchant_id_foreign;
ALTER TABLE terminal_analytics DROP FOREIGN KEY terminal_analytics_payment_id_foreign;
ALTER TABLE terminal_analytics DROP FOREIGN KEY terminal_analytics_terminal_id_foreign;
ALTER TABLE terminals DROP FOREIGN KEY terminals_merchant_id_foreign;
ALTER TABLE tokens DROP FOREIGN KEY token_terminal_id_foreign;
ALTER TABLE tokens DROP FOREIGN KEY tokens_card_id_foreign;
ALTER TABLE tokens DROP FOREIGN KEY tokens_customer_id_foreign;
ALTER TABLE tokens DROP FOREIGN KEY tokens_merchant_id_foreign;
ALTER TABLE transactions DROP FOREIGN KEY transactions_merchant_id_foreign;
ALTER TABLE transactions DROP FOREIGN KEY transactions_settlement_id_foreign;
ALTER TABLE transfers DROP FOREIGN KEY transfers_merchant_id_foreign;
ALTER TABLE transfers DROP FOREIGN KEY transfers_recipient_settlement_id_foreign;
ALTER TABLE transfers DROP FOREIGN KEY transfers_transaction_id_foreign;
ALTER TABLE upi DROP FOREIGN KEY upi_payment_id_foreign;
ALTER TABLE virtual_accounts DROP FOREIGN KEY virtual_accounts_bank_account_id_foreign;
ALTER TABLE virtual_accounts DROP FOREIGN KEY virtual_accounts_customer_id_foreign;
ALTER TABLE virtual_accounts DROP FOREIGN KEY virtual_accounts_merchant_id_foreign;
ALTER TABLE virtual_accounts DROP FOREIGN KEY virtual_accounts_qr_code_id_foreign;
ALTER TABLE vpa DROP FOREIGN KEY vpa_bank_account_id_foreign;
ALTER TABLE vpa DROP FOREIGN KEY vpa_customer_id_foreign;
ALTER TABLE wallet DROP FOREIGN KEY wallet_payment_id_foreign;
ALTER TABLE webhooks DROP FOREIGN KEY webhooks_merchant_id_foreign;

#Need this to be executed for Razorpay X payouts
ALTER TABLE fund_transfer_attempts
    ADD COLUMN wallet_account_id CHAR(14) DEFAULT NULL;

# Disable read_only flag on redash db and run these
SET SESSION foreign_key_checks = 0;
ALTER TABLE addons ADD CONSTRAINT addons_invoice_id_foreign FOREIGN KEY (invoice_id) REFERENCES invoices (id);
ALTER TABLE addons ADD CONSTRAINT addons_item_id_foreign FOREIGN KEY (item_id) REFERENCES items (id);
ALTER TABLE addons ADD CONSTRAINT addons_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE addons ADD CONSTRAINT addons_subscription_id_foreign FOREIGN KEY (subscription_id) REFERENCES subscriptions (id);
ALTER TABLE adjustment ADD CONSTRAINT adjustment_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE adjustment ADD CONSTRAINT adjustment_settlement_id_foreign FOREIGN KEY (settlement_id) REFERENCES settlements (id);
ALTER TABLE adjustment ADD CONSTRAINT adjustment_transaction_id_foreign FOREIGN KEY (transaction_id) REFERENCES transactions (id);
ALTER TABLE aeps ADD CONSTRAINT aeps_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE atom ADD CONSTRAINT atom_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE atom ADD CONSTRAINT atom_refund_id_foreign FOREIGN KEY (refund_id) REFERENCES refunds (id);
ALTER TABLE axis ADD CONSTRAINT axis_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE axis ADD CONSTRAINT axis_terminal_id_foreign FOREIGN KEY (terminal_id) REFERENCES terminals (id);
ALTER TABLE balance ADD CONSTRAINT balance_id_foreign FOREIGN KEY (id) REFERENCES merchants (id);
ALTER TABLE bank_accounts ADD CONSTRAINT bank_accounts_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE bank_transfers ADD CONSTRAINT bank_transfer_payer_bank_account_id_foreign FOREIGN KEY (payer_bank_account_id) REFERENCES bank_accounts (id);
ALTER TABLE bank_transfers ADD CONSTRAINT bank_transfers_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE bank_transfers ADD CONSTRAINT bank_transfers_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE bank_transfers ADD CONSTRAINT bank_transfers_virtual_account_id_foreign FOREIGN KEY (virtual_account_id) REFERENCES virtual_accounts (id);
ALTER TABLE batches ADD CONSTRAINT batches_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE bharat_qr ADD CONSTRAINT bharat_qr_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE bharat_qr ADD CONSTRAINT bharat_qr_virtual_account_id_foreign FOREIGN KEY (virtual_account_id) REFERENCES virtual_accounts (id);
ALTER TABLE billdesk ADD CONSTRAINT billdesk_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE blade ADD CONSTRAINT blade_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE cards ADD CONSTRAINT cards_global_card_id_foreign FOREIGN KEY (global_card_id) REFERENCES cards (id);
ALTER TABLE cards ADD CONSTRAINT cards_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE coupons ADD CONSTRAINT coupons_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE credit_transaction ADD CONSTRAINT credit_transaction_credits_id_foreign FOREIGN KEY (credits_id) REFERENCES credits (id);
ALTER TABLE credit_transaction ADD CONSTRAINT credit_transaction_transaction_id_foreign FOREIGN KEY (transaction_id) REFERENCES transactions (id);
ALTER TABLE credits ADD CONSTRAINT credits_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE credits ADD CONSTRAINT credits_promotion_id_foreign FOREIGN KEY (promotion_id) REFERENCES promotions (id);
ALTER TABLE customer_apps ADD CONSTRAINT customer_apps_customer_id_foreign FOREIGN KEY (customer_id) REFERENCES customers (id);
ALTER TABLE customer_apps ADD CONSTRAINT customer_apps_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE customer_balance ADD CONSTRAINT customer_balance_customer_id_foreign FOREIGN KEY (customer_id) REFERENCES customers (id);
ALTER TABLE customer_balance ADD CONSTRAINT customer_balance_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE customer_transactions ADD CONSTRAINT customer_transactions_customer_id_foreign FOREIGN KEY (customer_id) REFERENCES customers (id);
ALTER TABLE customer_transactions ADD CONSTRAINT customer_transactions_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE customers ADD CONSTRAINT customers_global_customer_id_foreign FOREIGN KEY (global_customer_id) REFERENCES customers (id);
ALTER TABLE customers ADD CONSTRAINT customers_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE cybersource ADD CONSTRAINT cybersource_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE daily_settlements ADD CONSTRAINT daily_settlements_excel_file_id_foreign FOREIGN KEY (excel_file_id) REFERENCES files (id);
ALTER TABLE daily_settlements ADD CONSTRAINT daily_settlements_txt_file_id_foreign FOREIGN KEY (txt_file_id) REFERENCES files (id);
ALTER TABLE devices ADD CONSTRAINT devices_customer_id_foreign FOREIGN KEY (customer_id) REFERENCES customers (id);
ALTER TABLE discounts ADD CONSTRAINT discounts_offer_id_foreign FOREIGN KEY (offer_id) REFERENCES offers (id);
ALTER TABLE discounts ADD CONSTRAINT discounts_order_id_foreign FOREIGN KEY (order_id) REFERENCES orders (id);
ALTER TABLE discounts ADD CONSTRAINT discounts_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE dispute_files ADD CONSTRAINT dispute_files_dispute_id_foreign FOREIGN KEY (dispute_id) REFERENCES disputes (id);
ALTER TABLE disputes ADD CONSTRAINT disputes_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE disputes ADD CONSTRAINT disputes_parent_id_foreign FOREIGN KEY (parent_id) REFERENCES disputes (id);
ALTER TABLE disputes ADD CONSTRAINT disputes_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE disputes ADD CONSTRAINT disputes_reason_id_foreign FOREIGN KEY (reason_id) REFERENCES dispute_reasons (id);
ALTER TABLE disputes ADD CONSTRAINT disputes_transaction_id_foreign FOREIGN KEY (transaction_id) REFERENCES transactions (id);
ALTER TABLE ebs ADD CONSTRAINT ebs_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE enach ADD CONSTRAINT enach_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE entity_offer ADD CONSTRAINT entity_offer_offer_id_foreign FOREIGN KEY (offer_id) REFERENCES offers (id);
ALTER TABLE fees_breakup ADD CONSTRAINT fees_breakup_pricing_rule_id_foreign FOREIGN KEY (pricing_rule_id) REFERENCES pricing (id);
ALTER TABLE fees_breakup ADD CONSTRAINT fees_breakup_transaction_id_foreign FOREIGN KEY (transaction_id) REFERENCES transactions (id);
ALTER TABLE files ADD CONSTRAINT files_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE first_data ADD CONSTRAINT first_data_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE fund_transfer_attempts ADD CONSTRAINT fund_transfer_attempts_batch_fund_transfer_id_foreign FOREIGN KEY (batch_fund_transfer_id) REFERENCES daily_settlements (id);
ALTER TABLE fund_transfer_attempts ADD CONSTRAINT fund_transfer_attempts_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE gateway_downtimes ADD CONSTRAINT gateway_downtimes_terminal_id_foreign FOREIGN KEY (terminal_id) REFERENCES terminals (id);
ALTER TABLE gateway_rules ADD CONSTRAINT gateway_rules_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE gateway_tokens ADD CONSTRAINT gateway_tokens_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE gateway_tokens ADD CONSTRAINT gateway_tokens_terminal_id_foreign FOREIGN KEY (terminal_id) REFERENCES terminals (id);
ALTER TABLE gateway_tokens ADD CONSTRAINT gateway_tokens_token_id_foreign FOREIGN KEY (token_id) REFERENCES tokens (id);
ALTER TABLE groups ADD CONSTRAINT groups_org_id_foreign FOREIGN KEY (org_id) REFERENCES orgs (id);
ALTER TABLE hdfc ADD CONSTRAINT hdfc_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE hitachi ADD CONSTRAINT hitachi_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE invitations ADD CONSTRAINT invitations_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE invitations ADD CONSTRAINT invitations_user_id_foreign FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE invoices ADD CONSTRAINT invoices_batch_id_foreign FOREIGN KEY (batch_id) REFERENCES batches (id);
ALTER TABLE invoices ADD CONSTRAINT invoices_customer_address_foreign FOREIGN KEY (customer_address) REFERENCES addresses (id);
ALTER TABLE invoices ADD CONSTRAINT invoices_customer_billing_addr_id_foreign FOREIGN KEY (customer_billing_addr_id) REFERENCES addresses (id);
ALTER TABLE invoices ADD CONSTRAINT invoices_customer_id_foreign FOREIGN KEY (customer_id) REFERENCES customers (id);
ALTER TABLE invoices ADD CONSTRAINT invoices_customer_shipping_addr_id_foreign FOREIGN KEY (customer_shipping_addr_id) REFERENCES addresses (id);
ALTER TABLE invoices ADD CONSTRAINT invoices_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE invoices ADD CONSTRAINT invoices_order_id_foreign FOREIGN KEY (order_id) REFERENCES orders (id);
ALTER TABLE invoices ADD CONSTRAINT invoices_subscription_id_foreign FOREIGN KEY (subscription_id) REFERENCES subscriptions (id);
ALTER TABLE invoices ADD CONSTRAINT invoices_user_id_foreign FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE items ADD CONSTRAINT items_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE items ADD CONSTRAINT items_tax_group_id_foreign FOREIGN KEY (tax_group_id) REFERENCES tax_groups (id);
ALTER TABLE items ADD CONSTRAINT items_tax_id_foreign FOREIGN KEY (tax_id) REFERENCES taxes (id);
ALTER TABLE keys ADD CONSTRAINT keys_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE kotak ADD CONSTRAINT kotak_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE line_item_taxes ADD CONSTRAINT line_item_taxes_group_id_foreign FOREIGN KEY (group_id) REFERENCES tax_groups (id);
ALTER TABLE line_item_taxes ADD CONSTRAINT line_item_taxes_tax_id_foreign FOREIGN KEY (tax_id) REFERENCES taxes (id);
ALTER TABLE line_items ADD CONSTRAINT line_items_item_id_foreign FOREIGN KEY (item_id) REFERENCES items (id);
ALTER TABLE line_items ADD CONSTRAINT line_items_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE login_attempts ADD CONSTRAINT login_attempts_admin_id_foreign FOREIGN KEY (admin_id) REFERENCES admins (id);
ALTER TABLE merchant_access_map ADD CONSTRAINT merchant_access_map_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE merchant_banks ADD CONSTRAINT merchant_banks_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE merchant_details ADD CONSTRAINT merchant_details_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE merchant_emi_plans ADD CONSTRAINT merchant_emi_plans_emi_plan_id_foreign FOREIGN KEY (emi_plan_id) REFERENCES emi_plans (id);
ALTER TABLE merchant_emi_plans ADD CONSTRAINT merchant_emi_plans_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE merchant_invoice ADD CONSTRAINT merchant_invoice_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE merchant_map ADD CONSTRAINT merchant_map_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE merchant_promotion ADD CONSTRAINT merchant_promotion_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE merchant_promotion ADD CONSTRAINT merchant_promotion_promotion_id_foreign FOREIGN KEY (promotion_id) REFERENCES promotions (id);
ALTER TABLE merchant_terminal ADD CONSTRAINT merchant_terminal_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE merchant_terminal ADD CONSTRAINT merchant_terminal_terminal_id_foreign FOREIGN KEY (terminal_id) REFERENCES terminals (id);
ALTER TABLE merchant_users ADD CONSTRAINT merchant_users_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE merchant_users ADD CONSTRAINT merchant_users_user_id_foreign FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE merchants ADD CONSTRAINT merchants_org_id_foreign FOREIGN KEY (org_id) REFERENCES orgs (id);
ALTER TABLE merchants ADD CONSTRAINT merchants_parent_id_foreign FOREIGN KEY (parent_id) REFERENCES merchants (id);
ALTER TABLE merchants ADD CONSTRAINT merchants_settlement_schedule_id_foreign FOREIGN KEY (settlement_schedule_id) REFERENCES schedules (id);
ALTER TABLE mobikwik ADD CONSTRAINT mobikwik_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE netbanking ADD CONSTRAINT netbanking_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE offers ADD CONSTRAINT offers_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE orders ADD CONSTRAINT orders_customer_id_foreign FOREIGN KEY (customer_id) REFERENCES customers (id);
ALTER TABLE orders ADD CONSTRAINT orders_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE org_field_map ADD CONSTRAINT org_field_map_org_id_foreign FOREIGN KEY (org_id) REFERENCES orgs (id);
ALTER TABLE org_hostname ADD CONSTRAINT org_hostname_org_id_foreign FOREIGN KEY (org_id) REFERENCES orgs (id);
ALTER TABLE p2p ADD CONSTRAINT p2p_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE payment_analytics ADD CONSTRAINT payment_analytics_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE payment_analytics ADD CONSTRAINT payment_analytics_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE payment_links ADD CONSTRAINT payment_links_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE payments ADD CONSTRAINT payments_card_id_foreign FOREIGN KEY (card_id) REFERENCES cards (id);
ALTER TABLE payments ADD CONSTRAINT payments_customer_id_foreign FOREIGN KEY (customer_id) REFERENCES customers (id);
ALTER TABLE payments ADD CONSTRAINT payments_emi_plan_id_foreign FOREIGN KEY (emi_plan_id) REFERENCES emi_plans (id);
ALTER TABLE payments ADD CONSTRAINT payments_global_token_id_foreign FOREIGN KEY (global_token_id) REFERENCES tokens (id);
ALTER TABLE payments ADD CONSTRAINT payments_invoice_id_foreign FOREIGN KEY (invoice_id) REFERENCES invoices (id);
ALTER TABLE payments ADD CONSTRAINT payments_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE payments ADD CONSTRAINT payments_order_id_foreign FOREIGN KEY (order_id) REFERENCES orders (id);
ALTER TABLE payments ADD CONSTRAINT payments_subscription_id_foreign FOREIGN KEY (subscription_id) REFERENCES subscriptions (id);
ALTER TABLE payments ADD CONSTRAINT payments_terminal_id_foreign FOREIGN KEY (terminal_id) REFERENCES terminals (id);
ALTER TABLE payments ADD CONSTRAINT payments_token_id_foreign FOREIGN KEY (token_id) REFERENCES tokens (id);
ALTER TABLE payments ADD CONSTRAINT payments_transaction_id_foreign FOREIGN KEY (transaction_id) REFERENCES transactions (id);
ALTER TABLE payments ADD CONSTRAINT payments_transfer_id_foreign FOREIGN KEY (transfer_id) REFERENCES transfers (id);
ALTER TABLE payouts ADD CONSTRAINT payouts_batch_fund_transfer_id_foreign FOREIGN KEY (batch_fund_transfer_id) REFERENCES daily_settlements (id);
ALTER TABLE payouts ADD CONSTRAINT payouts_batch_settlement_id_foreign FOREIGN KEY (batch_settlement_id) REFERENCES daily_settlements (id);
ALTER TABLE payouts ADD CONSTRAINT payouts_customer_id_foreign FOREIGN KEY (customer_id) REFERENCES customers (id);
ALTER TABLE payouts ADD CONSTRAINT payouts_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE payouts ADD CONSTRAINT payouts_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE payouts ADD CONSTRAINT payouts_transaction_id_foreign FOREIGN KEY (transaction_id) REFERENCES transactions (id);
ALTER TABLE paytm ADD CONSTRAINT paytm_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE plans ADD CONSTRAINT plans_item_id_foreign FOREIGN KEY (item_id) REFERENCES items (id);
ALTER TABLE plans ADD CONSTRAINT plans_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE promotions ADD CONSTRAINT promotions_schedule_id_foreign FOREIGN KEY (schedule_id) REFERENCES schedules (id);
ALTER TABLE qr_code ADD CONSTRAINT qr_code_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE refunds ADD CONSTRAINT refunds_batch_fund_transfer_id_foreign FOREIGN KEY (batch_fund_transfer_id) REFERENCES daily_settlements (id);
ALTER TABLE refunds ADD CONSTRAINT refunds_batch_id_foreign FOREIGN KEY (batch_id) REFERENCES batches (id);
ALTER TABLE refunds ADD CONSTRAINT refunds_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE refunds ADD CONSTRAINT refunds_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE refunds ADD CONSTRAINT refunds_transaction_id_foreign FOREIGN KEY (transaction_id) REFERENCES transactions (id);
ALTER TABLE reports ADD CONSTRAINT report_file_id_foreign FOREIGN KEY (file_id) REFERENCES files (id);
ALTER TABLE reports ADD CONSTRAINT reports_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE reversals ADD CONSTRAINT reversals_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE reversals ADD CONSTRAINT reversals_transaction_id_foreign FOREIGN KEY (transaction_id) REFERENCES transactions (id);
ALTER TABLE reversals ADD CONSTRAINT reversals_transfer_id_foreign FOREIGN KEY (transfer_id) REFERENCES transfers (id);
ALTER TABLE risk ADD CONSTRAINT risk_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE risk ADD CONSTRAINT risk_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE sbiepay ADD CONSTRAINT sbiepay_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE schedule_tasks ADD CONSTRAINT schedule_tasks_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE schedule_tasks ADD CONSTRAINT schedule_tasks_schedule_id_foreign FOREIGN KEY (schedule_id) REFERENCES schedules (id);
ALTER TABLE schedules ADD CONSTRAINT schedules_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE settlement_details ADD CONSTRAINT settlement_details_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE settlement_details ADD CONSTRAINT settlement_details_settlement_id_foreign FOREIGN KEY (settlement_id) REFERENCES settlements (id);
ALTER TABLE settlements ADD CONSTRAINT settlements_bank_account_id_foreign FOREIGN KEY (bank_account_id) REFERENCES bank_accounts (id);
ALTER TABLE settlements ADD CONSTRAINT settlements_batch_fund_transfer_id_foreign FOREIGN KEY (batch_fund_transfer_id) REFERENCES daily_settlements (id);
ALTER TABLE settlements ADD CONSTRAINT settlements_batch_settlement_id_foreign FOREIGN KEY (batch_settlement_id) REFERENCES daily_settlements (id);
ALTER TABLE settlements ADD CONSTRAINT settlements_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE settlements ADD CONSTRAINT settlements_transaction_id_foreign FOREIGN KEY (transaction_id) REFERENCES transactions (id);
ALTER TABLE subscriptions ADD CONSTRAINT subscriptions_customer_id_foreign FOREIGN KEY (customer_id) REFERENCES customers (id);
ALTER TABLE subscriptions ADD CONSTRAINT subscriptions_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE subscriptions ADD CONSTRAINT subscriptions_plan_id_foreign FOREIGN KEY (plan_id) REFERENCES plans (id);
ALTER TABLE subscriptions ADD CONSTRAINT subscriptions_schedule_id_foreign FOREIGN KEY (schedule_id) REFERENCES schedules (id);
ALTER TABLE subscriptions ADD CONSTRAINT subscriptions_token_id_foreign FOREIGN KEY (token_id) REFERENCES tokens (id);
ALTER TABLE tagging_tags ADD CONSTRAINT tagging_tags_tag_group_id_foreign FOREIGN KEY (tag_group_id) REFERENCES tagging_tag_groups (id);
ALTER TABLE tax_groups ADD CONSTRAINT tax_groups_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE taxes ADD CONSTRAINT taxes_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE terminals ADD CONSTRAINT terminals_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE terminal_analytics ADD CONSTRAINT terminal_analytics_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE terminal_analytics ADD CONSTRAINT terminal_analytics_terminal_id_foreign FOREIGN KEY (terminal_id) REFERENCES terminals (id);
ALTER TABLE tokens ADD CONSTRAINT token_terminal_id_foreign FOREIGN KEY (terminal_id) REFERENCES terminals (id);
ALTER TABLE tokens ADD CONSTRAINT tokens_card_id_foreign FOREIGN KEY (card_id) REFERENCES cards (id);
ALTER TABLE tokens ADD CONSTRAINT tokens_customer_id_foreign FOREIGN KEY (customer_id) REFERENCES customers (id);
ALTER TABLE tokens ADD CONSTRAINT tokens_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE transactions ADD CONSTRAINT transactions_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE transactions ADD CONSTRAINT transactions_settlement_id_foreign FOREIGN KEY (settlement_id) REFERENCES settlements (id);
ALTER TABLE transfers ADD CONSTRAINT transfers_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE transfers ADD CONSTRAINT transfers_recipient_settlement_id_foreign FOREIGN KEY (recipient_settlement_id) REFERENCES settlements (id);
ALTER TABLE transfers ADD CONSTRAINT transfers_transaction_id_foreign FOREIGN KEY (transaction_id) REFERENCES transactions (id);
ALTER TABLE upi ADD CONSTRAINT upi_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE virtual_accounts ADD CONSTRAINT virtual_accounts_bank_account_id_foreign FOREIGN KEY (bank_account_id) REFERENCES bank_accounts (id);
ALTER TABLE virtual_accounts ADD CONSTRAINT virtual_accounts_customer_id_foreign FOREIGN KEY (customer_id) REFERENCES customers (id);
ALTER TABLE virtual_accounts ADD CONSTRAINT virtual_accounts_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
ALTER TABLE virtual_accounts ADD CONSTRAINT virtual_accounts_qr_code_id_foreign FOREIGN KEY (qr_code_id) REFERENCES qr_code (id);
ALTER TABLE vpa ADD CONSTRAINT vpa_bank_account_id_foreign FOREIGN KEY (bank_account_id) REFERENCES bank_accounts (id);
ALTER TABLE vpa ADD CONSTRAINT vpa_customer_id_foreign FOREIGN KEY (customer_id) REFERENCES customers (id);
ALTER TABLE wallet ADD CONSTRAINT wallet_payment_id_foreign FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE webhooks ADD CONSTRAINT webhooks_merchant_id_foreign FOREIGN KEY (merchant_id) REFERENCES merchants (id);
SET SESSION foreign_key_checks = 1;

ALTER TABLE hitachi
    ADD COLUMN authentication_gateway CHAR(64) DEFAULT NULL AFTER acquirer

# Payment link - currency nullable
ALTER TABLE payment_links
    MODIFY COLUMN currency VARCHAR(3) DEFAULT NULL;

ALTER TABLE payment_links
    ADD COLUMN hosted_template_id VARCHAR(255) DEFAULT NULL AFTER notes,
    ADD COLUMN udf_jsonschema_id VARCHAR(255) DEFAULT NULL AFTER hosted_template_id;

ALTER TABLE payments
    CHANGE reference10 verify_at INTEGER UNSIGNED DEFAULT NULL,
    ALGORITHM=INPLACE, LOCK=NONE;

ALTER TABLE batches
    ADD INDEX batches_subtype_index (`sub_type`);

ALTER TABLE merchants
    ADD COLUMN fee_credits_threshold BIGINT UNSIGNED AFTER fee_model

ALTER table offers
    ADD COLUMN emi_subvention tinyint DEFAULT NULL AFTER flat_cashback,
    ADD COLUMN emi_durations varchar(255) DEFAULT NULL AFTER emi_subvention;

ALTER table gateway_rules
    ADD COLUMN recurring_type varchar(255) DEFAULT NULL AFTER recurring;

ALTER TABLE refunds
    ADD COLUMN error_code VARCHAR(128) DEFAULT NULL AFTER status,
    ADD COLUMN internal_error_code VARCHAR(255) DEFAULT NULL AFTER error_code,
    ADD COLUMN error_description VARCHAR(255) DEFAULT NULL AFTER internal_error_code,
    ADD COLUMN gateway VARCHAR(255) DEFAULT NULL AFTER error_description,
    ADD COLUMN reference3 TINYINT(1) NULL AFTER reference2,
    ADD COLUMN reference4 TINYINT(1) NULL AFTER reference3,
    ADD COLUMN reference5 INT(11) DEFAULT NULL AFTER reference4,
    ADD COLUMN reference6 INT(11) DEFAULT NULL AFTER reference5,
    ADD COLUMN reference7 VARCHAR(255) DEFAULT NULL AFTER reference6,
    ADD COLUMN reference8 VARCHAR(255) DEFAULT NULL AFTER reference7,
    ADD COLUMN reference9 BIGINT UNSIGNED DEFAULT NULL AFTER reference8;

ALTER TABLE refunds
    ADD COLUMN reversal_id CHAR(14) DEFAULT NULL AFTER reference9,
    ADD COLUMN reference10 CHAR(14) DEFAULT NULL AFTER reversal_id,
    ADD COLUMN reference11 CHAR(14) DEFAULT NULL AFTER reference10,
    ADD COLUMN reference12 VARCHAR(255) DEFAULT NULL AFTER reference11;

ALTER TABLE refunds
    CHANGE reference8 bank_account_id VARCHAR(255) DEFAULT NULL,
    ALGORITHM=INPLACE, LOCK=NONE;

ALTER TABLE merchants
    ADD COLUMN display_name VARCHAR(255) DEFAULT NULL AFTER billing_label;

ALTER TABLE tokens
    ADD COLUMN aadhaar_vid VARCHAR(255) DEFAULT NULL AFTER aadhaar_number;

ALTER TABLE payments
    CHANGE reference11 refund_at INTEGER UNSIGNED DEFAULT NULL,
    ALGORITHM=INPLACE, LOCK=NONE;

ALTER TABLE payments
    CHANGE service_tax mdr INTEGER UNSIGNED DEFAULT NULL,
    ALGORITHM=INPLACE, LOCK=NONE;

ALTER TABLE transactions
    CHANGE service_tax mdr INTEGER UNSIGNED DEFAULT NULL,
    ALGORITHM=INPLACE, LOCK=NONE;

ALTER TABLE bank_transfers
    ADD COLUMN gateway VARCHAR(255) DEFAULT NULL AFTER virtual_account_id;

ALTER TABLE invoices
    ADD COLUMN internal_ref VARCHAR(64) DEFAULT NULL AFTER CALLBACK_METHOD,
    ADD INDEX invoices_internal_ref_merchant_id_index (internal_ref, merchant_id);

ALTER TABLE refunds
    ADD INDEX `refunds_gateway_index` (`gateway`);

ALTER TABLE subscriptions
    ADD COLUMN current_payment_id CHAR(14) DEFAULT NULL AFTER token_id,
    ADD COLUMN current_invoice_id CHAR(14) DEFAULT NULL AFTER current_payment_id,
    ADD COLUMN current_invoice_amount INTEGER UNSIGNED DEFAULT NULL AFTER current_invoice_id,
    ADD COLUMN issued_invoices_count INTEGER DEFAULT 0 AFTER paid_count;

ALTER TABLE atom
    ADD COLUMN `date` INTEGER DEFAULT NULL AFTER callback_data;

# Nodal beneficiary schema changes
ALTER TABLE nodal_beneficiaries
    DROP COLUMN status,
    DROP COLUMN nodal_bank,
    ADD COLUMN channel VARCHAR(8) NOT NULL AFTER bank_account_id,
    ADD COLUMN registration_status VARCHAR(40) NULL AFTER channel,
    ADD INDEX nodal_beneficiaries_channel_index(channel),
    ADD INDEX nodal_beneficiaries_merchant_id_index(merchant_id),
    ADD INDEX nodal_beneficiaries_registration_status_index(registration_status),
    ADD UNIQUE nodal_beneficiaries_bank_account_id_channel_unique(bank_account_id, channel);

ALTER TABLE users
    ADD COLUMN password_reset_token VARCHAR(255) DEFAULT NULL AFTER confirm_token,
    ADD COLUMN password_reset_expiry INTEGER UNSIGNED DEFAULT NULL AFTER password_reset_token;

ALTER TABLE tokens
    ADD COLUMN account_type VARCHAR(255) DEFAULT NULL AFTER account_number;

ALTER TABLE subscriptions
    ADD COLUMN global_customer TINYINT(1) DEFAULT 1 AFTER customer_id;

-- For M021
update tokens
set recurring_failure_reason="Payment processing failed due to error at bank or wallet gateway"
where id in
("AJBiRiu7tRqGta", "AJJ6EWZ3G8SRaN", "AKlYO3tVGdkv63", "ASgtYovDs0pFQ9", "ASlnLdh6nmJtxD", "AXu1dhOwaTIe2F", "AXvFUqofZQfXpS", "AXvU9gUQXBErJL", "AXwPZVoZzrNHMh", "AZ5gkHeNOPrzN1", "AaBsTjV2n9x7Ie", "AaCRiKF0D6Wj9E", "AaGQgh5qp3ZNox", "AaGh7H1u9xUTiQ", "AaI8jcFPf1B7ei");

-- For M025
update tokens
set recurring_failure_reason="Payment processing failed due to error at bank or wallet gateway"
where id in
( "ANuO7gt4V61AM5", "AT5gSn7iNGZuv5");

-- For M093
update tokens
set recurring_failure_reason="EMandate aadhaar not mapped"
where id in
("ACSOrXpEraKmsf", "ACVTweuRA5mI9D", "ACVlwYTaHkFfs4", "ACWIEyXXXOnagX", "ACWuCxfeRBOOIA", "ACX2c7oFIfOjWr", "ACX914czS8CrhX", "ACaBo4S1bvj0p6", "AEnWwRuUsDcqY6", "AEnkVUoklTMK20", "AEoYXaIe1qYVAl", "AEoedsf4Iyl0oS", "AEpmJFUJBdriF5", "AEqOUMnZrlu4HS", "AEs2cloUJITFke", "AEtcNCoBtN5UJA", "AEv0STAz0EIgit", "AExlMhgXBXUDGY", "AEz0JTCCgicUx1", "AF2323ly5em2GY", "AF2cSFDoeT2nzF", "AFDmba1AKVte73", "AFGX3qv1xTxeS8", "AFHH42A1dWM1Ab", "AFHugtTudFeLiG", "AFIYwenFh6mbTr", "AFIf8cdy0ehLJy", "AFJx8fUGWV3WDm", "AFKbScoqk9qrkY", "AFL9AfKVpxJ0Lk", "AFQWd7UbN987A0", "AFbbm5uXBhJRr0", "AFbdaLvVhirMX4", "AFdQRhbuTRgVN1", "AFfhsBTYmMrmTj", "AFhZXEibKjwF0A", "AG2N8udro4UVTH", "AG3XFsA2GjNW7r", "AG4UE6asdOjOLi", "AG65Eey3iDyqru", "AG75byVuJqD73o", "AGBVXo2QZvJF3k", "AGOvWihQXEE9Xr", "AGR7wmubEatZpF", "AGRgS1yHMOlyh4", "AGUEhanPFehERa", "AGWKKWqU3oNrhi", "AGYzAdh01vA3q0", "AGmflZKNSuWp7q", "AGnniHLsLAuNkV", "AGnnsZdLyK81ds", "AGpQhTMAqsOyM1", "AGpjSvHby4tYWh", "AGpqjy6OhDio1h", "AGtoW8yrnLANy2", "AGuvIksaN1076b", "AGvbSm1CVAmkWT", "AGwWqBySwyGMGG", "AHBmr15YR8YsjL", "AHCBOKrnXhSE90", "AHCCZUJLfUdVs2", "AHDC1gwx6Mjf4l", "AHE6SMlGW6A5C9", "AHERxTRLra8mL1", "AHFA9WWa8u5qA4", "AHFoe3JnMPblmY", "AHFuKeQDTkBNKl", "AHJEMIhAz0pQdl", "AHORt57yeH3ssP", "AHWx512Qku4RSi", "AHZEyzBmv03Ic1", "AHZyrFrWeWx7W1", "AHaGiDvtqgxfIq", "AHb8eqYg9Qx7U4", "AHbVJq10G6MDif", "AHcytDQZlIG2nn", "AHeN2DqFqky6Mm", "AHefD7R3dGsFyu", "AHekpOxsezIdX8", "AHg1lTy58R2CMJ", "AHgGhWlR0q0ZEr", "AHgPxOY4ReEOvy", "AHi3hbxccFjn0v", "AHiI6Rr2wtvDFi", "AHiptjlM99ka1d", "AHlsmQI1EaNeF7", "AHmmrb2dlkDOUX", "AHt1qmzvzAjUOi", "AHuokvrk22RBNO", "AHvV8NeJPwDQw9", "AHy9wGifWJHzj3", "AHzWTwzWv6pUmJ", "AI00NLni1nBxgX", "AI0F7vKnTxqb3w", "AI0IY7K3CRy7jZ", "AI0nGtD5jhomvF", "AI0r4TOmYfno8s", "AI14uI449sDDAA", "AI1xQ0zt9qwbNk", "AI4CfVShBXrgV0", "AI4EfyRI0jthsD", "AI57rQWZEWjvTE", "AI6DyWESVqIG3y", "AI6V4nEpZjwcnG", "AIKnYVngKd1w5z", "AILCZJzew5CryQ", "AIN4cXlmiXkYI0", "AINLTzVN7c9PBN", "AIOIvtnxd2d27Z", "AIOSKyhSBcLP4W", "AIOuIy7WQTaSMR", "AIQmYxZdIt7gl6", "AIRkyQguY9xLeL", "AIRtMwZVYGxIOy", "AIS4WUBd0vIEJh", "AITs7X7DATtTAj", "AIWDiKM4eKBsqE", "AIf0LmDZz5J5Ae", "AImNqSuv8oUGke", "AInWbSzyjqvCbL", "AIsnBGjSnz7ywo", "AIswXRWQ1zksSc", "AItAOj1OvQFLHO");

-- For M092
update tokens
set recurring_failure_reason="Payment processing failed due to error at bank or wallet gateway"
where id in
("AI2bvqvh5I5Mtd", "AJI5G65jW6kTLJ", "AJekJkcJygSMHF", "ALJM1BIqSRblav", "ALeGgv4NDYZEpA", "ANBavR0jfQRxkQ", "ANWobdOcKD7osc", "AP89l1gwmAbukm", "APW7YPjmci1Bjd", "APWDTcCGl8IFRw", "APWXiwG3ArjeMG", "APWYGI0HlUW7dH", "APaNdjvmq1CI8K", "APxBYllBn8Rmca", "APy3k5mBACDoG4", "AXSnNp1TqZYVJu", "AYM4wNaU32NpUT", "AYdhBODbajU2BS", "AaIe5hw3zzSypk", "AahZjwlgWUviHR", "AbPcunnvrViRuR", "AcJPxAUIKymyut", "AffdnMZV3cd8JC", "AfjOgm9pw5i0fi", "AfjcYgHxzbZQLb", "AflSsSqbfEspOm", "AfnCHpIoUiOzBi", "AfnXkyAGTormO2", "AfpZK8RRf2Ck5K", "AfvcXWA3UpgGmx", "Afvda1la02xau9", "Afvdx6UbIpY4oB", "AfvmNYmX4myVt0", "AfvofOM2R3rXo0", "AfvykA9F5VZ1Ty", "Afw8PP79xfunxh", "AfwEaQyh4gkK7V", "AfwIMDOZLyDdBu", "AfwQG6lHB3axjM", "AfyKVUSPiir3vD", "Afyc1d9nSRki4f", "Ag12n2KybPV069", "Ag1oqMCflKPxF2", "Ag3uTzwCTGJc03", "Ag459rN6ppm31t", "Ag5iOmTBwVdKAL", "Ag6XKoG351RxOS", "Ag7DDCpcQHLoto", "Ag7W8ReZUTMOm2", "Ag8xqmUoYs3azM", "Ag9ALROVPn5LJZ", "Ag9B7M6m2PDBSQ", "Ag9ESlf8oPswMM", "Ag9k4BeTeACWuj", "Ag9rJgZbjPWu9k", "AgA6VKC9pxpp27", "AgA8SLC3oNHc3f", "AgBZGIlZJ2eHFK", "AgBfeK68Fex0Lg", "AgC4HTzfnAwAjv", "AgFYMsu2q1pmfD", "AgFYTLENIwx341", "AgG6Sz7hYtrQKN", "AgG7BDiySr1g4B", "AgGgqTaXbIV8s3", "AgHHb4Gf0e6LN5", "AgHL3yuoy9rxpq", "AgHVtZvRURawB4", "AgHZGM5LKSuS0y", "AgIcdajE4nh3eZ", "AgJbNZVbYqSXIV");

-- For M055
update tokens
set recurring_failure_reason="Payment failed because account withdrawal are frozen"
where id in
("9z0eH2sHwiifM0", "ATYlxN3qf7qj8t", "ATsNMdsEAw0p4G", "AUfXV7c2UbsPfG", "AUfoNA1rIfhKB7", "AVuKphpur1TBIZ", "AWi5OMWecYkxuw", "AX3ndYr209YOhg", "AX4RMVsR0h51Yr", "AX8Siw2jmGMOeM", "AXufDKT7bo4Alw", "AXusmNM1O0Q6u3", "AXxSdKtcBezQe8", "AYFdrpPpVp2Os2");

-- For M038
update tokens
set recurring_failure_reason="Payment failed because of invalid account"
where id in
("ACPu8WNq26HJb2", "ACW6ceGPvZkjpu", "AEoHrHrBdREuGl", "AEtGPTGo2GwHQ8", "AFDGd6vBhdfTYe", "AFGsN5KmsmpQvp", "AFGwzUuMmDlHd8", "AFaa1lCTyEJ6mK", "AG4Uv4eaIg75i6", "AGPYkKaR0fxZFv", "AGTi4iuNkOlJj7", "AGmoHphASGfoAl", "AHKmSdnwtW4KUG", "AHZth0L6bAx5bo", "AHf9SceGhpP5Kw", "AHfkRyZBcIQJXe", "AHfwOEwFXxCVpe", "AHfz9HrgoyLY0o", "AI11jsrLh8pxK1", "AI2ukCS7iyRqhq", "AI7NDU5Y8T2f9h", "AIBFRCLJcJCiwm", "AIRGQO89mZEko9", "AITbULmHZujoq1", "AIbVzAAyvID8fZ", "AIsBtor8b0VolG");

-- For M091
update tokens
set recurring_failure_reason="Payment processing failed due to error at bank or wallet gateway"
where id in
("ACSaVCnd7fcPmp", "AF0BeDJAR4ikdm", "AG2MKBa3tuU7Yp", "AG3PlauxxwUpQ4", "AGnYyJw2xaxj6a", "AGojEY4lm4VeEe", "AHGNMCGFvUqSil", "AHhFiyH9N9cXVW", "AHhPsS0nm6dIIK", "AHhvqnhHMunNIO", "AISCogQ96cbyfa", "AISdoXCDXTqabR", "AIT3dwoFSmyMAt", "AIuXe82Z8TwRai", "AJDsKgVniEbWQe", "AJeMIa2FoweenZ", "AJxxgoSTic15Vj", "AK45Lj9sAOuq87", "AK4Enitnqd6jq8", "AKOTTWGZ1VZ5Ps", "AKVzx9sCb5bmgp", "ANAPTl8aHjeA74", "ANAZ1N8F8CmtYD", "ANAecbN17syrMP", "ANAq0NMGSjVVeW", "ANB6y9FhLCAACe", "ANBC6qN5n5pLf0", "ANBE9o3VRGnZ5w", "ANBFlZGTlXGlOf", "ANBQfYM0jq8IK8", "ANBephSQ4EZTgp", "ANBhzch4MT4ftg", "ANBoxgVzIdcZ1v", "ANBqchYSxZVkQI", "ANBtROLCmxNswF", "ANBxuLUXsPTM5Q", "ANCCzkyeTAvP7G", "ANCG1HLb629WsH", "ANCMXMoctzzX72", "ANCPILQPTLS7lM", "ANCVxQufB4GrQE", "ANCaIJcJeSUKtl", "ANCcJjwI2MBhBA", "ANClCoPc8CLrlx", "ANCliSx21fB4UJ", "ANCx5ObKlRiZIX", "ANCxViyXL4EKZx", "AND2McTLKz3mKl", "ANDAaGGS7V2zBr", "ANDUpdC1eOn0Mr", "ANDYUhFJD9zDGU", "ANDfZCmx2hzIzx", "ANDvgQjzgcXL7m", "ANEKFrfFcMoGpu", "ANEOeHfy8xJAIa", "ANEhcdrNGtNYDa", "ANEnVHkMNhos04", "ANExJWcGDjOfv8", "ANF57ngyYMj9in", "ANFUxEAy8VgwTQ", "ANFcVw6upRDJo0", "ANFsD0DFGn3dtK", "ANFt1OnHSag0Q8", "ANFuRFdzTSOx8W", "ANG4JnnRMC1gHs", "ANGniD5jtVNdDX", "ANGzNOJd7FZ7iz", "ANH0bXQsdPuyES", "ANHTbUzhmS0MBX", "ANIQhmBSRh5xxg", "ANK72ayUHjzeGO", "ANKw5Lb2gVUZhv", "ANSb9oiXCSqYN0", "ANZc9R2oxrHgwa", "ANZk0GyrItkzwt", "ANaZdVoYRtc7nJ", "ANcrZ6ayS0gm4R", "ANe6qES2xJAtlN", "ANeIK6iGjxDugT", "ANeYCQluOXwCeJ", "ANenSsMTkvoslY", "ANevd3SDTZwDXW", "ANeyTWt8ECrpT8", "ANf4D7kwCQtX1E", "ANfSVWGXFryDZ4", "ANfm5nxsxuKtNW", "ANftBxHczDkJeI", "ANfu8J5hY0WCbX", "ANfx5VK4BZLC4P", "ANg65KAYl0z1Ir", "ANgHhQvdMTpbQm", "ANgJrEeU8oRHp5", "ANgMozGlIB61Xr", "ANgm8H9FrhIDH3", "ANh0RFKvpFyLSf", "ANhnoOi9zstodJ", "ANk8Fj6yTblDwU", "ANmnRmW0h7tCVn", "ANqz3LzpBHvwIO", "ANtM3WGQ26OcFI", "ANtPbl1WWcnmFD", "ANtSqmd3aZFXeO", "ANuCaPTMARSxqJ", "ANuW9EHw74rKmX", "ANujJvs3XoVOxv", "ANv0FjWF16kk1Y", "ANvPP6u3t3oDee", "ANvTiaiVClBboV", "ANvml7IcqwfVyc", "ANw1cLRcWQ9ESn", "ANwFNRIe6QhWSF", "ANwIq04yH9YtmZ", "ANwgDaxDaUqjid", "ANwhxqpNhrpRtl", "ANwsmjak7thDFh", "ANwspbyBLoufWh", "ANx3zefSoil0jG", "ANxAyJYg5dgtBY", "ANxo1N4CXITI1C", "ANxoAyly8W2Dss", "ANy2h6hYTKvK5i", "ANy4X6WrETllwq", "ANy5BK0loU8bIh", "ANyhIyeXW7UIGa", "ANyirbUToODoc7", "ANynOCyKc4F8dB", "ANz1kZGhDuMocW", "ANz2BnIzixCnC9", "ANz9TnkRfw1AjE", "ANzMLVbbdnwbuR", "ANzP2MoaDX2gF5", "ANzS8iVw3gFYL7", "AO03eRuz00MIxP", "AO0Hzw5OBxzKRr", "AO0YaReVfAUoHu", "AO0sxuHngMwIA3", "AO1DeMYNVTeczH", "AO1KLf3FVgvz8G", "AO1X0fjmPNpyb7", "AO1Z6PA3GpKS7u", "AO1b598xIW4Kmf", "AO2PLfX5pB0XmL", "AO5TnFWIJDfNhV", "AO5VsKQt27TMdC", "AO5XoDfoEGn6h1", "AO80W8c0h4V6Lg", "AO8EsLJhkeRo2v", "AO8VP9b4u5MwLU", "AOFMM1qntIdILP", "AOGrGQfI4ikefv", "AOHUuQXiskKVDm", "AOHgv4mCvLpAYN", "AOHjA1buhp2TvL", "AOI4K3V6yVy1lQ", "AOII6tIa6wZz99", "AOIJ9cBHt9BlW4", "AOItq0vq6ZIjfM", "AOJ0uwS5d4JwR9", "AOKGWxrDAZlmOI", "AOKR84li7J5Fdm", "AOKcUiPd6fn4R2", "AOKdbRsyQGhBYx", "AOKoVxFAzrfN9B", "AOL6CgL18ey1Ql", "AOLRsYJOrFhgam", "AOLfU8t35i8AQW", "AOLm8S0EuOg4i1", "AOM56ePZIHnIFT", "AOMVihzxmKiG9O", "AOOMCgYBQjTFjU", "AOOnntwapAaR4Z", "AOOwZ9xnSqc2Ph", "AOOy7vz2o06uRH", "AOP58820T049jD", "AOPOGLeFTbyBfz", "AOPcQwuPfYXkl8", "AOPo1hKEDnLmxm", "AOR6VTz6Ne2hwg", "AOREN2C5MQJqtX", "AORbC0qU9QGjwq", "AOS1RhdcK1RxGJ", "AOT3c7VNmuP8TG", "AOU9TkdPKYyLq8", "AOUvb7rU2pSDAC", "AOVvBBTr5QyscJ", "AOVxHQxBQP0Lk4", "AOVzJMHSl1VZyU", "AOYBtCTMZfurBq", "AOZlOa10vaV0qr", "AOdZs4eWNqTSew", "AOgDewSRold7F8", "AOhMckORWXpQKl", "AOhfSSQW5wUuOF", "AOhi3iMhDTufJn", "AOhkh22D7gtbSZ", "AOhojLMaCbWf8d", "AOhtuyig6BeDHk", "AOi2CMyQM5evJG", "AOi9DbpGu4B3X2", "AOiGZi4LISgNVK", "AOiGxMjgHVLO8T", "AOiMmoskC7Y9uy", "AOiNKmLvzU9dQz", "AOiNzGeFn6Siua", "AOiZw2AHzx4ScG", "AOitTzp4lzNKc8", "AOjDG3WSWbSi40", "AOjDwkJaWZeVTb", "AOjMeIr1fl2Gun", "AOjP7RtypiygDM", "AOjWPVdQMYbnjq", "AOja75CUszRdAC", "AOjf3psBhWu1xX", "AOjgZbWsHFFWOO", "AOjoIT72dYwRyq", "AOjtqyycJPsAz0", "AOkC1gBtq2Hyzb", "AOkCGG9NqDULsQ", "AOkhizHnY2idBX", "AOki5zmahuqjA7", "AOkw5CsQRzE2jQ", "AOl6mltQ5n7hHI", "AOlOr7ek25y2sl", "AOlow40c3NBZSy", "AOlsxh0cAYcb0t", "AOm8yAq64Mn3ga", "AOmFHG1CgBIaM9", "AOmO9b4ONCVKIR", "AOmQaQpIdW2RmF", "AOmWVR7MuX0o6D", "AOmXsv9wo4DYET", "AOmZgJBP1ujroV", "AOmceguKT0lCdL", "AOmtMPhW6uCjU5", "AOmzcK7oMdXJDM", "AOn1nHCC4fyPYY", "AOnKNW5yzPgjzi", "AOnM83EAxmsnhh", "AOnNhlA4BLOJkd", "AOnW0lA48uyBRY", "AOnWgyF5yG1FvE", "AOnX55JXdS8iKR", "AOnbirXzI9zGLr", "AOnwY9j9yIzLgm", "AOnxwREOSkXXp1", "AOoFZOBzuTERqO", "AOoFdZtGlOTqWO", "AOoXt8KaMAcJjF", "AOobrVo4s2v6iC", "AOomkPiisQcH5g", "AOopKieNLGoBTi", "AOp66bZRFmG6Ye", "AOp9BaRnxKlzvL", "AOp9hSddTi2wE6", "AOpbbUgKfnxOye", "AOpf5MtjKqmKvx", "AOpyNtdV4Y36go", "AOqPod8iGtTRs7", "AOqcTkGIV1GI80", "AOqxPRJQQpfeor", "AOrMRPgkLjvdG3", "AOrXtMicrEqL85", "AOrcLF51U20Kpz", "AOrq7QmryQ5NGV", "AOrwAolYXWSjEQ", "AOs9zObXaFDSDe", "AOsRhcfswe6sG8", "AOtIO6PvyTnDeu", "AOtUKM4RzeKAHI", "AP4adAcFtasgjE", "AP6LjUWQZKq2Ob", "AP7cHnIFhZhRsG", "AP7kj4ZNsjmQ6V", "APBqtc5DJHvYzI", "APD669mJYmBJJI", "APEBwMypGhwdJ2", "APH0BDePAtsYxp", "APVrgKZnx1R4Pm", "APcawD1f7Tq9B9", "APx7FPeb0JC63I", "AQ0c8nZ0xq3PPN", "AQ1D3901IY5LdC", "AQGUrNXsKTVZKh", "AQHkJcmKTYp55d", "AQLDVgCe17kgHX", "AQLpZG7LwyPbZR", "AQMQmp2mLcZLOe", "AQMeLj63yyHUeG", "AQMeqDhUfkWIRN", "AQPIPgCNVRRXuu", "AQPxBXWIYRgnhL", "AQQImNpK5nkgYO", "AQRSm9q5ZmWgYR", "AQRZwiC1nEoevk", "AQTXDYYoP1O5Iu", "AQi3As76ZFcwS6", "AQlCDLtatQQHnn", "AQm0gqinuKD0Gy", "AQm2zUvIzUN8OO", "AQoBh82Q2zGAp8", "AQp9sZQvzbhLMc", "AQs5BI3QwxPRPH", "AR4ohs8JkBFpgf", "AR8QsZekAITPIB", "AR9TshPf8Vyr8x", "ARALTGP5IgV2tN", "ARCRZXDwGd6r9w", "ARFOkgWGXEL1cy");

-- For M090
update tokens
set recurring_failure_reason="EMandate aadhaar not mapped"
where id in
("ACTTO4CxqLhDjN", "ACTyQH0SOusl8m", "ACZfZS2JUmvNzm", "AFGROMb6kz26Rt", "AFOUDJNsBr0IoH", "AFlgcITsrSptCX", "AG1PZXvgPDWzgA", "AGN93dhXsuTtmn", "AGNndtTg6qbuBV", "AGolVCHIWUsy0M", "AGr5PUbY8eZS44", "AHHM55Kbd0rSLI", "AHXBdN6wCj8BTH", "AHXgEVThGB6p06", "AHisGTPlK3yrcU", "AHl432ncIx9wja", "AI2vOdk4u8QI5I", "AI5V3EgKbOrPnS", "AIR8kMtn8xlCn0");

-- For M057
update tokens
set recurring_failure_reason="The account holder name is invalid"
where id in
("ACaICOw7Xri2bY", "AGUl8GlEAT7RxI", "AGtQVzHgX4twWA", "AHGHoEiV0ORJ10", "AHX6FOqgWkLGYu", "AHd22ziAp0j2Fv", "AHgcehiJ8rMCrx", "AHi8TtmJv9f3ow", "AHizvVCWs8VCDi", "AHjAHRbgEWat0L", "AI5920faYnBDEB", "AI74yAUD8PkPin");

-- For M089
update tokens
set recurring_failure_reason="Payment processing failed due to error at bank or wallet gateway"
where id in
("AEuAJPeFRHOoNF", "AKfW7ygPvTZgDO", "ANHX4vkSxgt7Pn", "ARpv0XEvJXNt78", "AaYLPyfs3pwVi7", "Afwjqk0N3YiLig", "Ag8AW3XjoPEkjI", "Ag8ExxLZVeCRpT");

-- For M026
update tokens
set recurring_failure_reason="Payment failed because account withdrawal are frozen"
where id in
("AExZS9nM3kmDZg");

-- For M088
update tokens
set recurring_failure_reason="Payment processing failed due to error at bank or wallet gateway"
where id in
("AHZdtvGcSulRqm", "AISx6h5azlYs61", "AJfNye5l4dDcIt", "AMTwwn0Z1r341W", "AMlXGnmO0Gr4kW", "ARTy3mpgIufEBl", "ASifriEZ6BPn8j", "ASmXwXJauhAjnE", "AUHgMuMnTSS6IR", "AUdK72zU2UEu7b", "AUetQbYDbq5zLY", "AUifq3M2Rs42WF", "AVjVOv79nTk8E7", "AX3dLycR3faf8V", "AXCWgwjnqkaz6u", "AXS5LOMvSoMOKn");

-- For M034
update tokens
set recurring_failure_reason="Payment failed because account limit exceeded"
where id in
("AX8axVc1Sh8uga", "AZq9Gx5YhyTi8k", "AaJOx3z5PzXSSi", "AbSIf1IMHbqDQ8", "AdiimIYloqhGt5", "AeWUW1Qa3rHZvn");

ALTER TABLE terminals
ADD COLUMN bank_transfer TINYINT(1) NOT NULL DEFAULT 0 AFTER upi;

ALTER TABLE terminals
    ADD COLUMN enabled_banks json DEFAULT NULL AFTER network_category;

ALTER TABLE terminals
    ADD COLUMN account_number varchar(50) DEFAULT NULL AFTER enabled_banks;

# adds dummy columns to transactions
ALTER TABLE transactions
    ADD COLUMN reference1 VARCHAR(255) DEFAULT NULL AFTER reconciled_at,
    ADD COLUMN reference2 CHAR(14) DEFAULT NULL AFTER reference1,
    ADD COLUMN reference3 CHAR(14) DEFAULT NULL AFTER reference2,
    ADD COLUMN reference4 CHAR(14) DEFAULT NULL AFTER reference3,
    ADD COLUMN reference5 TINYINT(1) NULL AFTER reference4,
    ADD COLUMN reference6 TINYINT(1) NULL AFTER reference5,
    ADD COLUMN reference7 BIGINT UNSIGNED NULL AFTER reference6,
    ADD COLUMN reference8 BIGINT UNSIGNED NULL AFTER reference7,
    ADD COLUMN reference9 BIGINT UNSIGNED NULL AFTER reference8,
    ADD COLUMN reference10 BIGINT UNSIGNED DEFAULT NULL AFTER reference9,
    ADD INDEX transactions_settled_channel_on_hold_merchant_id_index (settled, channel, on_hold, merchant_id),
    DROP INDEX transactions_settled_channel_on_hold_index;

ALTER TABLE subscriptions
    ADD COLUMN customer_email VARCHAR(100) DEFAULT NULL AFTER global_customer,
    ADD INDEX subscriptions_customer_email_index (customer_email);

# hulk recon columns
ALTER TABLE upi
    ADD COLUMN gateway VARCHAR(255) DEFAULT NULL AFTER id,
    ADD COLUMN npci_txn_id VARCHAR(255) DEFAULT NULL AFTER npci_reference_id,
    ADD COLUMN reconciled_at INTEGER DEFAULT NULL AFTER npci_txn_id,
    ADD INDEX upi_gateway_reconciled_at_index (gateway, reconciled_at),
    ADD INDEX upi_npci_txn_id_index (npci_txn_id);

Alter table orders
    CHANGE reference9 payer_name VARCHAR(255) DEFAULT NULL,
    ALGORITHM=INPLACE, LOCK=NONE;

ALTER TABLE enach
    ADD COLUMN authentication_gateway VARCHAR(255) DEFAULT NULL AFTER refund_id;

ALTER TABLE transaction
    MODIFY COLUMN balance BIGINT NULL AFTER currency;

ALTER TABLE payments
    MODIFY COLUMN amount BIGINT NOT NULL AFTER merchant_id,
    MODIFY COLUMN base_amount BIGINT NULL AFTER currency,
    MODIFY COLUMN amount_authorized BIGINT NOT NULL DEFAULT 0 AFTER international,
    MODIFY COLUMN amount_refunded BIGINT NOT NULL DEFAULT 0 AFTER amount_authorized,
    MODIFY COLUMN base_amount_refunded BIGINT NOT NULL DEFAULT 0 AFTER amount_refunded,
    MODIFY COLUMN amount_transferred BIGINT NOT NULL DEFAULT 0 AFTER base_amount_refunded,
    MODIFY COLUMN amount_paidout BIGINT NULL DEFAULT 0 AFTER amount_transferred,
    ADD INDEX payments_verify_at_gateway_index (verify_at, gateway),
    ADD INDEX payments_refund_at_index (refund_at);

ALTER TABLE axis
    ADD INDEX axis_refund_id_index (refund_id);

# Bene name udpate for IRCTC refund (VA)
UPDATE bank_accounts
    SET beneficiary_name = 'MAA SHERAVALI SAMITI SEVA', updated_at = UNIX_TIMESTAMP(now())
    WHERE id = 'AotxkoHq2buSM8' LIMIT 1

#Changes for payout on demand
ALTER TABLE payouts ADD COLUMN `type` char(30) not null default 'default' AFTER settled_on;

Alter table payments
    CHANGE reference15 settled_by VARCHAR(255) DEFAULT NULL,
    ALGORITHM=INPLACE, LOCK=NONE;

# adds index on merchant_reference (upi table)
ALTER TABLE upi
    ADD INDEX upi_merchant_reference_index (merchant_reference);

# Query to add activation_flow in merchant_details table for instant activations
ALTER TABLE merchant_details
    ADD COLUMN activation_flow VARCHAR (255) AFTER activation_status;

# adds processedAt column for refunds (renaming the existing column 'reference5')
ALTER TABLE refunds
    CHANGE COLUMN reference5 processed_at INT DEFAULT NULL AFTER last_attempted_at,
    ADD INDEX refunds_processed_at_index (`processed_at`);

Alter table refunds
    CHANGE reference7 settled_by VARCHAR(255) DEFAULT NULL,
    ALGORITHM=INPLACE, LOCK=NONE;

# Fixes atom gateway_payment_id and bank_payment_id for 20 payments.
# Incorrect (scientific values) were stored via MIS file.
UPDATE atom SET gateway_payment_id = null , bank_payment_id = null,updated_at=UNIX_TIMESTAMP() where id in (2221380,
    2235804,2245768,2248176,2249290,2252273,2252498,2254442,2256992,2257155,2258621,2258758,2258842,2259076,2260116,2260190,
    2268489,2268785,2270611,2271555)
LIMIT 20;

ALTER TABLE pricing
    ADD COLUMN org_id VARCHAR(14) DEFAULT NULL AFTER max_fee,
    ADD INDEX `pricing_org_id_plan_id_index`   (`org_id`, `plan_id`),
    ADD INDEX `pricing_org_id_plan_name_index` (`org_id`, `plan_name`);

ALTER TABLE transactions
    CHANGE reference1 reconciled_type VARCHAR(255) DEFAULT NULL,
    ALGORITHM=INPLACE, LOCK=NONE;

ALTER TABLE orgs
    ADD COLUMN default_pricing_plan_id VARCHAR (14) DEFAULT NULL AFTER signature_email,
    ALGORITHM=INPLACE, LOCK=NONE;

ALTER TABLE payouts
  ADD COLUMN transaction_type VARCHAR(255) DEFAULT NULL after transaction_id;

ALTER TABLE payouts DROP FOREIGN KEY payouts_transaction_id_foreign;

ALTER TABLE bank_accounts
    ADD COLUMN account_type VARCHAR (255) AFTER account_number;

ALTER TABLE invoices
    ADD COLUMN entity_type VARCHAR(255) AFTER customer_id,
    ADD COLUMN entity_id CHAR(14) AFTER entity_type;

ALTER TABLE customer_transactions ADD COLUMN reconciled_at BIGINT DEFAULT NULL after description;

ALTER TABLE balance
    ADD COLUMN merchant_id CHAR(14) AFTER id,
    ADD COLUMN type VARCHAR(255) DEFAULT 'primary' AFTER merchant_id ,
    ADD COLUMN currency CHAR(3) DEFAULT NULL AFTER type ,
    ADD COLUMN name VARCHAR(255) DEFAULT NULL AFTER currency,
    ADD INDEX `balance_merchant_id_index` (`merchant_id`),
    ALGORITHM=INPLACE, LOCK=NONE;

UPDATE balance SET merchant_id = id , currency = 'INR'
    where merchant_id IS NULL LIMIT 1000;

ALTER TABLE subscription_registrations
    ADD COLUMN notes TEXT AFTER expire_at,
    ADD COLUMN token_id CHAR(14) AFTER customer_id,
    ADD INDEX subscription_registrations_token_id_merchant_id_index (token_id,merchant_id);

ALTER TABLE refunds
    CHANGE reference10 vpa_id CHAR(14) DEFAULT NULL,
    ALGORITHM=INPLACE, LOCK=NONE;

ALTER TABLE fund_transfer_attempts
    ADD COLUMN vpa_id CHAR(14) AFTER bank_account_id;

ALTER TABLE vpas
    DROP COLUMN customer_id;

DROP TABLE vpa;

DELETE FROM migrations WHERE migration = '2016_11_29_193757_create_vpa';

ALTER TABLE merchants
    ADD COLUMN activation_source VARCHAR(255) DEFAULT NULL AFTER handle,
    ADD COLUMN business_banking TINYINT(1) DEFAULT 0 AFTER activation_source;

ALTER TABLE transactions
    CHANGE COLUMN `reference2` `balance_id` CHAR(14) DEFAULT NULL,
    ADD INDEX `transactions_balance_id_index` (balance_id),
    ALGORITHM=INPLACE, LOCK=NONE;

ALTER TABLE blade
    ADD COLUMN acs_url VARCHAR(3000) DEFAULT NULL AFTER response_description;

ALTER TABLE merchant_users
    ADD COLUMN product VARCHAR(255) DEFAULT 'primary' AFTER user_id,
    DROP INDEX `merchant_users_merchant_id_user_id_role_unique`,
    ADD UNIQUE KEY `merchant_users_merchant_id_product_user_id_role_unique` (`merchant_id`, `product`, `user_id`, `role`);

ALTER TABLE invitations
    ADD COLUMN  product VARCHAR(255) DEFAULT 'primary' AFTER user_id;

ALTER TABLE hitachi
    ADD INDEX `hitachi_prrn_index` (pRRN);

ALTER TABLE merchant_banks
    ADD COLUMN cardless_emi TINYINT(1) NOT NULL DEFAULT 0 AFTER emi;

ALTER TABLE terminals
    ADD COLUMN cardless_emi TINYINT(1) NOT NULL DEFAULT 0 AFTER emi,
    ADD INDEX `terminals_cardless_emi_index` (cardless_emi);

# Drops foreign key on production on newly created table beneficiaries, leaving them on stage and local environment.
ALTER TABLE beneficiaries
    DROP FOREIGN KEY beneficiaries_merchant_id_foreign;

ALTER TABLE payment_links
    ADD COLUMN support_contact VARCHAR(255) DEFAULT NULL AFTER udf_jsonschema_id,
    ADD COLUMN support_email VARCHAR(255) DEFAULT NULL AFTER support_contact,
    ADD COLUMN terms TEXT AFTER support_email;

ALTER TABLE transactions
    ADD INDEX `transactions_reconciled_type_index` (reconciled_type);

UPDATE migrations
    SET migration="2018_11_25_100031_create_contacts"
    WHERE migration="2018_11_25_100031_create_beneficiaries"
    LIMIT 1;

ALTER TABLE beneficiaries
    RENAME TO contacts;

ALTER TABLE virtual_accounts
    ADD COLUMN balance_id VARCHAR(14) DEFAULT NULL AFTER merchant_id,
    ADD INDEX virtual_accounts_balance_id_merchant_id_index (balance_id, merchant_id);

ALTER TABLE fund_accounts
    DROP FOREIGN KEY fund_accounts_beneficiary_id_foreign,
    DROP FOREIGN KEY fund_accounts_merchant_id_foreign;

ALTER TABLE schedule_tasks
    ADD COLUMN international TINYINT(1) DEFAULT 0 AFTER method,
    ALGORITHM=INPLACE, LOCK=NONE;

# this is to duplicate the schedule task for all the merchants for whom international is allowed
# all the task (with method with value card, and if not available then method with value null) will be copied and marked as international
INSERT INTO schedule_tasks
    (merchant_id, entity_id, entity_type, type, method, international, schedule_id, next_run_at, last_run_at, created_at, updated_at)
    (SELECT merchant_id, entity_id, entity_type, type, method, 1, schedule_id, next_run_at, last_run_at, Unix_timestamp(Now()), Unix_timestamp(Now())
    FROM schedule_tasks INNER JOIN (
        SELECT id FROM merchants WHERE activated=1 AND activated_at < unix_timestamp(now()) AND international = 1
        ) AS im ON im.id = schedule_tasks.merchant_id
        WHERE type = 'settlement' and method = 'card' AND deleted_at is null
    )

INSERT INTO schedule_tasks
    (merchant_id, entity_id, entity_type, type, method, international, schedule_id, next_run_at, last_run_at, created_at, updated_at)
    (SELECT merchant_id, entity_id, entity_type, type, method, 1, schedule_id, next_run_at, last_run_at, Unix_timestamp(Now()), Unix_timestamp(Now())
    FROM schedule_tasks INNER JOIN (
        SELECT id FROM merchants WHERE activated=1 AND activated_at < unix_timestamp(now()) AND international = 1
        ) AS im ON im.id = schedule_tasks.merchant_id
        WHERE type = 'settlement' AND method is null AND deleted_at is null AND merchant_id not in (
            SELECT merchant_id FROM schedule_tasks WHERE type = 'settlement' AND method = 'card' AND international = 1 AND deleted_at is null
        )
    )

ALTER TABLE pricing
    ADD COLUMN product VARCHAR(255) DEFAULT 'primary' AFTER plan_name;

ALTER TABLE payouts
    ADD COLUMN balance_id CHAR(14) DEFAULT NULL AFTER merchant_id,
    ADD INDEX payouts_balance_id_merchant_id_index (balance_id, merchant_id);

ALTER TABLE terminals
    ADD COLUMN ifsc_code varchar(11) DEFAULT NULL AFTER account_number;
ALTER TABLE fund_accounts
    ADD COLUMN source_type VARCHAR(255) AFTER merchant_id,
    ADD COLUMN source_id CHAR(14) AFTER source_type,
    ADD INDEX `fund_accounts_source_id_index` (source_id),
    DROP INDEX beneficiary_accounts_beneficiary_id_foreign,
    DROP COLUMN contact_id;

ALTER TABLE users
    ADD COLUMN contact_mobile_verified TINYINT(1) NOT NULL DEFAULT 0 AFTER password_reset_expiry;

ALTER TABLE balance
    ADD COLUMN account_number VARCHAR(255) DEFAULT NULL AFTER refund_credits,
    ADD INDEX balance_account_number_index (account_number);

ALTER TABLE bank_transfers
    ADD COLUMN balance_id CHAR(14) DEFAULT NULL AFTER virtual_account_id,
    ADD INDEX bank_transfers_balance_id_index (balance_id);

ALTER TABLE payouts
    ADD COLUMN mode VARCHAR(30) DEFAULT NULL AFTER method,
    ADD INDEX payouts_mode_index (mode);

ALTER TABLE payouts
    ADD COLUMN user_id CHAR(14) DEFAULT NULL AFTER destination_type,
    ADD INDEX payouts_user_id_index (user_id);

ALTER TABLE contacts
    ADD COLUMN type VARCHAR(255) DEFAULT NULL AFTER email,
    ADD INDEX contacts_type_merchant_id_index (type, merchant_id);

ALTER TABLE payouts
    ADD COLUMN fund_account_id CHAR(14) DEFAULT NULL AFTER destination_type,
    MODIFY COLUMN destination_type VARCHAR(255) DEFAULT NULL,
    MODIFY COLUMN destination_id CHAR(14) DEFAULT NULL,
    ADD INDEX payouts_fund_account_id_index (fund_account_id);

ALTER TABLE vpas
    DROP INDEX vpas_username_handle_unique,
    ADD INDEX vpas_username_handle_index (username, handle);

ALTER TABLE contacts
    ADD COLUMN reference_id VARCHAR(255) DEFAULT NULL AFTER type,
    ADD INDEX contacts_reference_id_merchant_id_index (reference_id, merchant_id);

ALTER TABLE reversals
    ADD COLUMN balance_id CHAR(14) DEFAULT NULL AFTER entity_type,
    ADD INDEX reversals_balance_id_index (balance_id);

ALTER TABLE reversals
    ADD COLUMN channel VARCHAR(255) DEFAULT NULL AFTER balance_id;

ALTER TABLE payouts
    ADD COLUMN purpose_type VARCHAR(255) DEFAULT NULL AFTER purpose,
    ADD INDEX payouts_purpose_type_index (purpose_type);

ALTER TABLE balance
    ADD UNIQUE INDEX balance_merchant_id_type_unique (merchant_id, type);

# Inserts default banking pricing for payouts.
INSERT INTO pricing (id, plan_id, plan_name, product, feature, gateway, payment_method, payment_method_type, auth_type, payment_network, payment_issuer, emi_duration, international, receiver_type, amount_range_active, amount_range_min, amount_range_max, percent_rate, fixed_rate, min_fee, max_fee, org_id, created_at, updated_at, deleted_at, expired_at)
VALUES
    ("Bbg7cl6t6I3XA5", "BTo98voDY05ueB", "Banking default plan", "banking", "payout", NULL, "fund_transfer", NULL, NULL, NULL, NULL, NULL, 0, NULL, 1, 0, 100000, 0, 500, 0, NULL, "100000razorpay", unix_timestamp(), unix_timestamp(), NULL, NULL),
    ("Bbg7dTcURsOr77", "BTo98voDY05ueB", "Banking default plan", "banking", "payout", NULL, "fund_transfer", NULL, NULL, NULL, NULL, NULL, 0, NULL, 1, 100000, 2500000, 0, 900, 0, NULL, "100000razorpay", unix_timestamp(), unix_timestamp(), NULL, NULL),
    ("Bbg7e4oKCgaubd", "BTo98voDY05ueB", "Banking default plan", "banking", "payout", NULL, "fund_transfer", NULL, NULL, NULL, NULL, NULL, 0, NULL, 1, 2500000, 4294967295, 0, 1500, 0, NULL, "100000razorpay", unix_timestamp(), unix_timestamp(), NULL, NULL),
    ("Bbg7eYLkxM7sLP", "BTo98voDY05ueB", "Banking default plan", "banking", "payout", NULL, "upi", NULL, NULL, NULL, NULL, NULL, 0, NULL, 1, 0, 100000, 0, 500, 0, NULL, "100000razorpay", unix_timestamp(), unix_timestamp(), NULL, NULL),
    ("Bbg7f0FaUJQOvj", "BTo98voDY05ueB", "Banking default plan", "banking", "payout", NULL, "upi", NULL, NULL, NULL, NULL, NULL, 0, NULL, 1, 100000, 2500000, 0, 900, 0, NULL, "100000razorpay", unix_timestamp(), unix_timestamp(), NULL, NULL),
    ("Bbg7fgaDwax03u", "BTo98voDY05ueB", "Banking default plan", "banking", "payout", NULL, "upi", NULL, NULL, NULL, NULL, NULL, 0, NULL, 1, 2500000, 4294967295, 0, 1500, 0, NULL, "100000razorpay", unix_timestamp(), unix_timestamp(), NULL, NULL);

ALTER TABLE invoices
    ADD COLUMN first_payment_min_amount BIGINT UNSIGNED DEFAULT NULL AFTER partial_payment;

ALTER TABLE orders
    ADD COLUMN first_payment_min_amount BIGINT UNSIGNED DEFAULT NULL AFTER partial_payment;

ALTER TABLE fund_transfer_attempts
    ADD COLUMN bank_response_code varchar(255) DEFAULT NULL AFTER bank_status_code;

ALTER TABLE isg
    MODIFY COLUMN created_at INT(11) NOT NULL,
    MODIFY COLUMN updated_at INT(11) NOT NULL;

ALTER TABLE hitachi
    MODIFY COLUMN created_at INT(11) NOT NULL,
    MODIFY COLUMN updated_at INT(11) NOT NULL;

ALTER TABLE merchant_access_map
    ADD COLUMN entity_owner_id CHAR(14) DEFAULT NULL AFTER entity_type,
    ADD INDEX merchant_access_map_entity_owner_id_index (entity_owner_id);

ALTER TABLE fund_transfer_attempts
    ADD INDEX fund_transfer_attempts_vpa_id_index (vpa_id),
    ADD INDEX fund_transfer_attempts_bank_account_id_index (bank_account_id);

ALTER TABLE promotions
    ADD COLUMN pricing_plan_id CHAR(14) DEFAULT NULL AFTER credits_expire,
    ADD COLUMN creator_name VARCHAR(255) DEFAULT NULL AFTER credits_expire,
    ADD COLUMN purpose VARCHAR(255) DEFAULT NULL AFTER credits_expire,
    ADD INDEX promotions_pricing_plan_id_index (pricing_plan_id);

ALTER TABLE payouts
    ADD COLUMN reversed_at int(11) DEFAULT NULL AFTER `processed_at`,
    ADD INDEX payouts_reversed_at_index (reversed_at),
    ADD INDEX payouts_processed_at_index (processed_at);

ALTER TABLE bank_accounts
    ADD COLUMN registered_beneficiary_name VARCHAR(255) DEFAULT NULL after beneficiary_name;

ALTER TABLE transactions
    MODIFY COLUMN type VARCHAR(255) DEFAULT NULL;

ALTER TABLE pricing
    MODIFY COLUMN feature VARCHAR(255) DEFAULT NULL;

ALTER TABLE fund_transfer_attempts
    MODIFY COLUMN source_type VARCHAR(255) DEFAULT NULL;

ALTER TABLE merchant_banks
    ADD COLUMN card_networks SMALLINT UNSIGNED DEFAULT 126 AFTER card
    ADD INDEX card_networks_index (card_networks);

# Shivam | 3-1-2019 | PAY-589 | Add column type to schedules table
ALTER TABLE schedules
    ADD COLUMN type VARCHAR(255) DEFAULT NULL AFTER MERCHANT_ID,
    ADD INDEX schedules_type_index (type),
    DROP FOREIGN KEY schedules_merchant_id_foreign,
    MODIFY merchant_id varchar(14) null,
    ADD COLUMN org_id VARCHAR(14) DEFAULT NULL AFTER name;

ALTER TABLE fund_account_validations
    ADD COLUMN account_status VARCHAR(255) DEFAULT NULL after status,
    ADD COLUMN registered_name VARCHAR(255) DEFAULT NULL after account_status,
    CHANGE COLUMN fee fees INT UNSIGNED DEFAULT 0;

ALTER TABLE bank_accounts DROP COLUMN registered_beneficiary_name;

ALTER TABLE webhooks
    MODIFY COLUMN events BIGINT;

ALTER TABLE fund_account_validations
    ADD COLUMN batch_fund_transfer_id CHAR(14) AFTER currency;

ALTER TABLE `partner_configs` DROP FOREIGN KEY `partner_configs_default_plan_id_foreign`;
ALTER TABLE `partner_configs` DROP FOREIGN KEY `partner_configs_implicit_plan_id_foreign`;
ALTER TABLE `partner_configs` DROP FOREIGN KEY `partner_configs_explicit_plan_id_foreign`;

ALTER TABLE terminals
   ADD COLUMN capability TINYINT(1) DEFAULT 0 AFTER recurring;

ALTER VIEW qubole_terminals_view AS
    SELECT id, merchant_id, category, network_category, enabled, gateway, gateway_merchant_id, gateway_terminal_id, gateway_acquirer, card, netbanking, upi, emandate, aeps, emi, recurring, capability, international, type, created_at, updated_at, deleted_at FROM terminal;


ALTER TABLE balance
    ADD INDEX balance_merchant_id_type_updated_at_index (merchant_id, type, updated_at);

ALTER TABLE payouts
    ADD COLUMN reference_id VARCHAR(255) DEFAULT NULL AFTER id,
    ADD INDEX payouts_reference_id_index (reference_id(25));

ALTER TABLE promotions
    MODIFY COLUMN credit_amount int(11) NOT NULL DEFAULT 0;

ALTER TABLE `partner_configs` ADD INDEX `partner_configs_entity_id_index` (`entity_id`);
ALTER TABLE `partner_configs` ADD INDEX `partner_configs_origin_id_index` (`origin_id`);

ALTER TABLE gateway_rule
    ADD COLUMN authentication_gateway varchar(255) DEFAULT NULL AFTER category2,
    ADD COLUMN auth_type varchar(14) DEFAULT NULL AFTER authentication_gateway;

ALTER TABLE orgs
    ADD COLUMN type varchar(255) DEFAULT NULL AFTER email;

ALTER TABLE terminals
    MODIFY COLUMN category CHAR(4);

ALTER TABLE gateway_downtimes
    ADD COLUMN acquirer VARCHAR(32) NOT NULL DEFAULT 'UNKNOWN' AFTER issuer,
    ADD INDEX gateway_downtimes_acquirer_index (acquirer);

ALTER TABLE paytm
    MODIFY `txnid` varchar(255) DEFAULT NULL;

ALTER TABLE paytm
    MODIFY `request_type` varchar(255) COLLATE utf8_bin NULL;

ALTER TABLE gateway_rules
    ADD COLUMN authentication_gateway varchar(255) DEFAULT NULL AFTER category2,
    ADD COLUMN auth_type varchar(14) DEFAULT NULL AFTER authentication_gateway,
    ADD COLUMN step varchar(255) NOT NULL DEFAULT 'authorization' AFTER auth_type;

ALTER TABLE gateway_rules
    ADD COLUMN capability TINYINT(1) DEFAULT 0 AFTER recurring;

ALTER TABLE contacts
    ADD INDEX contacts_merchant_id_active_index (merchant_id, active);

ALTER TABLE `pricing`
    ADD COLUMN `type` varchar(255) NOT NULL DEFAULT 'pricing' after `feature`;

ALTER TABLE iins
    ADD COLUMN type_indicator varchar(255) DEFAULT NULL AFTER type;

ALTER TABLE payments CHANGE `reference4` `cps_route` TINYINT(1);

ALTER TABLE iins change type_indicator message_type varchar(255);

ALTER TABLE bank_accounts
    ADD COLUMN fts_fund_account_id INTEGER DEFAULT NULL AFTER beneficiary_mobile,
    ADD INDEX `bank_accounts_fts_fund_account_id_index` (`fts_fund_account_id`);

ALTER TABLE vpas
    ADD COLUMN fts_fund_account_id INTEGER DEFAULT NULL AFTER merchant_id,
    ADD INDEX `vpas_fts_fund_account_id_index` (`fts_fund_account_id`);

ALTER TABLE payouts
    ADD COLUMN narration VARCHAR(255) DEFAULT NULL AFTER reference_id;

ALTER TABLE emi_plans
    ADD COLUMN merchant_id char(14) DEFAULT NULL AFTER id,
    ADD INDEX emi_plans_merchant_id_index (merchant_id);

ALTER TABLE promotions
    ADD COLUMN partner_id CHAR(14) DEFAULT NULL AFTER pricing_plan_id,
    ADD INDEX promotions_partner_id_index (partner_id);

ALTER TABLE isg
    MODIFY bank_reference_no VARCHAR(64);

ALTER table `commissions`
    ADD COLUMN `type` varchar(255) NOT NULL DEFAULT 'implicit' after `partner_config_id`;

ALTER TABLE subscriptions
    ADD INDEX subscriptions_status_start_at_index (status, start_at);

ALTER TABLE line_item_taxes
    ADD INDEX line_item_taxes_line_item_id_index(line_item_id);

ALTER TABLE webhooks
    ADD INDEX webhooks_entity_id_entity_type_index (entity_id, entity_type);

ALTER TABLE invoices
    ADD INDEX invoices_user_id_merchant_id_type_entity_type_index (user_id, merchant_id, `type`, entity_type);

ALTER TABLE hdfc
    ADD INDEX hdfc_auth_index (auth);

ALTER TABLE fund_transfer_attempts
    ADD COLUMN fts_transfer_id INTEGER DEFAULT NULL AFTER status,
    ADD INDEX `fund_transfer_attempts_fts_transfer_id_index` (`fts_transfer_id`);

ALTER TABLE settlements
    ADD COLUMN fts_transfer_id INTEGER DEFAULT NULL AFTER status,
    ADD INDEX `settlements_fts_transfer_id_index` (`fts_transfer_id`);

ALTER TABLE payouts
    ADD COLUMN fts_transfer_id INTEGER DEFAULT NULL AFTER status,
    ADD INDEX `payouts_fts_transfer_id_index` (`fts_transfer_id`);

ALTER TABLE refunds
    ADD COLUMN fts_transfer_id INTEGER DEFAULT NULL AFTER status,
    ADD INDEX `refunds_fts_transfer_id_index` (`fts_transfer_id`);

ALTER TABLE fund_account_validations
    ADD COLUMN fts_transfer_id INTEGER DEFAULT NULL AFTER status,
    ADD INDEX `fund_account_validations_fts_transfer_id_index` (`fts_transfer_id`);

ALTER TABLE payouts
    ADD COLUMN queued_at int(11) DEFAULT NULL AFTER `reversed_at`,
    ADD COLUMN cancelled_at int(11) DEFAULT NULL AFTER `queued_at`,
    ADD INDEX payouts_queued_at_index (queued_at),
    ADD INDEX payouts_cancelled_at_index (cancelled_at);

ALTER TABLE cards
    ADD COLUMN global_fingerprint varchar(50) DEFAULT NULL AFTER vault_token;
    ADD INDEX  `cards_global_fingerprint_index` (`global_fingerprint`);

ALTER TABLE cards
    ADD COLUMN reference1 TINYINT(1) NULL AFTER global_fingerprint,
    ADD COLUMN reference2 INT(11)  DEFAULT NULL AFTER global_fingerprint,
    ADD COLUMN reference3 VARCHAR(14) DEFAULT NULL AFTER reference2,
    ADD COLUMN reference4 VARCHAR(255) DEFAULT NULL AFTER reference3;

ALTER TABLE fund_transfer_attempts
    ADD COLUMN card_id CHAR(14) DEFAULT NULL after vpa_id;

ALTER TABLE batches
    ADD COLUMN creator_id CHAR(14) DEFAULT NULL AFTER comment,
    ADD COLUMN creator_type VARCHAR(255) DEFAULT NULL AFTER creator_id,
    ADD INDEX batches_creator_id_index (creator_id);

ALTER TABLE payouts
    MODIFY COLUMN purpose VARCHAR(255) NOT NULL;

ALTER TABLE payouts
    ADD INDEX payouts_purpose_index (purpose);

ALTER TABLE transactions
    ADD INDEX transactions_debit_index (debit);

ALTER TABLE transactions
    ADD INDEX transactions_credit_index (credit);

ALTER TABLE iins
    ADD COLUMN recurring TINYINT(1) DEFAULT 0 AFTER locked;

ALTER TABLE merchant_details
    ADD COLUMN international_activation_flow VARCHAR (255) AFTER activation_flow;

ALTER TABLE batches
    MODIFY COLUMN amount BIGINT(20) UNSIGNED DEFAULT NULL AFTER attempts,
    MODIFY COLUMN processed_amount BIGINT(20) UNSIGNED DEFAULT 0 AFTER amount;

ALTER TABLE payouts
    ADD COLUMN batch_id varchar(14) DEFAULT NULL AFTER fund_account_id,
    ADD index payouts_batch_id_index (batch_id);

ALTER TABLE fund_accounts
    ADD COLUMN batch_id varchar(14) DEFAULT NULL AFTER account_id,
    ADD index fund_accounts_batch_id_index (batch_id);

ALTER TABLE contacts
    ADD COLUMN batch_id varchar(14) DEFAULT NULL AFTER merchant_id,
    ADD index contacts_batch_id_index (batch_id);

ALTER TABLE refunds
    ADD COLUMN is_scrooge TINYINT(1) NOT NULL DEFAULT 0 AFTER processed_at,
    ADD INDEX refunds_is_scrooge_index (`is_scrooge`);

ALTER TABLE `reversals`
    ADD COLUMN `initiator_id` varchar(14) DEFAULT NULL AFTER `transaction_id`,
    ADD COLUMN `customer_refund_id` varchar(14) DEFAULT NULL AFTER `initiator_id`;

ALTER TABLE reversals
    ADD COLUMN customer_id VARCHAR(14) DEFAULT NULL AFTER merchant_id,
    ADD COLUMN transaction_type VARCHAR(255) DEFAULT NULL after transaction_id;

ALTER TABLE reversals DROP FOREIGN KEY reversals_transaction_id_foreign;

ALTER TABLE invoices
    DROP FOREIGN KEY invoices_batch_id_foreign;

ALTER TABLE commissions
    ADD COLUMN record_only TINYINT(1) NOT NULL DEFAULT 0 AFTER transaction_id;

ALTER TABLE paysecure
    MODIFY rrn varchar(255) DEFAULT NULL;

ALTER TABLE bank_transfers
    MODIFY COLUMN payee_account VARCHAR(255) NOT NULL;

ALTER TABLE fund_transfer_attempts
    ADD COLUMN is_fts INT(1) DEFAULT 0 AFTER status;

ALTER TABLE payouts
    MODIFY notes TEXT DEFAULT NULL;

ALTER TABLE payouts
    ADD COLUMN initiated_at int(11) DEFAULT NULL AFTER `queued_at`,
    ADD INDEX payouts_initiated_at_index (initiated_at);

ALTER TABLE refunds
    CHANGE reference11 balance_id CHAR(14) DEFAULT NULL,
    ADD INDEX refunds_balance_id_index (`balance_id`);

ALTER TABLE enach
    ADD COLUMN gateway_reference_id2 VARCHAR(255) DEFAULT NULL AFTER gateway_reference_id;

ALTER TABLE mozart
    DROP INDEX mozart_payment_id_unique;

-- P2P - Beneficiary Handling #11532

/* The Bank Id, Handle and Device Id will be null for Beneficiary  */
ALTER TABLE `p2p_bank_accounts` MODIFY `device_id` VARCHAR(14) CHARACTER SET utf8 COLLATE utf8_bin NULL,
                                MODIFY `handle` VARCHAR(50) CHARACTER SET utf8 COLLATE utf8_bin NULL,
                                MODIFY `bank_id` VARCHAR(14) CHARACTER SET utf8 COLLATE utf8_bin NULL;

/*  Device Id will be null for Beneficiary
    Username has to be case insensitive, why mb4?
    https://stackoverflow.com/questions/901066/mysql-case-sensitive-search-for-utf8-bin-field */
ALTER TABLE `p2p_vpa` MODIFY `device_id` VARCHAR(14) CHARACTER SET utf8 COLLATE utf8_bin NULL,
                      MODIFY `username` VARCHAR(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL;

-- P2P - Beneficiary Handling #11532

ALTER TABLE merchant_banks
    ADD COLUMN phonepe TINYINT(1) NOT NULL DEFAULT 0 AFTER olamoney,
    ADD INDEX merchant_banks_phonepe_index (phonepe);

ALTER TABLE merchant_banks
    ADD COLUMN phonepeswitch TINYINT(1) NOT NULL DEFAULT 0;

ALTER TABLE orders
    ADD COLUMN provider_context text DEFAULT NULL;

ALTER TABLE merchant_banks
    ADD COLUMN paypal TINYINT(1) NOT NULL DEFAULT 0 AFTER olamoney,
    ADD INDEX merchant_banks_paypal_index (paypal);

ALTER TABLE fund_transfer_attempts
    ADD INDEX fund_transfer_attempts_card_id_index (card_id);

ALTER TABLE partner_configs
    ADD COLUMN `commission_model` varchar(255) not null default 'commission' after `explicit_should_charge`;

ALTER TABLE commissions
    ADD COLUMN `model` varchar(255) not null default 'commission' after `record_only`;

ALTER TABLE fund_account_validations
    ADD COLUMN balance_id CHAR(14) DEFAULT NULL AFTER batch_fund_transfer_id,
    ADD INDEX fund_account_validations_balance_id_index (balance_id);

ALTER TABLE refunds
    CHANGE COLUMN reference6 reversed_at INT(11) UNSIGNED DEFAULT NULL,
    ADD INDEX refunds_reversed_at_index (`reversed_at`);

ALTER TABLE merchant_banks
    ADD COLUMN paylater TINYINT(1) NOT NULL DEFAULT 0 AFTER cardless_emi;

ALTER TABLE fund_account_validations
    ADD COLUMN attempts TINYINT(1) DEFAULT 1 after batch_fund_transfer_id,
    ADD COLUMN retry_at INTEGER UNSIGNED DEFAULT NULL after batch_fund_transfer_id,
    ADD INDEX retry_at_index (`retry_at`);

ALTER TABLE merchant_banks
    ADD COLUMN paylater TINYINT(1) NOT NULL DEFAULT 0 AFTER cardless_emi;

ALTER TABLE terminals
    ADD COLUMN paylater TINYINT(1) NOT NULL DEFAULT 0 AFTER cardless_emi,
    ADD INDEX `terminals_paylater_index` (paylater);

ALTER TABLE invoices
    ADD COLUMN idempotency_key varchar(255) UNIQUE DEFAULT NULL AFTER batch_id,
    ADD INDEX invoices_idempotency_key_index (idempotency_key);

ALTER TABLE payouts
    ADD COLUMN pending_at INT(11) DEFAULT NULL AFTER `processed_at`,
    ADD INDEX payouts_pending_at_index (pending_at);

ALTER TABLE banking_accounts
    ADD COLUMN bank_internal_status VARCHAR(255) DEFAULT NULL AFTER status,
    ADD INDEX banking_accounts_bank_internal_status_index (bank_internal_status),
    ADD COLUMN username VARCHAR(255) DEFAULT NULL AFTER bank_reference_number,
    ADD COLUMN password VARCHAR(255) DEFAULT NULL AFTER username,
    ADD COLUMN reference1 VARCHAR(255) DEFAULT NULL AFTER password;

ALTER TABLE balance
    ADD COLUMN account_type VARCHAR(255) DEFAULT NULL AFTER account_number,
    ADD COLUMN account_provider VARCHAR(255) DEFAULT NULL AFTER account_type,
    ADD INDEX balance_account_type_index (account_type),
    ADD INDEX balance_account_provider_index (account_provider);

ALTER TABLE paysecure
    MODIFY COLUMN hkey TEXT DEFAULT NULL;

ALTER TABLE fund_transfer_attempts
    DROP INDEX `fund_transfer_attempts_utr_unique`,
    ADD INDEX `fund_transfer_attempts_utr_index` (utr);

ALTER TABLE settlements
    DROP INDEX `settlements_utr_unique`,
    ADD INDEX `settlements_utr_index` (utr);

-- P2P - Fix Transactions #11911

ALTER TABLE `p2p_upi_transactions`
    ADD `ref_url` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL AFTER `ref_id`,
    ADD `mcc` CHAR(4) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL AFTER `ref_url`;

ALTER TABLE `p2p_transactions`
    ADD `device_id` CHAR(14) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL AFTER `customer_id`,
    ADD `handle` VARCHAR(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL AFTER `device_id`,
    ADD `amount_minimum` INT(11) NULL DEFAULT NULL AFTER `amount`,
    ADD `amount_authorized` INT(11) NULL DEFAULT NULL AFTER `amount_minimum`,
    ADD `deleted_at` INT(11) NULL DEFAULT NULL AFTER `completed_at`;

-- P2P - Fix Transactions #11911

ALTER TABLE payouts
    MODIFY COLUMN amount BIGINT UNSIGNED NOT NULL after purpose_type;

ALTER TABLE pricing
    MODIFY COLUMN amount_range_max BIGINT UNSIGNED DEFAULT NULL after amount_range_min;

ALTER TABLE `refunds`
    ADD COLUMN `speed_requested` VARCHAR(50) NOT NULL DEFAULT 'normal' AFTER `attempts`,
    ADD COLUMN `speed_processed` VARCHAR(50) DEFAULT NULL AFTER `speed_requested`,
    ADD COLUMN `fee` INT(10) UNSIGNED DEFAULT 0 AFTER `speed_processed`,
    ADD COLUMN `tax` INT(10) UNSIGNED DEFAULT 0 AFTER `fee`,
    ADD INDEX `refunds_speed_requested_index` (`speed_requested`),
    ADD INDEX `refunds_speed_processed_index` (`speed_processed`);

ALTER TABLE `transactions`
    MODIFY COLUMN `fee` INT(10) NOT NULL,
    MODIFY COLUMN `tax` INT(10) DEFAULT NULL;

ALTER TABLE `reversals`
    ADD COLUMN `fee` INT(10) UNSIGNED DEFAULT 0 AFTER `amount`,
    ADD COLUMN `tax` INT(10) UNSIGNED DEFAULT 0 AFTER `fee`;

-- OmniChannel

ALTER TABLE terminals
    ADD COLUMN omnichannel TINYINT(1) DEFAULT 0 AFTER upi;

-- OmniChannel

ALTER TABLE virtual_accounts
    ADD COLUMN close_by INT DEFAULT NULL AFTER balance_id,
    ADD COLUMN closed_at INT DEFAULT NULL AFTER close_by,
    ADD INDEX virtual_accounts_close_by_index (close_by);

ALTER TABLE `merchant_banks`
    ADD COLUMN `prepaid_card` TINYINT(1) NOT NULL DEFAULT 1 AFTER `debit_card`;

ALTER TABLE `roles`
    ADD COLUMN `product` VARCHAR(255) NOT NULL DEFAULT 'primary' AFTER `description`,
    ADD INDEX `roles_product_index` (`product`);

ALTER TABLE `subscriptions`
    ADD COLUMN `customer_name` VARCHAR(255) DEFAULT NULL AFTER `customer_email`,
    ADD COLUMN `customer_contact` VARCHAR(255) DEFAULT NULL AFTER `customer_name`,
    ADD INDEX `subscriptions_customer_contact_index` (`customer_contact`);

ALTER TABLE virtual_accounts
    ADD COLUMN close_by INT DEFAULT NULL AFTER balance_id,
    ADD COLUMN closed_at INT DEFAULT NULL AFTER close_by,
    ADD INDEX virtual_accounts_close_by_index (close_by);

ALTER TABLE `roles`
    ADD COLUMN `product` VARCHAR(255) NOT NULL DEFAULT 'primary' AFTER `description`,
    ADD INDEX `roles_product_index` (`product`);

ALTER TABLE `iins`
    ADD COLUMN `sub_type` VARCHAR(255) NOT NULL DEFAULT 'consumer' AFTER `type`;

ALTER TABLE `pricing`
    ADD COLUMN `payment_method_subtype` VARCHAR(255) NULL;

ALTER TABLE `gateway_rules`
    ADD COLUMN `method_subtype` VARCHAR(255) NULL AFTER `method_type`,
    ADD INDEX gateway_rules_method_subtype_index (method_subtype);

ALTER TABLE `gateway_rules`
    ADD COLUMN `card_category` VARCHAR(255) NULL AFTER `method_subtype`,
    ADD INDEX gateway_card_category_index (card_category);

ALTER TABLE `merchant_banks`
    ADD COLUMN `card_subtype` INT UNSIGNED NOT NULL DEFAULT 1;

ALTER TABLE `cards`
    ADD COLUMN `sub_type` VARCHAR(255) DEFAULT NULL AFTER `type`;

ALTER TABLE `cards`
    ADD COLUMN `category` VARCHAR(255) DEFAULT NULL AFTER `sub_type`;




ALTER TABLE `merchants`
    ADD COLUMN `second_factor_auth` BOOLEAN DEFAULT 0 NOT NULL AFTER `email`,
    ADD COLUMN `restricted` BOOLEAN DEFAULT 0 NOT NULL AFTER `second_factor_auth`;

ALTER TABLE `users`
    ADD COLUMN `second_factor_auth` BOOLEAN DEFAULT 0 NOT NULL AFTER `contact_mobile`,
    ADD COLUMN `wrong_2fa_attempts` INT(2) DEFAULT 0 NOT NULL AFTER `second_factor_auth`,
    ADD COLUMN `account_locked` BOOLEAN DEFAULT 0 NOT NULL AFTER `wrong_2fa_attempts`;

ALTER TABLE `banking_account_statement`
  ADD UNIQUE INDEX `banking_account_statement_bank_transaction_id_unique` (`bank_transaction_id`, `account_number`, `transaction_date`, `channel`);

ALTER TABLE items
    MODIFY COLUMN amount bigint(20) unsigned;

ALTER TABLE `payment_links`
    ADD COLUMN `type` VARCHAR(30) NOT NULL DEFAULT 'payment' AFTER `terms`,
    ADD INDEX `payment_links_type_index` (`type`);

ALTER TABLE subscriptions
    ADD COLUMN source VARCHAR(32) DEFAULT NULL AFTER `type`;

ALTER TABLE transactions
    CHANGE reference5 balance_updated TINYINT(4),
    ALGORITHM=INPLACE, LOCK=NONE;

ALTER TABLE `merchant_details`
    ADD COLUMN `business_registered_address_l2` VARCHAR(255) DEFAULT NULL after `business_registered_address`,
    ADD COLUMN `business_registered_country` VARCHAR(255) DEFAULT NULL after `business_registered_pin`,
    ADD COLUMN `business_operation_address_l2` VARCHAR(255) DEFAULT NULL after `business_operation_address`,
    ADD COLUMN `business_operation_country` VARCHAR(255) DEFAULT NULL after `business_operation_pin`,
    ADD COLUMN `business_description` VARCHAR(255) DEFAULT NULL after `business_name`,
    ADD COLUMN `custom_fields` TEXT DEFAULT NULL after `internal_notes`;

ALTER TABLE `merchants`
    ADD COLUMN `icon_url` text default null after `logo_url`,
    ADD COLUMN `live_disable_reason` varchar(255) default null after `live`,
    ADD COLUMN `hold_funds_reason` varchar(255) default null after `hold_funds`;

ALTER TABLE `merchant_emails`
    ADD COLUMN `phone` varchar(255) default null after `email`,
    ADD COLUMN `policy` varchar(255) default null after `phone`,
    ADD COLUMN `url` varchar(255) default null after `policy`;

ALTER TABLE `merchants`
    ADD COLUMN `default_refund_speed` enum('normal', 'optimum', 'instant') NOT NULL DEFAULT 'normal' AFTER `auto_refund_delay`;

ALTER TABLE `refunds`
    ADD COLUMN `speed_decisioned` enum('normal', 'optimum', 'instant') NOT NULL DEFAULT 'normal' AFTER `speed_requested`;

ALTER TABLE `action_checker`
    ADD COLUMN `checker_type` VARCHAR(255) DEFAULT NULL AFTER admin_id,
    ADD COLUMN `checker_id` CHAR(14) DEFAULT NULL AFTER checker_type,
    MODIFY COLUMN admin_id CHAR(14) DEFAULT NULL,
    ADD INDEX action_checker_checker_id_index (checker_id);

ALTER TABLE action_state
    ADD COLUMN user_id CHAR(14) DEFAULT NULL AFTER merchant_id,
    ADD INDEX action_state_user_id_index (user_id);

ALTER TABLE `workflow_payout_amount_rules`
    CHANGE COLUMN x_amount min_amount BIGINT UNSIGNED DEFAULT NULL,
    CHANGE COLUMN y_amount max_amount BIGINT UNSIGNED DEFAULT NULL,
    MODIFY COLUMN workflow_id CHAR(14) DEFAULT NULL;

ALTER TABLE payouts
    MODIFY COLUMN `channel` VARCHAR(255) DEFAULT NULL,
    ADD COLUMN rejected_at INT(11) DEFAULT NULL AFTER `reversed_at`,
    ADD INDEX payouts_rejected_at_index (rejected_at);

ALTER TABLE `workflow_actions`
    ADD COLUMN `state_changer_type` VARCHAR(255) DEFAULT NULL AFTER state_changer_id,
    MODIFY COLUMN state_changer_id CHAR(14) DEFAULT NULL,
    DROP FOREIGN KEY workflow_actions_state_changer_id_foreign;

ALTER TABLE workflows
    ADD COLUMN merchant_id CHAR(14) DEFAULT NULL AFTER org_id,
    ADD INDEX workflows_merchant_id_index (merchant_id);

ALTER TABLE banking_accounts
       ADD COLUMN bank_internal_reference_number VARCHAR(255) DEFAULT NULL AFTER balance_id,
       ADD COLUMN beneficiary_name VARCHAR(255) DEFAULT NULL AFTER bank_internal_reference_number,
       ADD COLUMN account_currency CHAR(3) DEFAULT INR AFTER beneficiary_name,
       ADD COLUMN beneficiary_email VARCHAR(255) DEFAULT NULL AFTER account_currency,
       ADD COLUMN beneficiary_mobile VARCHAR(255) DEFAULT NULL AFTER beneficiary_email,
       ADD COLUMN beneficiary_city VARCHAR(255) DEFAULT NULL AFTER beneficiary_mobile,
       ADD COLUMN beneficiary_state VARCHAR(255) DEFAULT NULL AFTER beneficiary_city,
       ADD COLUMN beneficiary_country VARCHAR(255) DEFAULT NULL AFTER beneficiary_state,
       ADD COLUMN beneficiary_address1 VARCHAR(255) DEFAULT NULL AFTER beneficiary_country,
       ADD COLUMN beneficiary_address2 VARCHAR(255) DEFAULT NULL AFTER beneficiary_address1,
       ADD COLUMN beneficiary_address3 VARCHAR(255) DEFAULT NULL AFTER beneficiary_address2,
       ADD COLUMN account_activation_date INT(11) DEFAULT NULL AFTER bank_reference_number,
       ADD INDEX banking_account_bank_reference_number_index (bank_reference_number),
       ADD INDEX banking_account_account_number_index (account_number);

ALTER TABLE banking_accounts
    ADD INDEX banking_accounts_fts_fund_account_id_index (fts_fund_account_id),
    ADD INDEX banking_accounts_balance_id_index (balance_id);

ALTER TABLE balance
    DROP INDEX balance_account_provider_index,
    CHANGE COLUMN account_provider channel varchar(255) DEFAULT NULL,
    ADD INDEX balance_account_channel_index (channel),
    DROP INDEX balance_merchant_id_type_unique;

ALTER TABLE banking_accounts
    MODIFY COLUMN pincode VARCHAR(255) DEFAULT NULL,
    MODIFY COLUMN bank_reference_number VARCHAR(255) DEFAULT NULL,
    ADD INDEX banking_accounts_channel_index (channel),
    ADD INDEX banking_accounts_status_index (status),
    ADD COLUMN account_type VARCHAR(255) NOT NULL AFTER reference_1;

ALTER TABLE gateway_rules
    ADD COLUMN category VARCHAR(255) DEFAULT NULL AFTER emi_subvention,
    ADD INDEX gateway_rules_category_index (category);

ALTER table `gateway_rules`
    ADD COLUMN org_id VARCHAR(14) NOT NULL DEFAULT '100000razorpay' AFTER `merchant_id`,
    MODIFY COLUMN merchant_id varchar(14) DEFAULT NULL,
    ADD INDEX gateway_rules_org_id_merchant_id_index (`org_id`, `merchant_id`);

ALTER TABLE banking_accounts
    CHANGE COLUMN reference_1 reference1 varchar(255) DEFAULT NULL,
    ADD COLUMN beneficiary_pin VARCHAR(255) DEFAULT NULL AFTER status;

ALTER TABLE `transactions`
    MODIFY COLUMN `fee_credits` BIGINT NOT NULL DEFAULT 0;

ALTER TABLE subscription_registrations
    ADD COLUMN status varchar(16) COLLATE utf8_bin DEFAULT NULL AFTER entity_id,
    ADD COLUMN amount bigint(20) unsigned DEFAULT 0 AFTER failure_reason,
    ADD COLUMN attempts int(11) NOT NULL DEFAULT '0' AFTER amount,
    ADD COLUMN currency char(3) DEFAULT 'INR' AFTER attempts,
    ADD INDEX subscription_registrations_status_attempts_index (status, attempts);

ALTER TABLE terminals
    ADD COLUMN procurer VARCHAR(255) DEFAULT 'razorpay' AFTER merchant_id;

ALTER TABLE gateway_rules
    ADD COLUMN procurer VARCHAR(255) DEFAULT NULL AFTER merchant_id;

ALTER TABLE pricing
    ADD COLUMN procurer VARCHAR(255) DEFAULT NULL AFTER gateway,
    ADD INDEX pricing_procurer_index (procurer);

ALTER TABLE partner_configs
    ADD COLUMN settle_to_partner TINYINT(1) NOT NULL DEFAULT 0 AFTER commission_model;

ALTER TABLE iins
    MODIFY COLUMN iin CHAR(6) COLLATE utf8_bin;

ALTER TABLE `reversals`
    MODIFY COLUMN `transaction_id` CHAR(14) DEFAULT NULL;

ALTER table terminals
    ADD COLUMN `org_id` VARCHAR(14) NULL AFTER `merchant_id`,
    ADD COLUMN `status` VARCHAR(255) NULL DEFAULT "activated" AFTER `enabled`,
    ADD COLUMN `notes` TEXT DEFAULT NULL AFTER `ifsc_code`,
    ADD INDEX terminals_org_id_index (`org_id`),
    ADD INDEX terminals_status_index (`status`);

ALTER TABLE reversals
    ADD COLUMN utr VARCHAR(255) DEFAULT NULL AFTER channel,
    ADD INDEX reversals_utr_index (utr);

ALTER TABLE external
    ADD COLUMN utr VARCHAR(255) DEFAULT NULL AFTER bank_reference_number,
    ADD INDEX external_utr_index (utr);

ALTER TABLE `banking_account_statement`
  DROP INDEX `banking_account_statement_bank_transaction_id_unique`,
  ADD UNIQUE INDEX `banking_account_statement_bank_txn_id_srl_no_unique` (`bank_transaction_id`, `account_number`, `transaction_date`, `channel`, `bank_serial_number`);

ALTER TABLE `pricing`
    ADD COLUMN `account_type` VARCHAR(255) DEFAULT NULL AFTER `receiver_type`,
    ADD COLUMN `channel` VARCHAR(255) DEFAULT NULL AFTER `account_type`,
    ADD INDEX `pricing_account_type_index` (`account_type`),
    ADD INDEX `pricing_channel_index` (`channel`);

ALTER TABLE payouts
    ADD COLUMN failed_at INT(11) DEFAULT NULL AFTER `reversed_at`,
    ADD INDEX payouts_failed_at_index (failed_at);

ALTER TABLE merchants
    ADD COLUMN dashboard_whitelisted_ips_live text DEFAULT NULL AFTER whitelisted_ips_test,
    ADD COLUMN dashboard_whitelisted_ips_test text DEFAULT NULL AFTER dashboard_whitelisted_ips_live;

ALTER TABLE payments
    CHANGE approval_code authentication_gateway VARCHAR(255) DEFAULT NULL,
    ALGORITHM=INPLACE, LOCK=NONE;

ALTER TABLE netbanking
    ADD COLUMN verification_id VARCHAR(255) DEFAULT NULL AFTER reference1;

ALTER TABLE `merchant_emails`
    DROP INDEX `merchant_emails_merchant_id_type_email_unique`,
    DROP INDEX `merchant_emails_email_index`,
    ADD INDEX `merchant_emails_merchant_id` (`merchant_id`),
    ADD UNIQUE KEY `merchant_emails_merchant_id_type` (`merchant_id`,`type`),
    MODIFY `email` TEXT;

ALTER TABLE netbanking
    ADD COLUMN verification_id VARCHAR(255) DEFAULT NULL AFTER reference1;

ALTER TABLE netbanking
    ADD INDEX verification_id_index (verification_id);

ALTER TABLE contacts
    ADD COLUMN idempotency_key VARCHAR(255) DEFAULT NULL AFTER active;

ALTER TABLE fund_accounts
    ADD COLUMN idempotency_key VARCHAR(255) DEFAULT NULL AFTER active;

ALTER TABLE payouts
    ADD COLUMN idempotency_key VARCHAR(255) DEFAULT NULL AFTER batch_id;

ALTER TABLE merchants
    ADD COLUMN receipt_email_trigger_event TINYINT(1) UNSIGNED DEFAULT 1 AFTER receipt_email_enabled;

ALTER TABLE merchants
	ADD COLUMN partnership_url TEXT DEFAULT NULL AFTER dashboard_whitelisted_ips_test;

ALTER TABLE banking_accounts
    ADD COLUMN internal_comment VARCHAR(255) DEFAULT NULL AFTER account_type;

ALTER TABLE `external`
    DROP INDEX `external_balance_id_foreign`,
    DROP INDEX `external_transaction_id_foreign`,
    ADD INDEX `external_channel_index` (`channel`),
    ADD INDEX `external_balance_id_index` (`balance_id`),
    ADD INDEX `external_transaction_id_index` (`transaction_id`);

ALTER table terminals
    ADD COLUMN `req_rrn` VARCHAR(255) NULL AFTER `ifsc_code`,
    ADD INDEX terminals_req_rrn_index (`req_rrn`);

ALTER TABLE  merchant_banks
	ADD COLUMN nach tinyint(4) NOT NULL default 0 after emandate;

ALTER TABLE  terminals
	ADD COLUMN nach tinyint(4) NOT NULL default 0 after emandate;

ALTER TABLE adjustment
    ADD COLUMN balance_id char(14) DEFAULT NULL AFTER `transaction_id`,
    ADD INDEX `adjustment_balance_id_index` (`balance_id`);

ALTER TABLE nodal_beneficiaries
    MODIFY COLUMN `bank_account_id` CHAR(14) DEFAULT NULL,
    DROP INDEX `nodal_beneficiaries_bank_account_id_channel_unique`,
    ADD COLUMN `card_id` CHAR(14) DEFAULT NULL AFTER `bank_account_id`,
    ADD INDEX `nodal_beneficiaries_card_id_index` (`card_id`);

ALTER TABLE nodal_beneficiaries ADD INDEX nodal_beneficiaries_bank_account_id_channel_index(bank_account_id, channel);

ALTER table merchant_details
    ADD COLUMN `business_registered_district` VARCHAR(255) NULL AFTER `business_registered_city`,
    ADD COLUMN `business_operation_district` VARCHAR(255) NULL AFTER  `business_operation_city`;

ALTER TABLE entity_origins
    MODIFY COLUMN `origin_type` varchar(20) NOT NULL,
    MODIFY COLUMN `entity_type` varchar(20) NOT NULL,
    DROP INDEX `entity_origins_entity_type_entity_id_unique`,
    ADD UNIQUE KEY `entity_origins_entity_id_entity_type_unique` (`entity_id`,`entity_type`),
    DROP INDEX `entity_id`,
    DROP INDEX `origin_type`,
    DROP INDEX `origin_id`,
    DROP INDEX `entity_type`,
    DROP INDEX `entity_origins_entity_id_index`,
    DROP INDEX `entity_origins_origin_id_index`,
    ADD INDEX  `entity_origins_origin_id_origin_type_index` (`origin_id`, `origin_type`),
    ADD INDEX `entity_origins_created_at_index` (`created_at`);

ALTER TABLE terminals
    MODIFY COLUMN currency VARCHAR(1024) NOT NULL DEFAULT 'INR';

ALTER TABLE merchant_details
    ADD COLUMN `date_of_birth` varchar(30) DEFAULT NULL AFTER `promoter_pan_name`,
    ADD COLUMN `poi_verification_status` varchar(30) DEFAULT NULL AFTER `activation_status`,
    ADD COLUMN `poa_verification_status` varchar(30) DEFAULT NULL AFTER `poi_verification_status`,
    ADD COLUMN `bank_details_verification_status` varchar(30) DEFAULT NULL AFTER `poa_verification_status`;


ALTER TABLE merchant_details
add column `kyc_clarification_reasons` JSON NULL,
add column `kyc_additional_details` JSON NULL;

ALTER TABLE pricing
    ADD COLUMN fee_bearer INT UNSIGNED DEFAULT 0 AFTER international; # 0 is platform fee bearer

ALTER TABLE pricing
    ADD COLUMN fee_model VARCHAR(255) DEFAULT NULL;

ALTER TABLE `transfers`
ADD COLUMN `status` VARCHAR(255) NOT NULL DEFAULT 'processed' AFTER `source_type`,
ADD COLUMN `message` VARCHAR(255) DEFAULT NULL AFTER `recipient_settlement_id`,
ADD COLUMN `origin` VARCHAR(255) DEFAULT NULL AFTER `message`,
ADD COLUMN `processed_at` INT DEFAULT NULL AFTER `created_at`,
ADD COLUMN `attempts` INT NOT NULL DEFAULT 0 AFTER `processed_at`;

ALTER TABLE `addresses`
    MODIFY COLUMN `state` varchar(64)  null;

ALTER TABLE merchant_documents
    ADD COLUMN `ocr_verify` varchar(30) DEFAULT NULL AFTER `entity_type`;

ALTER TABLE invoices
    ADD `reminder_id` CHAR(14) DEFAULT NULL AFTER `status`,
    ADD `reminder_status` VARCHAR(255) DEFAULT NULL AFTER `reminder_id`;

ALTER TABLE partner_configs
    ADD COLUMN tds_percentage INT(11) NOT NULL DEFAULT 500 AFTER settle_to_partner,
    ADD COLUMN has_gst_certificate TINYINT(1) NOT NULL DEFAULT 0 AFTER tds_percentage;

ALTER TABLE settlements
    ADD COLUMN balance_id char(14) DEFAULT NULL AFTER `transaction_id`,
    ADD INDEX `settlements_balance_id_index` (`balance_id`);

ALTER TABLE settlement_bucket
    ADD COLUMN balance_type char(14) DEFAULT 'primary' AFTER `merchant_id`,
    DROP INDEX `settlement_bucket_merchant_id_bucket_timestamp_unique`,
    ADD INDEX `settlement_bucket_m_id_balance_type_bucket_timestamp_index` (`merchant_id`,`balance_type`,`bucket_timestamp`);

ALTER TABLE offers
    ADD COLUMN max_offer_usage int(11) DEFAULT NULL;
    ADD COLUMN current_offer_usage int(11) DEFAULT NULL;

# adds fee_bearer column for payments (renaming the existing column 'reference12')
ALTER TABLE payments
    CHANGE COLUMN reference12 fee_bearer BIGINT;

ALTER TABLE merchant_invoice
    MODIFY COLUMN invoice_number varchar(255) NOT NULL,
    ADD COLUMN balance_id CHAR(14) DEFAULT NULL AFTER amount_due,
    ADD INDEX merchant_invoice_balance_id_index (balance_id);

ALTER TABLE merchants
    ADD COLUMN whitelisted_domains VARCHAR(255) DEFAULT NULL AFTER whitelisted_ips_test;

ALTER TABLE fund_account_validations
    ADD COLUMN utr VARCHAR(255) DEFAULT NULL after registered_name;

ALTER TABLE `transfers`
  CHANGE `transaction_id` `transaction_id` CHAR(14) NULL DEFAULT NULL;

ALTER TABLE merchants
    ADD COLUMN `legal_entity_id` CHAR(14) DEFAULT NULL AFTER `parent_id`,
    ADD INDEX `merchants_legal_entity_id_index` (`legal_entity_id`);

ALTER TABLE bank_accounts
    ADD COLUMN `notes` text DEFAULT NULL AFTER `virtual`;

ALTER TABLE merchant_details
    ADD COLUMN `live_transaction_done` TINYINT(1) DEFAULT 0 AFTER `international_activation_flow`;

ALTER TABLE `settlement_details`
    MODIFY COLUMN `component` varchar(255);

-- P2P - Adding Indices

ALTER TABLE `p2p_bank_accounts`
    ADD INDEX `p2p_bank_accounts_device_id_handle_index`(`device_id`, `handle`),
    ADD INDEX `p2p_bank_accounts_account_number_ifsc_index`(`account_number`, `ifsc`),
    ADD INDEX `p2p_bank_accounts_created_at_index`(`created_at`);

ALTER TABLE `p2p_beneficiaries`
    ADD INDEX `p2p_beneficiaries_device_id_index`(`device_id`),
    ADD INDEX `p2p_beneficiaries_created_at_index`(`created_at`);

ALTER TABLE `p2p_devices`
    ADD INDEX `p2p_devices_customer_id_index`(`customer_id`),
    ADD INDEX `p2p_devices_contact_index`(`contact`),
    ADD INDEX `p2p_devices_auth_token_index`(`auth_token`),
    ADD INDEX `p2p_devices_created_at_index`(`created_at`);

ALTER TABLE `p2p_device_tokens`
    ADD INDEX `p2p_device_tokens_device_id_handle_status_index`(`device_id`, `handle`, `status`),
    ADD INDEX `p2p_device_tokens_status_index`(`status`),
    ADD INDEX `p2p_device_tokens_created_at_index`(`created_at`);

ALTER TABLE `p2p_register_tokens`
    ADD INDEX `p2p_register_tokens_device_id_handle_status_index`(`device_id`, `handle`, `status`),
    ADD INDEX `p2p_register_tokens_status_index`(`status`),
    ADD INDEX `p2p_register_tokens_created_at_index`(`created_at`);

ALTER TABLE `p2p_transactions`
    ADD INDEX `p2p_transactions_device_id_handle_status_index`(`device_id`, `handle`, `status`),
    ADD INDEX `p2p_transactions_customer_id_index`(`customer_id`),
    ADD INDEX `p2p_transactions_status_index`(`status`),
    ADD INDEX `p2p_transactions_created_at_index`(`created_at`);

ALTER TABLE `p2p_upi_transactions`
    ADD INDEX `p2p_upi_transactions_device_id_handle_index`(`device_id`, `handle`),
    ADD INDEX `p2p_upi_transactions_network_transaction_id_index`(`network_transaction_id`),
    ADD INDEX `p2p_upi_transactions_rrn_index`(`rrn`),
    ADD INDEX `p2p_upi_transactions_gateway_error_code_index`(`gateway_error_code`),
    ADD INDEX `p2p_upi_transactions_created_at_index`(`created_at`);

ALTER TABLE `p2p_vpa`
    ADD INDEX `p2p_vpa_device_id_handle_index`(`device_id`, `handle`),
    ADD INDEX `p2p_vpa_username_handle_index`(`username`, `handle`),
    ADD INDEX `p2p_vpa_bank_account_id_index`(`bank_account_id`),
    ADD INDEX `p2p_vpa_created_at_index`(`created_at`);

ALTER TABLE `p2p_concerns`
    ADD INDEX `p2p_concerns_device_id_handle_index`(`device_id`, `handle`),
    ADD INDEX `p2p_concerns_transaction_id_created_at_index`(`transaction_id`, `created_at`),
    ADD INDEX `p2p_concerns_status_index`(`status`),
    ADD INDEX `p2p_concerns_gateway_reference_id_index`(`gateway_reference_id`),
    ADD INDEX `p2p_concerns_created_at_index`(`created_at`);

-- P2P - Adding Indices

ALTER TABLE `iins`
    ADD COLUMN `product_code` VARCHAR(255) DEFAULT NULL AFTER `sub_type`;

---Virtual VPA----

ALTER TABLE `terminals`
  ADD COLUMN `virtual_upi_root` VARCHAR(20) NULL DEFAULT NULL after `ifsc_code`,
  ADD COLUMN `virtual_upi_merchant_prefix` VARCHAR(20) NULL DEFAULT NULL  after `virtual_upi_root`,
  ADD COLUMN `virtual_upi_handle` VARCHAR(20) NULL DEFAULT NULL after `virtual_upi_merchant_prefix`;

ALTER TABLE `virtual_accounts`
  CHANGE COLUMN`vpa` `vpa_id` VARCHAR(14) NULL DEFAULT NULL;

ALTER TABLE fund_account_validations
    CHANGE COLUMN currency currency CHAR(3) NULL;

ALTER TABLE fund_account_validations
    CHANGE COLUMN amount amount bigint NULL;

ALTER TABLE `mozart`
    ADD INDEX `mozart_payment_id_index` (`payment_id`),
    ADD INDEX `mozart_refund_id_index` (`refund_id`),
    ADD INDEX `mozart_created_at_index` (`created_at`);

ALTER TABLE `terminals`
    ADD INDEX `terminals_bank_transfer_index` (`bank_transfer`);

ALTER TABLE `tokens`
    ADD COLUMN `start_time` INTEGER UNSIGNED DEFAULT NULL AFTER `recurring_failure_reason`;

ALTER TABLE banking_account_statement
    ADD COLUMN utr VARCHAR(255) DEFAULT NULL AFTER type,
    ADD INDEX banking_account_statement_utr_index (utr);

ALTER TABLE external
    ADD COLUMN deleted_at INT UNSIGNED DEFAULT NULL AFTER updated_at,
    ADD INDEX external_deleted_at_index (deleted_at);

ALTER TABLE partner_configs
    ADD COLUMN `default_payment_methods` JSON NULL AFTER `commissions_enabled`;

ALTER TABLE gateway_downtimes
    Add COLUMN psp VARCHAR(255) DEFAULT NULL AFTER method;

ALTER TABLE merchant_details
    ADD COLUMN additional_websites varchar(511) DEFAULT NULL AFTER business_website;

ALTER TABLE fund_transfer_attempts
    ADD COLUMN gateway_ref_no varchar(255) DEFAULT NULL,
    ADD UNIQUE INDEX fund_transfer_attempts_gateway_ref_no_unique (gateway_ref_no);

ALTER TABLE banking_accounts
    ADD COLUMN last_statement_attempt_at INT UNSIGNED DEFAULT NULL AFTER  `updated_at`;

ALTER TABLE `transfers`
    ADD INDEX `transfers_source_id_index` (`source_id`),
    ADD INDEX `transfers_source_type_status_index` (`source_type`, `status`);

// Already ran on production.
ALTER TABLE `terminals`
    CHANGE `gateway_secure_secret` `gateway_secure_secret` TEXT CHARACTER SET utf8 COLLATE utf8_bin NULL,
    CHANGE `gateway_secure_secret2` `gateway_secure_secret2` TEXT CHARACTER SET utf8 COLLATE utf8_bin NULL;

ALTER TABLE worldline
	ADD COLUMN gateway_utr VARCHAR(255) DEFAULT NULL AFTER ref_no;

ALTER TABLE `vpas`
    ADD COLUMN `deleted_at` INTEGER DEFAULT NULL AFTER `updated_at`;

ALTER TABLE `action_checker`
    ADD COLUMN `user_comment` VARCHAR(255) DEFAULT NULL;

ALTER TABLE offers
    ADD COLUMN default_offer bool DEFAULT 0,
    ADD COLUMN max_order_amount int(11) DEFAULT NULL,
    MODIFY type VARCHAR(20);

// For saved vpas.
ALTER TABLE `tokens`
    ADD COLUMN `vpa_id` varchar(14) NULL DEFAULT NULL;

ALTER TABLE `merchant_documents`
    ADD COLUMN `source` enum('API', 'UFH') NOT NULL DEFAULT 'API' ;

ALTER TABLE pricing
     MODIFY COLUMN amount_range_min BIGINT(20) unsigned DEFAULT NULL;

ALTER TABLE payouts
    ADD COLUMN pricing_rule_id char(14) DEFAULT NULL;

ALTER TABLE merchant_details
    ADD COLUMN kyc_id char(14) DEFAULT NULL ;

ALTER TABLE payouts
   ADD COLUMN payout_link_id CHAR(14) DEFAULT NULL AFTER `idempotency_key`,
   ADD INDEX `payouts_payout_link_id_index` (`payout_link_id`);

ALTER TABLE merchants
    ADD COLUMN external_id varchar(255) DEFAULT NULL AFTER partnership_url,
    ADD INDEX `merchants_external_id_index` (`external_id`);

ALTER TABLE legal_entity
    ADD COLUMN external_id varchar(255) DEFAULT NULL AFTER business_subcategory,
    ADD INDEX `legal_entity_external_id_index` (`external_id`);

ALTER TABLE `upi_transfers`
    ADD COLUMN `transaction_reference` VARCHAR (255) DEFAULT NULL;

ALTER TABLE disputes
    ADD COLUMN base_amount BIGINT UNSIGNED DEFAULT NULL AFTER currency,
    ADD COLUMN base_currency CHAR(3) DEFAULT NULL AFTER base_amount,
    ADD COLUMN gateway_amount BIGINT UNSIGNED DEFAULT NULL AFTER base_currency,
    ADD COLUMN gateway_currency CHAR(3) DEFAULT NULL AFTER gateway_amount;

ALTER TABLE banking_accounts
    ADD COLUMN gateway_balance BIGINT DEFAULT NULL,
    ADD COLUMN balance_last_fetched_at INT DEFAULT NULL;

ALTER TABLE `legal_entity`
    modify `mcc` char(4) DEFAULT NULL ;

ALTER TABLE merchant_details
    ADD COLUMN estd_year smallint(4) DEFAULT NULL,
    ADD COLUMN authorized_signatory_residential_address varchar(255) DEFAULT NULL,
    ADD COLUMN authorized_signatory_dob date DEFAULT NULL,
    ADD COLUMN platform varchar(40) DEFAULT NULL;

ALTER TABLE terminals
    ADD COLUMN `sync_status` tinyint(4) NOT NULL DEFAULT '0',
    ADD INDEX `terminals_sync_status_index` (`sync_status`);

ALTER TABLE d2c_bureau_report
    ADD COLUMN csv_report_ufh_file_id varchar(255)  DEFAULT NULL;

ALTER TABLE payout_links
    ADD COLUMN send_sms BOOLEAN DEFAULT false,
    ADD COLUMN send_email BOOLEAN DEFAULT false;

ALTER TABLE users
    ADD COLUMN old_password1 varchar(100) DEFAULT NULL,
    ADD COLUMN old_password2 varchar(100) DEFAULT NULL;

ALTER TABLE banking_account_statement
    MODIFY COLUMN balance BIGINT(20);

ALTER TABLE blade
    MODIFY COLUMN amount BIGINT NOT NULL;

ALTER TABLE merchant_details
    ADD COLUMN fund_account_validation_id char(14) DEFAULT NULL;

ALTER TABLE upi
    CHANGE `email` `gateway_data` VARCHAR(255);

ALTER TABLE balance
    ADD COLUMN locked_balance BIGINT UNSIGNED DEFAULT 0;

ALTER TABLE bank_transfers
    MODIFY COLUMN utr VARCHAR(255) NOT NULL;

ALTER TABLE bank_transfers
    MODIFY COLUMN payer_ifsc VARCHAR(20) DEFAULT NULL;

ALTER TABLE bank_transfers
    ADD COLUMN narration VARCHAR(255) DEFAULT NULL,
    ADD INDEX `narration_payer_ifsc_index` (`narration`, `payer_ifsc`);

ALTER TABLE merchants MODIFY COLUMN whitelisted_domains text COLLATE utf8_bin DEFAULT NULL;

ALTER TABLE webhooks
    ADD COLUMN events2 BIGINT DEFAULT 0 AFTER events;

ALTER TABLE refunds
    ADD COLUMN gateway_amount BIGINT UNSIGNED DEFAULT NULL,
    ADD COLUMN gateway_currency CHAR(3) DEFAULT NULL;

ALTER TABLE terminals
    ADD COLUMN account_type VARCHAR(255) DEFAULT NULL;

ALTER TABLE orders
    ADD COLUMN late_auth_config_id CHAR(14) DEFAULT NULL;

ALTER TABLE merchant_details
ADD INDEX `bank_details_verification_status_index` (`bank_details_verification_status`);

ALTER TABLE merchant_details
ADD COLUMN penny_testing_updated_at INT(11) DEFAULT NULL;

ALTER TABLE merchant_details
    ADD COLUMN `gstin_verification_status` varchar(30) DEFAULT NULL;

// Since all the existing emi plans are credit, we need to add this.
// If not, the duplicate emi plan checks will fail, since the ones existing in db has value null
// and the new requests have value 'credit'.
ALTER TABLE emi_plans
    ADD COLUMN type VARCHAR(255) NOT NULL DEFAULT 'credit';

ALTER TABLE merchant_details
    ADD COLUMN date_of_establishment date DEFAULT NULL;

ALTER TABLE payment_configs
    change `default` `is_default` tinyint(1) NOT NULL DEFAULT '0';

ALTER TABLE disputes
    ADD COLUMN conversion_rate BIGINT UNSIGNED DEFAULT NULL;

ALTER TABLE settlements
    ADD COLUMN is_new_service BOOLEAN DEFAULT 0;

// modify-expire-2038-bigint starts
// Modifying expire columns from int to bigint to support epoch dates beyond 2038
ALTER TABLE subscription_registrations
    MODIFY COLUMN expire_at bigint(20) UNSIGNED DEFAULT NULL;

// commenting this out as not executed
-- ALTER TABLE invoices
--    MODIFY COLUMN expire_by bigint(20) UNSIGNED DEFAULT NULL;

ALTER TABLE paper_mandates
    MODIFY COLUMN end_at bigint(20) UNSIGNED DEFAULT NULL;

ALTER TABLE invoices
    ADD COLUMN big_expire_by bigint(20) UNSIGNED DEFAULT NULL;
// modify-expire-2038-bigint ends

ALTER TABLE payouts
    ADD COLUMN scheduled_at INT DEFAULT NULL,
    ADD INDEX payouts_scheduled_at_index (scheduled_at);

ALTER TABLE payouts
    ADD COLUMN scheduled_on INT DEFAULT NULL,
    ADD INDEX payouts_scheduled_on_index (scheduled_on);

ALTER TABLE orders
    ADD COLUMN checkout_config_id CHAR(14) DEFAULT NULL;

ALTER TABLE merchant_details
    ADD COLUMN `company_pan_verification_status` varchar(30) DEFAULT NULL ;

ALTER TABLE transactions
    CHANGE reference10 posted_at BIGINT UNSIGNED DEFAULT NULL,
    ADD INDEX transactions_balance_idposted_at_index  (`balance_id`, `posted_at`);


// PAYAPPS-1607 - Nach Migration
ALTER TABLE tokens
    ADD COLUMN debit_type VARCHAR(20) DEFAULT NULL,
    ADD COLUMN frequency VARCHAR(20) DEFAULT NULL;

ALTER TABLE pricing
    MODIFY COLUMN payment_method VARCHAR(255) DEFAULT NULL;

ALTER TABLE payment_downtimes
    Add COLUMN vpa_handle VARCHAR(255) DEFAULT NULL;

ALTER TABLE gateway_downtimes
    Add COLUMN vpa_handle VARCHAR(255) DEFAULT NULL AFTER method;

ALTER TABLE orders
    ADD COLUMN product_id CHAR(14) DEFAULT NULL,
    ADD COLUMN product_type VARCHAR(255) DEFAULT NULL;

ALTER TABLE merchant_banks
    Add COLUMN cred TINYINT(4) NOT NULL DEFAULT 0;

ALTER TABLE terminals
    ADD COLUMN cred TINYINT(1) NOT NULL DEFAULT 0;

ALTER TABLE terminals
    ADD COLUMN offline TINYINT(1) NOT NULL DEFAULT 0;

ALTER TABLE promotions
    ADD COLUMN product varchar(255) DEFAULT NULL,
    ADD COLUMN event_id char(14) DEFAULT NULL,
    ADD COLUMN start_at int DEFAULT NULL,
    ADD COLUMN end_at int DEFAULT NULL,
    ADD COLUMN activated_at int DEFAULT NULL,
    ADD COLUMN deactivated_at int DEFAULT NULL,
    ADD COLUMN status varchar(255) DEFAULT NULL,
    ADD COLUMN deactivated_by varchar(255) DEFAULT NULL,
    ADD COLUMN reference1 varchar(255) DEFAULT NULL,
    ADD COLUMN reference2 varchar(255) DEFAULT NULL,
    ADD COLUMN reference3 varchar(255) DEFAULT NULL,
    ADD COLUMN reference4 varchar(255) DEFAULT NULL,
    ADD COLUMN reference5 varchar(255) DEFAULT NULL;

ALTER TABLE credits
    ADD COLUMN product VARCHAR(255) DEFAULT NULL,
    ADD COLUMN remarks VARCHAR(255) DEFAULT NULL,
    ADD COLUMN idempotency_key VARCHAR(255) DEFAULT NULL,
    ADD COLUMN batch_id VARCHAR(255) DEFAULT NULL,
    ADD COLUMN creator_name VARCHAR(255) DEFAULT NULL,
    ADD COLUMN balance_id CHAR(14) DEFAULT NULL;

// update methods in emi_plans for bajajfinserv to card.
UPDATE emi_plans SET method="card" WHERE network="BAJAJ" and deleted_at IS NULL LIMIT 11;

ALTER TABLE payment_links
    ADD COLUMN view_type VARCHAR(255) DEFAULT `page`;

ALTER TABLE payouts
    ADD COLUMN batch_submitted_at INT DEFAULT NULL;

ALTER TABLE merchant_banks
    Add COLUMN cred TINYINT(1) NOT NULL DEFAULT 0;

ALTER TABLE bank_transfers
    ADD COLUMN unexpected_reason VARCHAR(255) DEFAULT NULL;

ALTER TABLE upi_transfers
    ADD COLUMN unexpected_reason VARCHAR(255) DEFAULT NULL;

ALTER TABLE merchant_details
    ADD COLUMN `cin_verification_status` varchar(30) DEFAULT NULL;

ALTER TABLE merchants
    ADD COLUMN product_international VARCHAR(50) DEFAULT '0000000000' AFTER international;

ALTER TABLE merchant_banks
    Add COLUMN apps SMALLINT UNSIGNED DEFAULT 0;

Alter TABLE merchant_banks
    ADD COLUMN upi_type TINYINT(1) NOT NULL DEFAULT 3;

ALTER TABLE merchant_banks
    Add COLUMN debit_emi_providers SMALLINT UNSIGNED DEFAULT NULL;

ALTER TABLE orders
    ADD COLUMN app_offer TINYINT(1) DEFAULT 0;

ALTER TABLE webhooks
    ADD COLUMN deleted_at INTEGER;

ALTER TABLE credit_transaction
    MODIFY COLUMN transaction_id CHAR(14) DEFAULT NULL,
    ADD COLUMN entity_id CHAR(14) DEFAULT NULL,
    ADD COLUMN entity_type VARCHAR(255) DEFAULT NULL;

ALTER TABLE d2c_bureau_reports
    ADD COLUMN error_code varchar(255) DEFAULT NULL,
    MODIFY COLUMN score smallint(5) UNSIGNED DEFAULT NULL,
    MODIFY COLUMN report json DEFAULT NULL,
    MODIFY COLUMN ufh_file_id char(255) DEFAULT NULL;

ALTER TABLE `pricing`
    ADD INDEX  `pricing_plan_name_plan_id_index` (`plan_name`,`plan_id`),

ALTER TABLE payment_meta
    MODIFY COLUMN forex_rate decimal(20,6);

ALTER TABLE payment_page_items
    ADD COLUMN product_config json DEFAULT NULL;

ALTER TABLE merchant_details
    MODIFY COLUMN additional_websites TEXT default NULL;

ALTER TABLE upi_metadata
    ADD COLUMN `mode` CHAR(25) DEFAULT NULL,
    ADD COLUMN `reference` VARCHAR(100) DEFAULT NULL,
    ADD COLUMN `npci_txn_id` VARCHAR(100) DEFAULT NULL,
    ADD COLUMN `rrn` CHAR(12) DEFAULT NULL,
    ADD COLUMN `umn` VARCHAR(255) DEFAULT NULL,
    ADD COLUMN `internal_status` VARCHAR(100) DEFAULT NULL,
    ADD COLUMN `reminder_id` CHAR(14) DEFAULT NULL,
    ADD COLUMN `remind_at` INTEGER DEFAULT NULL;

ALTER TABLE payment_configs
    ADD COLUMN is_deleted BOOLEAN DEFAULT 0 NOT NULL;

ALTER TABLE payment_downtimes
    Add COLUMN psp VARCHAR(255) DEFAULT NULL;

ALTER TABLE upi_mandates
    CHANGE `gateway_reference_id` `gateway_data` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
    ADD `used_count` INT UNSIGNED DEFAULT NULL AFTER `gateway_data`,
    ADD `late_confirmed` TINYINT DEFAULT NULL AFTER `used_count`,
    ADD `confirmed_at` INT UNSIGNED DEFAULT NULL AFTER `late_confirmed`;

ALTER TABLE payments
    ADD COLUMN public_key VARCHAR(100) DEFAULT NULL;

ALTER TABLE merchants
ADD COLUMN signup_source VARCHAR(32);

ALTER TABLE mpan
    MODIFY COLUMN mpan varchar(50) COLLATE utf8_bin NOT NULL;

ALTER TABLE terminals
    MODIFY COLUMN mc_mpan varchar(50) COLLATE utf8_bin DEFAULT NULL,
    MODIFY COLUMN visa_mpan varchar(50) COLLATE utf8_bin DEFAULT NULL,
    MODIFY COLUMN rupay_mpan varchar(50) COLLATE utf8_bin DEFAULT NULL;

ALTER TABLE pricing
    ADD COLUMN payouts_filter VARCHAR(255) DEFAULT NULL;

ALTER TABLE payouts
    ADD COLUMN fee_type VARCHAR(255) DEFAULT NULL;

ALTER TABLE contacts
    ADD  INDEX contacts_name_merchant_id_index (`name`, `merchant_id`);

ALTER TABLE discounts
    MODIFY COLUMN offer_id char(14) default NULL,
    MODIFY COLUMN order_id char(14) default NULL;

UPDATE fund_transfer_attempts
    SET status = "initiated",
    remarks = NULL,
    updated_at = UNIX_TIMESTAMP(NOW())
    WHERE source_id IN ('FHKYmHGekbic03', 'FIOuIze6sRDcGD', 'FIzUqdEPkaa032', 'FJ4W9tvbBk0zxq', 'FJQlp0zFPpCWt5', 'FJUURD5n6TWaKw', 'FMbayQU6PwuQyH', 'FMbh3nP121xxsV', 'FMcLen9NCrTThy');

UPDATE fund_transfer_attempts
	SET status="initiated",
	bank_status_code=NULL,
	updated_at=UNIX_TIMESTAMP(NOW())
	WHERE source_id IN ('FHqJt5cGPPhAw3', 'FHqJp2X05SN3fv', 'FHqJfb28W7tj0i', 'FHqJOEPV2SbIVZ', 'FHqJAhlyR2jPZP', 'FHqJ1V3Gh5CIEs', 'FFNaQ6jXmVaVpY', 'FFNaNERoYYz5iK', 'FIJdGfgjOcDQA0', 'FHRUoxyltBxB6i');

ALTER TABLE virtual_accounts
    ADD COLUMN source VARCHAR(255) DEFAULT NULL;

ALTER table banking_accounts
    ADD sub_status varchar(64);

ALTER table banking_account_state
    ADD sub_status varchar(64);

ALTER table banking_account_comments
    ADD type varchar(64);

ALTER table banking_account_activation_details
    ADD assignee_team varchar(64);

ALTER table banking_account_activation_details
	ADD COLUMN rm_name varchar(255),
	ADD COLUMN rm_phone_number varchar(255),
	ADD COLUMN account_open_date int(11);

ALTER table banking_account_activation_details
	ADD COLUMN business_pan varchar(255) DEFAULT NULL,
	ADD COLUMN business_name varchar(255) DEFAULT NULL,
	ADD COLUMN business_type varchar(255) DEFAULT NULL,
	ADD COLUMN contact_verified TINYINT(1) Default 0,
	ADD COLUMN merchant_state VARCHAR(255) DEFAULT NULL,
	ADD COLUMN declaration_step TINYINT(1) DEFAULT NULL;

ALTER table banking_account_activation_details
	ADD COLUMN business_pan_validation varchar(255) DEFAULT NULL;

ALTER table banking_account_activation_details
	ADD COLUMN bank_poc_user_id CHAR(14) DEFAULT NULL;

ALTER table banking_account_activation_details
   ADD COLUMN rbl_activation_details json DEFAULT NULL,
   ADD COLUMN customer_appointment_date int DEFAULT NULL,
   ADD COLUMN branch_code varchar(10) COLLATE utf8_bin DEFAULT NULL,
   ADD COLUMN rm_employee_code varchar(10) COLLATE utf8_bin DEFAULT NULL,
   ADD COLUMN rm_assignment_type varchar(64) COLLATE utf8_bin DEFAULT NULL,
   ADD COLUMN doc_collection_date int DEFAULT NULL,
   ADD COLUMN account_opening_ir_close_date int DEFAULT NULL,
   ADD COLUMN account_opening_ftnr tinyint(1) DEFAULT NULL,
   ADD COLUMN account_opening_ftnr_reasons text COLLATE utf8_bin,
   ADD COLUMN api_ir_closed_date int DEFAULT NULL,
   ADD COLUMN ldap_id_mail_date int DEFAULT NULL,
   ADD COLUMN api_onboarding_ftnr tinyint(1) DEFAULT NULL,
   ADD COLUMN api_onboarding_ftnr_reasons text COLLATE utf8_bin,
   ADD COLUMN upi_credential_received_date int DEFAULT NULL,
   ADD COLUMN rzp_ca_activated_date int DEFAULT NULL,
   ADD COLUMN drop_off_date int DEFAULT NULL;

ALTER table banking_account_state
    ADD COLUMN user_id char(14) DEFAULT NULL;

ALTER TABLE banking_account_comments
    ADD COLUMN user_id char(14) DEFAULT NULL;

ALTER TABLE orders
    MODIFY COLUMN payment_capture TINYINT(1) DEFAULT NULL;

ALTER TABLE payouts ADD COLUMN workflow_feature TINYINT(1) default NULL;

ALTER TABLE users
    MODIFY COLUMN password VARCHAR(100) COLLATE utf8_bin NULL,
    ADD COLUMN oauth_provider json DEFAULT NULL;

ALTER TABLE tokens
    MODIFY COLUMN customer_id CHAR(14) NULL,
    ADD COLUMN entity_id CHAR(14),
    ADD COLUMN entity_type VARCHAR(255);

ALTER TABLE merchants
    ADD COLUMN account_code VARCHAR(255) DEFAULT NULL;

ALTER TABLE transfers
    ADD COLUMN account_code VARCHAR(255) DEFAULT NULL,
    ADD COLUMN account_code_used TINYINT(1) DEFAULT 0;

ALTER TABLE `partner_configs` CHANGE COLUMN `tds_percentage` `tds_percentage` INT(11) NOT NULL DEFAULT 375;

ALTER TABLE bvs_validation
    CHANGE COLUMN `status` `validation_status` enum('success','failed','captured') not null;

ALTER TABLE payment_analytics
    ADD COLUMN virtual_device_id VARCHAR(100) DEFAULT NULL;

ALTER TABLE paper_mandates
	ADD COLUMN generated_form_url varchar(255),
	ADD COLUMN generated_form_url_expire int(11);

ALTER table banking_account_state
    ADD COLUMN assignee_team varchar(64);

ALTER TABLE payouts
    ADD COLUMN origin TINYINT(1) default 1;

ALTER TABLE payouts
    ADD COLUMN create_request_submitted_at INT DEFAULT NULL;

ALTER TABLE payments
    ADD COLUMN authenticated_at INTEGER;

ALTER TABLE payments_meta
    ADD COLUMN action_type VARCHAR(255) DEFAULT NULL,
    ADD COLUMN reference_id VARCHAR(255) DEFAULT NULL,
    ADD INDEX payments_meta_reference_id_action_type_index (reference_id,action_type);

ALTER TABLE bvs_validation
    ADD INDEX bvs_validation_owner_id_index (owner_id);

ALTER TABLE merchant_documents
    ADD COLUMN validation_id varchar(14) DEFAULT NULL;

--- Payments UPI Database Changes
ALTER TABLE `vpas`
    ADD `status` CHAR(40) NULL DEFAULT NULL,
    ADD `received_at` INT UNSIGNED NULL DEFAULT NULL,
    ADD INDEX vpas_username_index (`username`);

ALTER TABLE `qr_code`
    ADD COLUMN `mpans_tokenized` TINYINT(1) DEFAULT NULL;

Alter TABLE `orders`
    ADD COLUMN `pg_router_synced` TINYINT(4);

ALTER TABLE banking_accounts
    ADD UNIQUE KEY channel_account_number (account_number, channel);

ALTER TABLE merchant_details
    ADD COLUMN `personal_pan_doc_verification_status` varchar(30) DEFAULT NULL,
    ADD COLUMN `company_pan_doc_verification_status` varchar(30) DEFAULT NULL;

ALTER TABLE bvs_validation
    ADD COLUMN `validation_unit` enum('identifier','proof') DEFAULT NULL;

ALTER TABLE workflow_actions
    ADD COLUMN `owner_id` char(14) DEFAULT NULL AFTER `permission_id`;

ALTER TABLE merchant_details
    ADD COLUMN bank_details_doc_verification_status varchar(30) DEFAULT NULL;

ALTER TABLE
    `upi_metadata_new` ADD `app` VARCHAR(255) NULL DEFAULT NULL,
    ADD `origin` VARCHAR(100) NULL DEFAULT NULL,
    ADD `flag` VARCHAR(100) NULL DEFAULT NULL;

ALTER TABLE disputes
    ADD COLUMN email_notification_status varchar(50) DEFAULT NULL,
    ADD INDEX disputes_expires_on_email_notification_index (expires_on,email_notification_status);

ALTER TABLE payouts
    ADD COLUMN status_code VARCHAR(255) DEFAULT NULL;

ALTER TABLE p2p_bank_accounts
    ADD COLUMN type VARCHAR(50) DEFAULT NULL;

ALTER TABLE fund_transfer_attempts
    DROP INDEX fund_transfer_attempts_utr_unique;

ALTER TABLE payouts
    DROP INDEX payouts_return_utr_unique;

ALTER TABLE external
    ADD COLUMN remarks VARCHAR(255) DEFAULT NULL;

ALTER TABLE merchant_details
    ADD COLUMN shop_establishment_number varchar(30) DEFAULT NULL;

ALTER TABLE merchant_details
    ADD COLUMN shop_establishment_verification_status varchar(30) DEFAULT NULL;

ALTER TABLE payouts
    ADD COLUMN transferred_at INT DEFAULT NULL;

ALTER table banking_account_activation_details
	ADD COLUMN account_login_date int(11);

ALTER TABLE `merchant_details`
    MODIFY COLUMN shop_establishment_number varchar(100) DEFAULT NULL;

ALTER TABLE bank_transfer_requests
	ADD INDEX bank_transfer_requests_created_at_index (created_at);

ALTER TABLE creditnote
	MODIFY COLUMN customer_id char(14);

ALTER TABLE creditnote_invoices
	MODIFY COLUMN customer_id varchar(14);

ALTER TABLE orders
    CHANGE COLUMN reference10 public_key VARCHAR(255) DEFAULT null;

ALTER TABLE settlement_ondemand_payouts
    ADD COLUMN entity_type VARCHAR(255);

ALTER TABLE entity_offer
    ADD COLUMN entity_offer_type VARCHAR(50) DEFAULT 'offer';

ALTER TABLE rewards
    ADD COLUMN merchant_website_redirect_link VARCHAR(255) DEFAULT null;

ALTER TABLE offers
    ADD COLUMN product_type VARCHAR(20) DEFAULT NULL;

ALTER TABLE invoices
    ADD COLUMN offer_amount int(11) UNSIGNED DEFAULT NULL;

ALTER TABLE bank_transfer_requests
    ADD COLUMN request_source JSON DEFAULT NULL;

ALTER TABLE stakeholders
    ADD COLUMN pan_doc_status VARCHAR(30) DEFAULT NULL;

ALTER TABLE payouts
    ADD COLUMN cancellation_user_id CHAR (14) DEFAULT NULL;

ALTER TABLE upi_transfer_requests
    ADD COLUMN request_source JSON DEFAULT NULL;

ALTER TABLE merchant_details
    ADD COLUMN client_applications JSON DEFAULT NULL;

ALTER TABLE payment_downtimes
    ADD COLUMN merchant_id CHAR(14) DEFAULT NULL;

ALTER TABLE gateway_downtimes
    ADD COLUMN merchant_id CHAR(14) DEFAULT NULL;

ALTER TABLE gateway_downtimes_archive
    ADD COLUMN merchant_id CHAR(14) DEFAULT NULL;

ALTER TABLE stakeholders
    ADD INDEX stakeholders_merchant_id_index (merchant_id);

ALTER TABLE settlement_ondemand_payouts
    MODIFY COLUMN mode VARCHAR(255);

ALTER TABLE tokens
    ADD COLUMN card_mandate_id CHAR(14);

ALTER TABLE merchant_details
    ADD COLUMN business_suggested_pin VARCHAR(255) DEFAULT NULL;

ALTER TABLE merchant_details
    ADD COLUMN business_suggested_address VARCHAR(255) DEFAULT NULL;

ALTER TABLE action_state
    ADD INDEX action_state_merchant_id_index (merchant_id);

ALTER TABLE payment_meta
    ADD COLUMN mismatch_amount BIGINT(20) UNSIGNED DEFAULT NULL,
    ADD COLUMN mismatch_amount_reason VARCHAR(255) COLLATE utf8_bin DEFAULT NULL;

ALTER TABLE merchant_documents
    ADD COLUMN entity_id CHAR(14) DEFAULT NULL,
    ADD INDEX `merchant_documents_entity_id_index` (`entity_id`);

ALTER TABLE merchant_details
    ADD COLUMN fraud_type VARCHAR(100) DEFAULT NULL;

ALTER TABLE stakeholders
    ADD COLUMN aadhaar_esign_status VARCHAR(30) DEFAULT NULL,
    ADD COLUMN aadhaar_pin VARCHAR(30) DEFAULT NULL,
    ADD COLUMN aadhaar_linked BOOLEAN DEFAULT 1;

INSERT INTO mozart (payment_id, action, gateway, amount, created_at, updated_at, raw)
       VALUES ('GOLOnKDdCCqMuP', 'authorize', 'upi_juspay',299700, 1611044604, 1611044604, '{}');

ALTER TABLE survey_tracker
    ADD COLUMN skip_in_app TINYINT(1) NOT NULL DEFAULT 0;

ALTER TABLE survey
    ADD COLUMN type VARCHAR(30) DEFAULT NULL,
    ADD COLUMN survey_url VARCHAR(255) DEFAULT NULL;

ALTER TABLE payment_meta
    MODIFY COLUMN dcc_mark_up_percent decimal(5,2) DEFAULT NULL;

ALTER TABLE commission_invoice
    ADD INDEX commission_invoice_merchant_id_index (`merchant_id`);

ALTER TABLE referrals
    ADD COLUMN product varchar(255) NOT NULL DEFAULT 'primary',
    DROP INDEX referrals_merchant_id_unique,
    ADD UNIQUE INDEX referrals_merchant_id_product_unique (merchant_id,product);

ALTER TABLE banking_account_statement_details
    ADD COLUMN last_statement_attempt_at INT DEFAULT NULL;

ALTER TABLE payouts
    ADD COLUMN registered_name varchar(255) CHARACTER SET uft8mb4 COLLATE utf8mb4_bin DEFAULT NULL;

ALTER TABLE stakeholders
    ADD COLUMN aadhaar_verification_with_pan_status VARCHAR(30) DEFAULT NULL,
    ADD COLUMN bvs_probe_id VARCHAR(30) DEFAULT NULL;

ALTER TABLE bvs_validation
    ADD COLUMN rule_execution_list JSON DEFAULT NULL;

ALTER TABLE orgs
    ADD COLUMN merchant_second_factor_auth BOOLEAN DEFAULT 0 NOT NULL,
    ADD COLUMN merchant_max_wrong_2fa_attempts INTEGER DEFAULT 9 NOT NULL,
    ADD COLUMN admin_second_factor_auth BOOLEAN DEFAULT 0 NOT NULL,
    ADD COLUMN admin_max_wrong_2fa_attempts INTEGER DEFAULT 9 NOT NULL,
    ADD COLUMN second_factor_auth_mode VARCHAR(255) DEFAULT 'sms' NOT NULL;

ALTER table banking_account_statement
    modify column entity_id char(14) null,
    modify column transaction_id char(14) null,
    modify column entity_type varchar(255) null;

ALTER TABLE rewards
    ADD COLUMN brand_name CHAR(26) DEFAULT NULL;

ALTER TABLE qr_payment_request
    MODIFY bharat_qr_id varchar(14);

ALTER TABLE qr_payment_request
    MODIFY upi_id varchar(14);

ALTER table fund_accounts
    ADD COLUMN unique_hash VARCHAR(255) DEFAULT NULL,
    ADD INDEX fund_accounts_unique_hash_index (unique_hash);

ALTER TABLE banking_account_tpvs
    ADD COLUMN trimmed_payer_account_number varchar(255) DEFAULT NULL,
    ADD UNIQUE INDEX banking_account_tpvs_merchant_id_account_number_uq_index (merchant_id, trimmed_payer_account_number);

ALTER TABLE merchant_details
    ADD COLUMN bas_business_id VARCHAR(14) DEFAULT NULL;

ALTER TABLE card_mandates
	ADD mandate_card_id varchar(20),
	ADD debit_type varchar(20),
	ADD currency char(3),
	ADD max_amount bigint,
	ADD amount bigint,
	ADD start_at int unsigned,
	ADD end_at int unsigned,
	ADD total_cycles int,
	ADD mandate_interval int,
	ADD frequency varchar(20),
	ADD paused_by varchar(30),
	ADD cancelled_by varchar(30),
	ADD mandate_card_name varchar(255),
	ADD mandate_card_last4 varchar(4),
	ADD mandate_card_network varchar(20),
	ADD mandate_card_type varchar(10),
	ADD mandate_card_issuer varchar(10),
	ADD mandate_card_international tinyint;

ALTER TABLE banking_account_tpvs
    DROP INDEX banking_account_tpvs_merchant_id_account_number_uq_index;

ALTER TABLE `partner_configs` CHANGE COLUMN `tds_percentage` `tds_percentage` INT(11) NOT NULL DEFAULT 500;

ALTER TABLE payouts
    ADD COLUMN is_payout_service TINYINT(1) DEFAULT 0;

ALTER TABLE settlement_ondemand_feature_configs
   ADD COLUMN pricing_percent int unsigned;

ALTER TABLE card_mandates
    ADD COLUMN mandate_hub varchar(30);

ALTER TABLE workflow_actions
    ADD COLUMN assigned_at INTEGER DEFAULT NULL;

ALTER TABLE merchant_details
    ADD COLUMN msme_doc_verification_status varchar(30) DEFAULT NULL;

ALTER TABLE admins
    ADD COLUMN wrong_2fa_attempts INTEGER DEFAULT 0 NOT NULL;


ALTER TABLE merchants
    ADD COLUMN amount_credits_threshold BIGINT UNSIGNED DEFAULT NULL;

ALTER TABLE merchants
    ADD COLUMN refund_credits_threshold BIGINT UNSIGNED DEFAULT NULL;

ALTER TABLE banking_account_statement_details
    ADD COLUMN pagination_key VARCHAR(255) DEFAULT NULL;

ALTER TABLE credits MODIFY COLUMN value BIGINT, MODIFY COLUMN used BIGINT;

ALTER TABLE credit_transaction MODIFY COLUMN credits_used BIGINT;

ALTER TABLE payouts
    ADD COLUMN queued_reason varchar(255) DEFAULT NULL;

ALTER TABLE users
    ADD INDEX users_contact_mobile_index (contact_mobile);

ALTER TABLE payouts
    ADD COLUMN on_hold_at bigint unsigned DEFAULT NULL;

ALTER TABLE merchant_details
    ADD COLUMN activation_form_milestone varchar(30) DEFAULT NULL;

ALTER TABLE merchant_rewards
    ADD COLUMN deactivated_at INTEGER DEFAULT NULL;

ALTER TABLE terminals
    ADD COLUMN enabled_apps json DEFAULT NULL;

ALTER TABLE terminals
    ADD COLUMN app TINYINT(1) NOT NULL DEFAULT 0;

ALTER TABLE qr_code
    ADD COLUMN tax_invoice JSON;

ALTER TABLE terminals
    ADD COLUMN enabled_wallets json DEFAULT NULL;

ALTER TABLE `transfers`
    ADD COLUMN `error_code` VARCHAR(150) DEFAULT NULL,
    ADD COLUMN `settlement_status` VARCHAR(30) DEFAULT NULL;

ALTER TABLE disputes
    ADD COLUMN deduction_source_type varchar(30) DEFAULT NULL,
    ADD COLUMN deduction_source_id char(14) DEFAULT NULL;

ALTER TABLE disputes
    ADD COLUMN internal_status varchar(50) DEFAULT 'open',
    ADD COLUMN internal_respond_by int DEFAULT NULL;

ALTER TABLE rewards
    ADD COLUMN unique_coupons_exist TINYINT(1) DEFAULT 0 NOT NULL
    ADD COLUMN unique_coupons_exhausted TINYINT(1) DEFAULT 0 NOT NULL
    MODIFY COLUMN coupon_code VARCHAR(255) COLLATE utf8_bin;

ALTER TABLE merchants
   ADD COLUMN purpose_code VARCHAR(5) DEFAULT NULL;

ALTER TABLE banking_account_activation_details
    ADD additional_details json
    DEFAULT NULL;

ALTER TABLE merchant_business_details
   ADD COLUMN app_urls json DEFAULT NULL;

ALTER TABLE iins
    ADD COLUMN mandate_hubs INTEGER UNSIGNED DEFAULT 0;

ALTER TABLE merchant_banks
    ADD COLUMN additional_wallets json DEFAULT NULL;

ALTER TABLE disputes
    ADD COLUMN lifecycle json DEFAULT NULL;

ALTER TABLE paytm
    MODIFY COLUMN banktxnid VARCHAR(30);

ALTER TABLE card_mandate_notifications
    ADD COLUMN debit_at INTEGER UNSIGNED,
    ADD COLUMN afa_required TINYINT(1),
    ADD COLUMN afa_status VARCHAR(20),
    ADD COLUMN afa_completed_at INTEGER UNSIGNED;

ALTER TABLE bvs_validation
MODIFY COLUMN platform enum('pg', 'capital', 'rx') NOT NULL;

ALTER TABLE virtual_account_tpv
    ADD COLUMN deleted_at INTEGER DEFAULT NULL;

ALTER TABLE partner_activation
    ADD COLUMN reviewer_id char(14) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL;

ALTER TABLE iins
    ADD COLUMN cobranding_partner VARCHAR(20);

ALTER TABLE `merchant_access_map`
    ADD COLUMN `has_kyc_access` TINYINT(1) NOT NULL DEFAULT 0;

ALTER TABLE emi_plans
    ADD COLUMN cobranding_partner VARCHAR(20);

ALTER TABLE merchant_banks
    ADD COLUMN cod TINYINT(1) DEFAULT 0;

ALTER TABLE disputes
    ADD COLUMN deduction_reversal_at INTEGER DEFAULT NULL;

ALTER TABLE addresses
    ADD COLUMN tag varchar(32) DEFAULT NULL,
    ADD COLUMN landmark varchar(64) DEFAULT NULL,
    ADD COLUMN name varchar(64) DEFAULT NULL,
    ADD COLUMN contact varchar(20) DEFAULT NULL;
);

CREATE TABLE merchant_slabs
(
    id CHAR(14) collate utf8mb4_bin,
    slab JSON,
    type VARCHAR(64),
    merchant_id CHAR(14) collate utf8mb4_bin,
    created_at bigint,
    deleted_at bigint DEFAULT NULL,
    updated_at bigint
);

CREATE TABLE merchant_1cc_configs
(
  id char(14) NOT NULL collate utf8mb4_bin,
  merchant_id char(14) NOT NULL collate utf8mb4_bin,
  config varchar(50) NOT NULL,
  value varchar(255) NOT NULL,
  created_at bigint NOT NULL,
  updated_at bigint NOT NULL,
  deleted_at bigint DEFAULT NULL
);


ALTER TABLE card_mandates
   MODIFY COLUMN end_at bigint DEFAULT NULL;

CREATE TABLE `fund_loading_downtimes` (
`id` char(14) COLLATE utf8_bin NOT NULL,
`type` varchar(50) COLLATE utf8_bin NOT NULL,
`source` varchar(20) COLLATE utf8_bin NOT NULL,
`channel` varchar(20) COLLATE utf8_bin NOT NULL,
`mode` varchar(20) COLLATE utf8_bin NOT NULL,
`start_time` int NOT NULL,
`end_time` int DEFAULT NULL,
`downtime_message` text COLLATE utf8_bin,
`created_by` varchar(255) COLLATE utf8_bin NOT NULL,
`created_at` int NOT NULL,
`updated_at` int NOT NULL,
PRIMARY KEY (`id`),
KEY `fund_loading_downtimes_start_time_end_time_index` (`start_time`,`end_time`),
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE utf8_bin

ALTER TABLE vpas
    ADD INDEX vpa_entity_id_entity_type_index (entity_id, entity_type);

ALTER TABLE `merchant_documents`
    ADD COLUMN `upload_by_admin_id` char(14) DEFAULT NULL;

ALTER TABLE user_device_details
    ADD COLUMN signup_source varchar(50) DEFAULT NULL;

ALTER TABLE qr_code_config
    DROP COLUMN payment_method,
    DROP COLUMN gateway,
    DROP COLUMN provider,
    DROP COLUMN config,
    DROP COLUMN disabled_at;

ALTER TABLE qr_code_config
    ADD COLUMN deleted_at INTEGER DEFAULT NULL,
    ADD COLUMN cutoff_time INTEGER DEFAULT NULL;

ALTER TABLE card_mandate_notifications
    MODIFY COLUMN payment_id char(14),
    ADD COLUMN amount BIGINT,
    ADD COLUMN currency CHAR(3),
    ADD COLUMN purpose text,
    ADD COLUMN notes text;

ALTER TABLE card_mandate_notifications
    ADD INDEX `card_mandate_notification_payment_id_index` (`payment_id`);

ALTER TABLE qr_code_config
    DROP COLUMN cutoff_time,
    ADD COLUMN config_key varchar(50) NOT NULL,
    ADD COLUMN config_value text NOT NULL;

ALTER TABLE merchant_documents
    ADD COLUMN document_date INTEGER UNSIGNED DEFAULT NULL;

ALTER TABLE banking_account_statement_details
    ADD COLUMN account_type varchar(20) DEFAULT 'direct';

ALTER TABLE cards
    ADD COLUMN token_iin char(9) DEFAULT NULL;

CREATE TABLE payouts_status_details
(
    id char(14) COLLATE utf8mb4_bin NOT NULL PRIMARY KEY,
    payout_id char(14) COLLATE utf8mb4_bin NOT NULL,
    status varchar(15) NOT NULL,
    reason varchar(55),
    description varchar(255),
    mode varchar(50) NOT NULL,
    triggered_by varchar(255) DEFAULT NULL,
    created_at int NOT NULL,
    updated_at int NOT NULL,
    KEY payouts_status_details_payout_id_index (payout_id)
);

CREATE TABLE `app_attribution_details` (
  `id` char(14) COLLATE utf8_bin NOT NULL,
  `merchant_id` char(14) COLLATE utf8_bin NOT NULL,
  `user_id` char(14) COLLATE utf8_bin NOT NULL,
  `appsflyer_id` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `install_time` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `event_type` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `event_time` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `campaign_attributes` json DEFAULT NULL,
  `contributor_1_attributes` json DEFAULT NULL,
  `contributor_2_attributes` json DEFAULT NULL,
  `contributor_3_attributes` json DEFAULT NULL,
  `device_type` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `device_category` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `platform` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `os_version` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `app_version` varchar(50) COLLATE utf8_bin DEFAULT NULL,
  `created_at` int NOT NULL,
  `updated_at` int NOT NULL,
  PRIMARY KEY (`id`),
  KEY `app_attribution_details_merchant_id_index` (`merchant_id`),
  KEY `app_attribution_details_user_id_index` (`user_id`),
  KEY `app_attribution_details_created_at_index` (`created_at`),
  KEY `app_attribution_details_updated_at_index` (`updated_at`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;

 CREATE TABLE m2m_referrals
  (
     id              CHAR(14) COLLATE utf8mb4_bin PRIMARY KEY,
     merchant_id     CHAR(14) COLLATE utf8mb4_bin NOT NULL,
     referrer_id     CHAR(14) COLLATE utf8mb4_bin DEFAULT NULL,
     metadata        JSON DEFAULT NULL,
     status          VARCHAR(30) DEFAULT NULL,
     referrer_status VARCHAR(30) DEFAULT NULL,
     created_at      INT NOT NULL,
     updated_at      INT NOT NULL,
     KEY m2m_referrals_merchant_id_index (merchant_id),
     KEY m2m_referrals_referrer_id_index (referrer_id)
  );

ALTER TABLE `merchant_freshdesk_tickets` ADD COLUMN `created_by` varchar(64) DEFAULT NULL , ADD COLUMN `status` tinyint(1) NOT NULL DEFAULT 0 ;

ALTER TABLE merchant_notification_configs
    ADD COLUMN `notification_type` VARCHAR(63) COLLATE utf8_bin NULL DEFAULT 'bene_bank_downtime',
    MODIFY COLUMN `upper_threshold` INT NULL DEFAULT NULL,
    MODIFY COLUMN `lower_threshold` INT NULL DEFAULT NULL,
    MODIFY COLUMN `mode` VARCHAR(255) COLLATE utf8_bin NULL DEFAULT NULL,
    MODIFY COLUMN `notification_emails` text COLLATE utf8_bin NULL DEFAULT NULL,
    MODIFY COLUMN `notification_mobile_numbers` text COLLATE utf8_bin NULL DEFAULT NULL,
    ADD INDEX `mnc_notification_type_merchant_id_index` (`notification_type`,`merchant_id`);

ALTER TABLE users MODIFY email varchar(255) DEFAULT NULL;
ALTER TABLE users ADD COLUMN signup_via_email TINYINT(1) DEFAULT 1 NOT NULL;
ALTER TABLE merchants ADD COLUMN signup_via_email TINYINT(1) DEFAULT 1 NOT NULL;
ALTER TABLE merchants MODIFY email varchar(255) DEFAULT NULL;

CREATE TABLE merchant_1cc_auth_configs
(
    id char(14) NOT NULL collate utf8mb4_bin,
    merchant_id char(14) NOT NULL collate utf8mb4_bin,
    platform varchar(50) NOT NULL,
    config varchar(50) NOT NULL,
    value varchar(1000) NOT NULL,
    created_at int NOT NULL,
    updated_at int NOT NULL,
    deleted_at int DEFAULT NULL,
    PRIMARY KEY (id),
    ADD INDEX merchant_1cc_auth_configs_merchant_id_index (merchant_id)
);

ALTER TABLE merchants
    ADD COLUMN max_international_payment_amount INTEGER UNSIGNED NULL;

CREATE TABLE raw_addresses
(
    id char(14) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
    merchant_id char(14) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
    batch_id char(14) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
    contact char(13) NOT NULL,
    name varchar(50) NOT NULL,
    line1 varchar(255) NOT NULL,
    line2 varchar(255) DEFAULT NULL,
    zipcode varchar(12) NOT NULL,
    city varchar(100) NOT NULL,
    state varchar(100) NOT NULL,
    country varchar(100) NOT NULL,
    tag varchar(50) DEFAULT NULL,
    landmark varchar(255) DEFAULT NULL,
    status varchar(20) DEFAULT 'pending',
    created_at int NOT NULL,
    deleted_at int DEFAULT NULL,
    updated_at int NOT NULL,
    PRIMARY KEY (id),
    KEY raw_addresses_contact_index ('contact'),
    KEY raw_addresses_created_at_index ('created_at)
);

ALTER TABLE merchant_1cc_configs ADD COLUMN value_json json DEFAULT NULL;

ALTER TABLE settlement_ondemand_feature_configs ADD COLUMN es_pricing_percent int DEFAULT NULL;

ALTER TABLE settlement_ondemands ADD COLUMN scheduled tinyint(1) DEFAULT 0;

ALTER TABLE tnc_map
    ADD COLUMN business_unit varchar(20) COLLATE utf8mb4_bin,
    ADD CONSTRAINT tnc_map_business_unit_unique UNIQUE (business_unit);

ALTER TABLE merchants
ADD COLUMN balance_threshold BIGINT DEFAULT NULL;

ALTER TABLE merchant_details
ADD COLUMN fund_addition_va_ids json DEFAULT NULL;

ALTER TABLE users ADD COLUMN old_passwords JSON DEFAULT NULL;

ALTER TABLE merchant_notification_configs
    DROP INDEX `merchant_notification_configs_merchant_id_mode_index`,
    DROP COLUMN `upper_threshold`,
    DROP COLUMN `lower_threshold`,
    DROP COLUMN `notify_at`,
    DROP COLUMN `notify_after`,
    DROP COLUMN `mode`,
    DROP COLUMN `last_enabled_at`,
    DROP COLUMN `last_disabled_at`;

ALTER table banking_account_activation_details
	ADD COLUMN verification_date int(11) default NULL;

ALTER TABLE adjustments ADD COLUMN status varchar(14) default NULL;

ALTER TABLE bank_transfers ADD COLUMN status varchar(14) default NULL;

ALTER table bank_transfers ADD COLUMN transaction_id CHAR(14) DEFAULT NULL;

ALTER table fund_account_validations ADD COLUMN transaction_id CHAR(14) DEFAULT NULL;

ALTER TABLE cards ADD COLUMN token_expiry_month CHAR(2) default NULL;

ALTER TABLE cards ADD COLUMN token_expiry_year CHAR(4) default NULL;

ALTER TABLE merchant_business_details
    ADD COLUMN `blacklisted_products_category` varchar(255) DEFAULT NULL;

ALTER TABLE user_device_details
    ADD COLUMN signup_campaign varchar(50) DEFAULT NULL;

ALTER TABLE cards
    ADD COLUMN token_last4 char(4) DEFAULT NULL;

ALTER TABLE merchant_banks
    ADD COLUMN offline TINYINT(1) DEFAULT 0;

ALTER TABLE merchant_business_details
    ADD COLUMN `business_parent_category` varchar(255) DEFAULT NULL;

ALTER TABLE merchant_details
   ADD COLUMN iec_code VARCHAR(20) DEFAULT NULL;


CREATE TABLE audit_info(
  id char(14) COLLATE utf8mb4_bin NOT NULL,
  meta json not null,
  created_at int not null,
  updated_at int not null,
  primary key (id, created_at)
) PARTITION BY RANGE (created_at) (
  PARTITION p_audit_info_07mar2022
  VALUES
    LESS THAN (1649335421),
    PARTITION p_audit_info_08mar2022
  VALUES
    LESS THAN (1649421821),
    PARTITION p_audit_info_09mar2022
  VALUES
    LESS THAN (1649508221),
    PARTITION p_audit_info_10mar2022
  VALUES
    LESS THAN (1649594621),
    PARTITION p_audit_info_11mar2022
  VALUES
    LESS THAN (1649681021),
    PARTITION p_audit_info_Max
  VALUES
    LESS THAN MAXVALUE
);

alter table
  merchants
add
  column audit_id char(14) COLLATE utf8mb4_bin DEFAULT NULL;

alter table
  merchant_details
add
  column audit_id char(14) COLLATE utf8mb4_bin DEFAULT NULL;

alter table
  merchant_business_details
add
  column audit_id char(14) COLLATE utf8mb4_bin DEFAULT NULL;

alter table
  merchant_verification_details
add
  column audit_id char(14) COLLATE utf8mb4_bin DEFAULT NULL;

alter table
  stakeholders
add
  column audit_id char(14) COLLATE utf8mb4_bin DEFAULT NULL;

alter table
  users
add
  column audit_id char(14) COLLATE utf8mb4_bin DEFAULT NULL;

alter table
  merchant_documents
add
  column audit_id char(14) COLLATE utf8mb4_bin DEFAULT NULL;

alter table
  merchant_promotion
add
  column audit_id char(14) COLLATE utf8mb4_bin DEFAULT NULL;

ALTER TABLE merchant_attributes modify value varchar(255) null;

ALTER TABLE coupons ADD COLUMN is_internal tinyint(1) DEFAULT 0;

ALTER TABLE coupons ADD COLUMN alerts json DEFAULT NULL;

ALTER TABLE promotions ADD COLUMN creator_email VARCHAR(255) DEFAULT NULL;

ALTER TABLE addresses ADD COLUMN source_id CHAR(14) collate utf8mb4_bin DEFAULT NULL;

ALTER TABLE addresses ADD COLUMN source_type varchar(20) DEFAULT NULL;

ALTER table banking_account_activation_details
    ADD application_type varchar(32) DEFAULT NULL;

ALTER TABLE external MODIFY transaction_id char(14) null;

CREATE TABLE offline_challans
(
    id char(14) NOT NULL collate utf8mb4_bin,
    virtual_account_id char(14) NOT NULL collate utf8mb4_bin,
    challan_number char(16) NOT NULL,
    status varchar(50) NOT NULL,
    bank_name varchar(50) NOT NULL,
    client_code varchar(50) NOT NULL,
    created_at int NOT NULL,
    updated_at int NOT NULL,
    deleted_at int DEFAULT NULL,
    PRIMARY KEY (id),
    ADD INDEX offline_challans_virtual_account_id_index ('virtual_account_id')
    ADD INDEX offline_challans_challan_number_index ('challan_number')
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;

CREATE TABLE offline_payments (
  id char(14) NOT NULL collate utf8mb4_bin,
  virtual_account_id char(14) NOT NULL collate utf8mb4_bin,
  merchant_id char(14) NOT NULL collate utf8mb4_bin,
  payment_id char(14) NOT NULL collate utf8mb4_bin,
  challan_number char(16) NOT NULL,
  amount bigint(20) NOT NULL,
  mode varchar(50) NOT NULL,
  status varchar(50) NOT NULL,
  description varchar(50),
  currency char(3) DEFAULT 'INR' NOT NULL,
  bank_reference_number varchar(50),
  payment_instrument_details json DEFAULT NULL,
  payer_details json DEFAULT NULL,
  payment_timestamp varchar(50),
  additional_info json DEFAULT NULL,
  client_code varchar(50) NOT NULL,
  created_at int NOT NULL,
  updated_at int NOT NULL,
  deleted_at int DEFAULT NULL,
  PRIMARY KEY (id),
  KEY `offline_payments_challan_number_index` (`challan_number`)
  ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_bin;

ALTER TABLE payouts_details
    ADD COLUMN tds_category_id INTEGER UNSIGNED DEFAULT NULL,
    ADD COLUMN tax_payment_id VARCHAR(30) DEFAULT NULL,
    ADD COLUMN additional_info JSON DEFAULT NULL,
    ADD INDEX payouts_details_tds_category_id_index (tds_category_id),
    ADD INDEX payouts_details_tax_payment_id_index (tax_payment_id);

ALTER TABLE `merchant_banks`
    ADD COLUMN `razorpaywallet` TINYINT DEFAULT 0;

CREATE TABLE merchant_otp_verification_logs
(
     id                         CHAR(14) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT
     NULL,
     merchant_id                CHAR(14) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT
     NULL,
     external_reference_number  VARCHAR (50),
     razorpay_verified          tinyint(1)  DEFAULT 0,
     contact_mobile             VARCHAR (255) NOT NULL,
     created_at                 BIGINT NOT NULL,
     updated_at                 BIGINT NOT NULL,
     otp_submission_timestamp   BIGINT,
     otp_verification_timestamp BIGINT,
     PRIMARY KEY (id),
     INDEX merchant_otp_verification_logs_mid_cnum_index (merchant_id, contact_mobile)
);

ALTER TABLE partner_configs
    ADD COLUMN sub_merchant_config JSON DEFAULT NULL;

CREATE TABLE `credit_transfers` (
  `id` char(14) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `merchant_id` char(14) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `balance_id` char(14) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `amount` bigint unsigned NOT NULL,
  `currency` char(3) NOT NULL,
  `transaction_id` char(14) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,
  `utr` varchar(64) DEFAULT NULL,
  `entity_id` char(14) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `entity_type` varchar(32) NOT NULL,
  `mode` varchar(32) DEFAULT NULL,
  `channel` varchar(32) DEFAULT NULL,
  `description` varchar(255) DEFAULT NULL,
  `status` varchar(32) DEFAULT NULL,
  `payer_name` varchar(255) DEFAULT NULL,
  `payer_account` varchar(40) DEFAULT NULL,
  `payer_ifsc` varchar(20) DEFAULT NULL,
  `payee_account_id` char(14) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL,
  `payee_account_type` varchar(32) DEFAULT NULL,
  `created_at` int NOT NULL,
  `updated_at` int NOT NULL,
  `failed_at` int DEFAULT NULL,
  `processed_at` int DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `credit_transfers_entity_id_unique` (`entity_id`),
  UNIQUE KEY `credit_transfers_transaction_id_unique` (`transaction_id`),
  KEY `credit_transfers_created_at_index` (`created_at`),
  KEY `credit_transfers_merchant_id_index` (`merchant_id`),
  KEY `credit_transfers_balance_id_index` (`balance_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1

CREATE TABLE IF NOT EXISTS address_consent_1cc_audits (
	id CHAR(14) COLLATE utf8mb4_bin NOT NULL,
	contact VARCHAR(20) COLLATE utf8mb4_bin NOT NULL,
	unique_id CHAR(36) NOT NULL,
	created_at INT(11) NOT NULL,
        deleted_at INT(11) NULL,
	PRIMARY KEY (id),
	KEY address_consent_1cc_audits_contact_index (contact),
        KEY address_consent_1cc_audits_created_at_index (created_at)
) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;


CREATE TABLE IF NOT EXISTS address_consent_1cc (
	id CHAR(14) COLLATE utf8mb4_bin NOT NULL,
	customer_id CHAR(14) COLLATE utf8mb4_bin NOT NULL,
	device_id VARCHAR(65) NOT NULL,
	created_at INT(11) NOT NULL,
        deleted_at INT(11) NULL,
	PRIMARY KEY (id),
	KEY address_consent_1cc_customer_index (customer_id),
        KEY address_consent_1cc_created_at_index (created_at)
) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;

alter table
  pricing
add
  column audit_id char(14) COLLATE utf8mb4_bin DEFAULT NULL;

CREATE TABLE IF NOT EXISTS  merchant_1cc_comments (
	id CHAR(14) COLLATE utf8mb4_bin NOT NULL,
	merchant_id CHAR(14) COLLATE utf8mb4_bin NOT NULL,
	flow VARCHAR(255) NOT NULL,
    comment VARCHAR(1023) NOT NULL,
    created_at BIGINT(11) NOT NULL,
    deleted_at BIGINT(11) NULL,
    PRIMARY KEY (id),
	KEY merchant_1cc_comments_merchant_id_index (merchant_id),
) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;

ALTER TABLE merchant_business_details
   ADD COLUMN plugin_details json DEFAULT NULL;


CREATE TABLE merchant_website(
  id char(14) COLLATE utf8mb4_bin primary key,
  merchant_id char(14) COLLATE utf8mb4_bin not null,
  deliverable_type varchar(255) default null,
  shipping_period varchar(255) default null,
  refund_request_period varchar(255) default null,
  refund_process_period varchar(255) default null,
  warranty_period varchar(255) default null,
  status char(50) DEFAULT NULL,
  grace_period BOOLEAN DEFAULT false,
  send_communication BOOLEAN DEFAULT true,
  merchant_website_details json DEFAULT NULL,
  admin_website_details json DEFAULT NULL,
  additional_data json DEFAULT NULL,
  audit_id CHAR(14) COLLATE utf8mb4_bin NOT NULL,
  created_at int not null,
  updated_at int not null,
  KEY merchant_website_merchant_id_index (merchant_id)
);


CREATE TABLE merchant_consents
  (
     id		 CHAR(14) COLLATE utf8mb4_bin  PRIMARY KEY,
     merchant_id  CHAR(14) COLLATE utf8mb4_bin NOT NULL,
     user_id      CHAR(14) COLLATE utf8mb4_bin NOT NULL,
     details_id   CHAR(14) COLLATE utf8mb4_bin DEFAULT NULL,
     metadata     JSON DEFAULT NULL,
     status       char(50) DEFAULT NULL,
     request_id   char(14) COLLATE utf8mb4_bin DEFAULT NULL,
     consent_for	 VARCHAR(300) DEFAULT NULL,
     created_at	 INT NOT NULL,
     updated_at	 INT NOT NULL,
     audit_id 	 char(14) COLLATE utf8mb4_bin DEFAULT NULL,
     KEY merchant_consents_status_index (status),
     KEY merchant_consents_request_id_index (request_id)
  );

CREATE TABLE merchant_consent_details
  (
     id	      CHAR(14) COLLATE utf8mb4_bin  PRIMARY KEY,
     url         varchar(255) NOT NULL,
     created_at  INT NOT NULL,
     updated_at	 INT NOT NULL,
     KEY merchant_consent_details_url_index (url)
  );

ALTER TABLE orgs
    ADD COLUMN `external_redirect_url` varchar(255) DEFAULT NULL,
    ADD COLUMN `external_redirect_url_text` text;

CREATE TABLE IF NOT EXISTS settlement_international_repatriation
(
    id CHAR(14) COLLATE utf8mb4_bin NOT NULL,
    merchant_id CHAR(14) COLLATE utf8mb4_bin NOT NULL,
    integration_entity VARCHAR(20) NOT NULL,
    partner_merchant_id VARCHAR(45) DEFAULT NULL,
    partner_settlement_id VARCHAR(45) DEFAULT NULL,
    partner_transaction_id VARCHAR(45) DEFAULT NULL,
    amount BIGINT unsigned NOT NULL,
    currency CHAR(3) NOT NULL,
    credit_amount BIGINT unsigned NOT NULL,
    credit_currency CHAR(3) NOT NULL,
    settlement_ids JSON,
    forex_rate DECIMAL(10,6) NOT NULL,
    settled_at INT NOT NULL,
    created_at INT NOT NULL,
    updated_at INT DEFAULT NULL,
    PRIMARY KEY (id),
    INDEX `idx_repartriation_details_merchant_id`
    (`merchant_id`)
) DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;

CREATE TABLE IF NOT EXISTS merchant_owner_details (
    id CHAR(14) COLLATE utf8mb4_bin NOT NULL,
    merchant_id CHAR(14) COLLATE utf8mb4_bin NOT NULL,
    gateway VARCHAR(45) DEFAULT NULL,
    owner_details JSON DEFAULT NULL,
    created_at INT NOT NULL,
    updated_at INT DEFAULT NULL,
    deleted_at INT DEFAULT NULL,
    PRIMARY KEY (id),
    INDEX `merchant_owner_details_merchant_id_index`
    (`merchant_id`)
) DEFAULT CHARSET=utf8mb4;

ALTER TABLE `merchant_international_integrations`
    ADD COLUMN `payment_methods` JSON NULL;

ALTER TABLE tokenised_iins
ADD COLUMN token_iin_length INT NOT NULL DEFAULT(9);

ALTER TABLE `merchant_business_details`
ADD COLUMN pg_use_case VARCHAR(500) DEFAULT NULL;

ALTER TABLE `merchant_business_details`
ADD COLUMN `onboarding_source` varchar(255) DEFAULT NULL;

ALTER TABLE bvs_validation
    ADD COLUMN fuzzy_score INTEGER DEFAULT NULL;

ALTER TABLE card_mandates
    ADD COLUMN vault_token_pan varchar(50) DEFAULT NULL;

ALTER TABLE `contacts`
      ADD COLUMN `gstin` char(15) DEFAULT NULL

ALTER TABLE cards
ADD COLUMN provider_reference_id char(14) COLLATE utf8mb4_bin DEFAULT NULL;

ALTER TABLE raw_addresses MODIFY name varchar(64) NOT NULL;

ALTER TABLE cards
alter iin set DEFAULT '0', alter name set DEFAULT '0', alter expiry_month set DEFAULT '0', alter expiry_year set DEFAULT '0';

ALTER TABLE `keys` MODIFY secret VARCHAR(256);

ALTER TABLE merchant_consents
    ADD COLUMN retry_count INTEGER DEFAULT 0,
    ADD INDEX (created_at);

ALTER TABLE merchant_documents
  ADD metadata json DEFAULT NULL;

Alter table merchants add column country_code char(2) DEFAULT ‘IN’;

Alter table merchant_details
    add column bank_branch_code_type varchar(255) DEFAULT NULL ,
    add column bank_branch_code varchar(255) DEFAULT NULL ,
    add column industry_category_code varchar(255) DEFAULT NULL ,
    add column industry_category_code_type varchar(255) DEFAULT NULL ;

ALTER TABLE merchant_website
    MODIFY COLUMN grace_period tinyint(1) DEFAULT NULL ;

CREATE TABLE clarification_details(
  id char(14) COLLATE utf8mb4_bin primary key,
  merchant_id char(14) CHARACTER SET utf8 COLLATE utf8_bin not null,
  status varchar(30) DEFAULT NULL,
  comment_data json DEFAULT NULL,
  message_from char(30) DEFAULT NULL,
  group_name varchar(255) DEFAULT NULL,
  field_details json DEFAULT NULL,
  metadata json DEFAULT NULL,
  audit_id CHAR(14) COLLATE utf8mb4_bin NOT NULL,
  created_at int not null,
  updated_at int not null,
  KEY clarification_details_merchant_id_index (merchant_id),
  KEY clarification_details_created_at_index (created_at)
) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;

ALTER TABLE stakeholders
  ADD column verification_metadata json DEFAULT NULL;

ALTER TABLE merchant_consents
    ADD COLUMN entity_id CHAR(14) COLLATE utf8mb4_bin DEFAULT NULL,
    ADD COLUMN entity_type VARCHAR(32) DEFAULT NULL;

ALTER TABLE qr_payment
    ADD COLUMN notes varchar(50) DEFAULT NULL;

ALTER TABLE `payment_meta`
    ADD COLUMN `mcc_applied` TINYINT(1) DEFAULT 0,
    ADD COLUMN `mcc_forex_rate` decimal(20,6) DEFAULT NULL,
    ADD COLUMN `mcc_mark_down_percent` decimal(5,2) DEFAULT NULL,

ALTER TABLE merchant_banks
    ADD COLUMN fpx TINYINT(1) DEFAULT 0;

ALTER TABLE tokens
    ADD COLUMN internal_error_code varchar(255);
    ADD COLUMN error_description TEXT;

ALTER TABLE partner_configs
    ADD COLUMN partner_metadata JSON DEFAULT NULL;

ALTER TABLE tokens
    ADD COLUMN source enum(`merchant`, `issuer`) NOT NULL DEFAULT `merchant`;

ALTER TABLE merchant_verification_details
ADD COLUMN metadata json DEFAULT NULL;

ALTER TABLE merchant_business_details
ADD COLUMN metadata json DEFAULT NULL;

ALTER TABLE merchant_banks
    ADD COLUMN addon_methods JSON DEFAULT NULL;

ALTER TABLE orgs
    ADD COLUMN merchant_session_timeout_in_seconds SMALLINT UNSIGNED NOT NULL DEFAULT 43200;

ALTER TABLE merchant_business_details
    ADD COLUMN miq_sharing_date INTEGER DEFAULT 0,
    ADD COLUMN testing_credentials_date INTEGER DEFAULT 0;

ALTER TABLE merchant_consents
    ADD INDEX (`merchant_id`);

ALTER TABLE admins
    ADD COLUMN password_reset_token VARCHAR(255) DEFAULT NULL,
    ADD COLUMN password_reset_expiry INTEGER DEFAULT NULL;

ALTER TABLE upi
    ADD COLUMN gateway_error TEXT DEFAULT NULL;

ALTER TABLE banking_account_statement_details
    ADD COLUMN last_reconciled_at INTEGER DEFAULT NULL;

ALTER TABLE banking_account_statement_details
    ADD INDEX banking_account_statement_details_last_reconciled_at_index (last_reconciled_at);

ALTER TABLE payment_page_records
    ADD COLUMN merchant_id CHAR(14) COLLATE utf8mb4_bin;

ALTER TABLE subscription_registrations
    ADD frequency varchar(30) DEFAULT NULL,
