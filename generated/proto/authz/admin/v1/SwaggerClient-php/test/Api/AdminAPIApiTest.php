<?php
/**
 * AdminAPIApiTest
 * PHP version 5
 *
 * @category Class
 * @package  AuthzAdmin\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * authz/admin/v1/admin_api.proto
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.25-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace AuthzAdmin\Client;

use \AuthzAdmin\Client\Configuration;
use \AuthzAdmin\Client\ApiException;
use \AuthzAdmin\Client\ObjectSerializer;

/**
 * AdminAPIApiTest Class Doc Comment
 *
 * @category Class
 * @package  AuthzAdmin\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AdminAPIApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for adminAPICreateAction
     *
     * CreateAction creates the action entity in AuthZ policy store..
     *
     */
    public function testAdminAPICreateAction()
    {
    }

    /**
     * Test case for adminAPICreatePermission
     *
     * CreatePermission creates the permission entity in AuthZ policy store..
     *
     */
    public function testAdminAPICreatePermission()
    {
    }

    /**
     * Test case for adminAPICreatePolicy
     *
     * CreatePolicy creates the policy entity in AuthZ policy store..
     *
     */
    public function testAdminAPICreatePolicy()
    {
    }

    /**
     * Test case for adminAPICreateResource
     *
     * CreateResource creates the resource entity in AuthZ policy store..
     *
     */
    public function testAdminAPICreateResource()
    {
    }

    /**
     * Test case for adminAPICreateResourceGroup
     *
     * CreateResourceGroup creates the resource group entity in AuthZ policy store..
     *
     */
    public function testAdminAPICreateResourceGroup()
    {
    }

    /**
     * Test case for adminAPICreateResourceGroupMapping
     *
     * CreateResourceGroupMapping creates the resource group mapping in AuthZ policy store..
     *
     */
    public function testAdminAPICreateResourceGroupMapping()
    {
    }

    /**
     * Test case for adminAPICreateRole
     *
     * CreateRole creates the role entity in AuthZ policy store..
     *
     */
    public function testAdminAPICreateRole()
    {
    }

    /**
     * Test case for adminAPICreateRolePolicyMapping
     *
     * CreateRolePolicyMapping adds a policy to the given role in AuthZ policy store..
     *
     */
    public function testAdminAPICreateRolePolicyMapping()
    {
    }

    /**
     * Test case for adminAPICreateService
     *
     * CreateService creates the service entity in AuthZ policy store..
     *
     */
    public function testAdminAPICreateService()
    {
    }

    /**
     * Test case for adminAPICreateSubjectRoleMapping
     *
     * CreateSubjectRoleMapping assigns the role to a subject entity in AuthZ policy store..
     *
     */
    public function testAdminAPICreateSubjectRoleMapping()
    {
    }

    /**
     * Test case for adminAPIDeleteAction
     *
     * DeleteAction deletes the action entity from AuthZ policy store..
     *
     */
    public function testAdminAPIDeleteAction()
    {
    }

    /**
     * Test case for adminAPIDeletePermission
     *
     * DeletePermission deletes the permission entity from AuthZ policy store..
     *
     */
    public function testAdminAPIDeletePermission()
    {
    }

    /**
     * Test case for adminAPIDeletePolicy
     *
     * DeletePolicy deletes the policy entity from AuthZ policy store..
     *
     */
    public function testAdminAPIDeletePolicy()
    {
    }

    /**
     * Test case for adminAPIDeleteResource
     *
     * DeleteResource deletes the resource entity from AuthZ policy store..
     *
     */
    public function testAdminAPIDeleteResource()
    {
    }

    /**
     * Test case for adminAPIDeleteResourceGroup
     *
     * DeleteResourceGroup deletes the resource group entity from AuthZ policy store..
     *
     */
    public function testAdminAPIDeleteResourceGroup()
    {
    }

    /**
     * Test case for adminAPIDeleteResourceGroupMapping
     *
     * DeleteResourceGroupMapping deletes the resource group mapping from AuthZ policy store..
     *
     */
    public function testAdminAPIDeleteResourceGroupMapping()
    {
    }

    /**
     * Test case for adminAPIDeleteRole
     *
     * DeleteRole deletes the role entity from AuthZ policy store..
     *
     */
    public function testAdminAPIDeleteRole()
    {
    }

    /**
     * Test case for adminAPIDeleteRolePolicyMapping
     *
     * DeleteRolePolicyMapping deletes a policy from the given role in AuthZ policy store..
     *
     */
    public function testAdminAPIDeleteRolePolicyMapping()
    {
    }

    /**
     * Test case for adminAPIDeleteService
     *
     * DeleteService deletes the service entity from AuthZ policy store..
     *
     */
    public function testAdminAPIDeleteService()
    {
    }

    /**
     * Test case for adminAPIDeleteSubject
     *
     * DeleteSubject detaches all roles for the given subject entity in AuthZ policy store..
     *
     */
    public function testAdminAPIDeleteSubject()
    {
    }

    /**
     * Test case for adminAPIDeleteSubjectRoleMapping
     *
     * DeleteSubjectRoleMapping detaches the role from a subject entity in AuthZ policy store..
     *
     */
    public function testAdminAPIDeleteSubjectRoleMapping()
    {
    }

    /**
     * Test case for adminAPIListAction
     *
     * ListAction returns a list of actions based on the supplied filters..
     *
     */
    public function testAdminAPIListAction()
    {
    }

    /**
     * Test case for adminAPIListPermission
     *
     * ListPermission returns a list of permissions satisfying the filter conditions..
     *
     */
    public function testAdminAPIListPermission()
    {
    }

    /**
     * Test case for adminAPIListPolicy
     *
     * ListPolicy returns a list of policies satisfying the filter conditions..
     *
     */
    public function testAdminAPIListPolicy()
    {
    }

    /**
     * Test case for adminAPIListResource
     *
     * ListResource returns a list of resources based on the supplied filters..
     *
     */
    public function testAdminAPIListResource()
    {
    }

    /**
     * Test case for adminAPIListResourceGroup
     *
     * ListResourceGroup returns a list of resource group entities from AuthZ policy store..
     *
     */
    public function testAdminAPIListResourceGroup()
    {
    }

    /**
     * Test case for adminAPIListRole
     *
     * ListRole returns a list of roles matching the filter condition..
     *
     */
    public function testAdminAPIListRole()
    {
    }

    /**
     * Test case for adminAPIListService
     *
     * ListService returns a list of services based on the supplied filters..
     *
     */
    public function testAdminAPIListService()
    {
    }

    /**
     * Test case for adminAPIRecon
     *
     * Recon is to be used for reconciliation of policies between MySQL & Consul..
     *
     */
    public function testAdminAPIRecon()
    {
    }

    /**
     * Test case for adminAPIUpdateAction
     *
     * UpdateAction creates the action entity in AuthZ policy store..
     *
     */
    public function testAdminAPIUpdateAction()
    {
    }

    /**
     * Test case for adminAPIUpdatePermission
     *
     * UpdatePermission creates the permission entity in AuthZ policy store..
     *
     */
    public function testAdminAPIUpdatePermission()
    {
    }

    /**
     * Test case for adminAPIUpdatePolicy
     *
     * UpdatePolicy creates the policy entity in AuthZ policy store..
     *
     */
    public function testAdminAPIUpdatePolicy()
    {
    }

    /**
     * Test case for adminAPIUpdateResource
     *
     * UpdateResource creates the resource entity in AuthZ policy store..
     *
     */
    public function testAdminAPIUpdateResource()
    {
    }

    /**
     * Test case for adminAPIUpdateResourceGroup
     *
     * UpdateResourceGroup updates the given resource group entity..
     *
     */
    public function testAdminAPIUpdateResourceGroup()
    {
    }

    /**
     * Test case for adminAPIUpdateRole
     *
     * UpdateRole creates the role entity in AuthZ policy store..
     *
     */
    public function testAdminAPIUpdateRole()
    {
    }

    /**
     * Test case for adminAPIUpdateService
     *
     * UpdateService creates the service entity in AuthZ policy store..
     *
     */
    public function testAdminAPIUpdateService()
    {
    }
}
