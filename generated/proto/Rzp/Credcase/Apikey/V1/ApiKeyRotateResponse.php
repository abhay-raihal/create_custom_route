<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: credcase/apikey/v1/api_key_api.proto

namespace Rzp\Credcase\Apikey\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>rzp.credcase.apikey.v1.ApiKeyRotateResponse</code>
 */
class ApiKeyRotateResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.rzp.credcase.apikey.v1.ApiKeyResponse old_key = 2;</code>
     */
    protected $old_key = null;
    /**
     * Generated from protobuf field <code>.rzp.credcase.apikey.v1.ApiKeyCreateResponse new_key = 3;</code>
     */
    protected $new_key = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Rzp\Credcase\Apikey\V1\ApiKeyResponse $old_key
     *     @type \Rzp\Credcase\Apikey\V1\ApiKeyCreateResponse $new_key
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Credcase\Apikey\V1\ApiKeyApi::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.rzp.credcase.apikey.v1.ApiKeyResponse old_key = 2;</code>
     * @return \Rzp\Credcase\Apikey\V1\ApiKeyResponse|null
     */
    public function getOldKey()
    {
        return $this->old_key;
    }

    public function hasOldKey()
    {
        return isset($this->old_key);
    }

    public function clearOldKey()
    {
        unset($this->old_key);
    }

    /**
     * Generated from protobuf field <code>.rzp.credcase.apikey.v1.ApiKeyResponse old_key = 2;</code>
     * @param \Rzp\Credcase\Apikey\V1\ApiKeyResponse $var
     * @return $this
     */
    public function setOldKey($var)
    {
        GPBUtil::checkMessage($var, \Rzp\Credcase\Apikey\V1\ApiKeyResponse::class);
        $this->old_key = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.rzp.credcase.apikey.v1.ApiKeyCreateResponse new_key = 3;</code>
     * @return \Rzp\Credcase\Apikey\V1\ApiKeyCreateResponse|null
     */
    public function getNewKey()
    {
        return $this->new_key;
    }

    public function hasNewKey()
    {
        return isset($this->new_key);
    }

    public function clearNewKey()
    {
        unset($this->new_key);
    }

    /**
     * Generated from protobuf field <code>.rzp.credcase.apikey.v1.ApiKeyCreateResponse new_key = 3;</code>
     * @param \Rzp\Credcase\Apikey\V1\ApiKeyCreateResponse $var
     * @return $this
     */
    public function setNewKey($var)
    {
        GPBUtil::checkMessage($var, \Rzp\Credcase\Apikey\V1\ApiKeyCreateResponse::class);
        $this->new_key = $var;

        return $this;
    }

}

