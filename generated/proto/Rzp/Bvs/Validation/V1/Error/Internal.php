<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: platform/bvs/validation/v1/validation.proto

namespace Rzp\Bvs\Validation\V1\Error;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * For non-production flows, the Internal message can be
 * defined for better debugging.
 *
 * Generated from protobuf message <code>platform.bvs.validation.v1.Error.Internal</code>
 */
class Internal extends \Google\Protobuf\Internal\Message
{
    /**
     * trace_id, request_id etc
     *
     * Generated from protobuf field <code>string trace_id = 1;</code>
     */
    protected $trace_id = '';
    /**
     * internal error code
     *
     * Generated from protobuf field <code>string code = 2;</code>
     */
    protected $code = '';
    /**
     * Other details/metadata
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any details = 6;</code>
     */
    private $details;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $trace_id
     *           trace_id, request_id etc
     *     @type string $code
     *           internal error code
     *     @type \Google\Protobuf\Any[]|\Google\Protobuf\Internal\RepeatedField $details
     *           Other details/metadata
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Platform\Bvs\Validation\V1\Validation::initOnce();
        parent::__construct($data);
    }

    /**
     * trace_id, request_id etc
     *
     * Generated from protobuf field <code>string trace_id = 1;</code>
     * @return string
     */
    public function getTraceId()
    {
        return $this->trace_id;
    }

    /**
     * trace_id, request_id etc
     *
     * Generated from protobuf field <code>string trace_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTraceId($var)
    {
        GPBUtil::checkString($var, True);
        $this->trace_id = $var;

        return $this;
    }

    /**
     * internal error code
     *
     * Generated from protobuf field <code>string code = 2;</code>
     * @return string
     */
    public function getCode()
    {
        return $this->code;
    }

    /**
     * internal error code
     *
     * Generated from protobuf field <code>string code = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->code = $var;

        return $this;
    }

    /**
     * Other details/metadata
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any details = 6;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDetails()
    {
        return $this->details;
    }

    /**
     * Other details/metadata
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any details = 6;</code>
     * @param \Google\Protobuf\Any[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDetails($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Any::class);
        $this->details = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Internal::class, \Rzp\Bvs\Validation\V1\Error_Internal::class);

