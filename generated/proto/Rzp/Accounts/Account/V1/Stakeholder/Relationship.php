<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/accounts/account/v1/stakeholder_api.proto

namespace Rzp\Accounts\Account\V1\Stakeholder;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>rzp.accounts.account.v1.Stakeholder.Relationship</code>
 */
class Relationship extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bool director = 1;</code>
     */
    protected $director = false;
    /**
     * Generated from protobuf field <code>bool executive = 2;</code>
     */
    protected $executive = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $director
     *     @type bool $executive
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Accounts\Account\V1\StakeholderApi::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bool director = 1;</code>
     * @return bool
     */
    public function getDirector()
    {
        return $this->director;
    }

    /**
     * Generated from protobuf field <code>bool director = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setDirector($var)
    {
        GPBUtil::checkBool($var);
        $this->director = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool executive = 2;</code>
     * @return bool
     */
    public function getExecutive()
    {
        return $this->executive;
    }

    /**
     * Generated from protobuf field <code>bool executive = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setExecutive($var)
    {
        GPBUtil::checkBool($var);
        $this->executive = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Relationship::class, \Rzp\Accounts\Account\V1\Stakeholder_Relationship::class);

